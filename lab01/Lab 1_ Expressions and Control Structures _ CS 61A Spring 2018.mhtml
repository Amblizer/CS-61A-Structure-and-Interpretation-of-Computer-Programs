From: <Saved by Blink>
Snapshot-Content-Location: https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#q7
Subject: Lab 1: Expressions and Control Structures | CS 61A Spring 2018
Date: Sat, 15 Jun 2018 19:05:28 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----"


------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: text/html
Content-ID: <frame-A44FD6315379A1B8111FF4C46CD315EA@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#q7

<!DOCTYPE html><html lang=3D"en" class=3D"gr__inst_eecs_berkeley_edu"><head=
><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-8">
    <meta name=3D"description" content=3D"CS 61A: Structure and Interpretat=
ion of Computer Programs">
    <meta name=3D"keywords" content=3D"CS 61A, Computer Science, CS, 61A, P=
rogramming, John DeNero, Berkeley, EECS">
    <meta name=3D"author" content=3D"John DeNero">
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width">

   =20
   =20
   =20
   =20
    <link rel=3D"stylesheet" href=3D"https://cdnjs.cloudflare.com/ajax/libs=
/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
    <link rel=3D"stylesheet" href=3D"https://fonts.googleapis.com/css?famil=
y=3DInconsolata|Roboto:300,400,500|Work+Sans:400,700">
    <link rel=3D"stylesheet" href=3D"https://inst.eecs.berkeley.edu/~cs61a/=
sp18/assets/css/style.css">
    <link rel=3D"stylesheet" href=3D"https://inst.eecs.berkeley.edu/~cs61a/=
sp18/assets/css/mono-blue.css">
    <link rel=3D"icon" href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/a=
ssets/images/favicon.ico">

   =20

    <title>
Lab 1: Expressions and Control Structures | CS 61A Spring 2018
</title>
  </head>

  <body id=3D"index" class=3D"home" data-gr-c-s-loaded=3D"true" style=3D"">
    <nav class=3D"navbar navbar-default navbar-static-top">
      <div class=3D"container noselect">
        <div class=3D"navbar-header">
          <button type=3D"button" class=3D"navbar-toggle collapsed" data-to=
ggle=3D"collapse" data-target=3D"#navbar-collapse-section">
            <span class=3D"icon-bar"></span>
            <span class=3D"icon-bar"></span>
            <span class=3D"icon-bar"></span>
          </button>
          <a class=3D"navbar-brand" href=3D"https://inst.eecs.berkeley.edu/=
~cs61a/sp18/">CS 61A</a>
        </div>

        <div class=3D"collapse navbar-collapse" id=3D"navbar-collapse-secti=
on">
          <ul class=3D"nav navbar-nav navbar-right">
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/weekl=
y.html">Weekly Schedule</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/offic=
e-hours.html">Office Hours</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/staff=
.html">Staff</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/resou=
rces.html">Resources</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/about.html">Policies</a></li>
            <li><a href=3D"http://tutor.cs61a.org/">Tutor</a></li>
            <li><a href=3D"https://piazza.com/berkeley/spring2018/cs61a" ta=
rget=3D"_blank">Piazza</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/extra=
.html">Extra</a></li>
          </ul>
        </div>
      </div>
    </nav>

    <main id=3D"content" class=3D"container">
     =20
<div class=3D"row">
  <div class=3D"col-md-9">
    <header>
      <h1>
       =20
Lab 1: Expressions and Control Structures

       =20
        <ul class=3D"inline-block list-inline">
          <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab=
01/lab01.zip" class=3D"label label-outline">lab01.zip</a></li>
        </ul>
       =20
      </h1>
    </header>
   =20

<p><i>Due at 11:59pm on Friday, 01/26/2018.</i></p>


<h2 id=3D"starter-files">Starter Files</h2>


<p>Download <a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01=
/lab01.zip">lab01.zip</a>.
Inside the archive, you will find starter files for the questions in this l=
ab,
  along with a copy of the <a href=3D"https://inst.eecs.berkeley.edu/~cs61a=
/sp18/lab/lab01/ok">Ok</a> autograder.</p>


<h2 id=3D"submission">Submission</h2>

<p>By the end of this lab, you should have submitted the lab with
<code>python3 ok --submit</code>. You may submit more than once before the
deadline; only the final submission will be graded.
Check that you have successfully submitted your code on
<a href=3D"https://okpy.org/">okpy.org</a>.</p>

<ul>
  <li>Questions 1, 2, 3, 4, and 5 must be completed in order to receive cre=
dit for
  the lab.</li>
  <li><p>Questions 6 and 7 (What Would Python Display?) are <strong>optiona=
l</strong>.</p>

  <p><em>It is recommended that you work on these should you finish the req=
uired
  section early, or if you are struggling with the required questions.</em>=
</p></li>
  <li><p>Questions 8, 9, 10, and 11 (More Coding Practice) are <strong>opti=
onal</strong>.</p>

  <p><em>It is recommended that you complete these problems on your own tim=
e.</em></p></li>
</ul>



   =20
<h1 id=3D"logistics">Logistics</h1>



<h2 id=3D"using-python">Using Python</h2>


<p>When running a Python file, you can use <strong>options</strong> on the =
command line
to inspect your code further. Here are a few that will come in handy.
If you want to learn more about other Python command-line options, take a l=
ook
at the <a href=3D"https://docs.python.org/3.4/using/cmdline.html">documenta=
tion</a>.</p>

<ul>
  <li><p>Using no command-line options will run the code in the file you
  provide and return you to the command line.</p>

<pre><code class=3D"hljs css"><span class=3D"hljs-selector-tag">python3</sp=
an> <span class=3D"hljs-selector-tag">lab01</span><span class=3D"hljs-selec=
tor-class">.py</span></code></pre></li>
  <li><p><strong><code>-i</code></strong>: The <code>-i</code> option runs =
your Python script, then opens an interactive
  session. In an interactive session, you run Python code line by line and =
get
  immediate feedback instead of running an entire file all at once. To exit=
,
  type <code>exit()</code> into the interpreter prompt. You can also use th=
e keyboard
  shortcut <code>Ctrl-D</code> on Linux/Mac machines or <code>Ctrl-Z  Enter=
</code> on Windows.</p>

  <p>If you edit the Python file while running it interactively, you will n=
eed to
  exit and restart the interpreter in order for those changes to take effec=
t.</p>

<pre><code class=3D"hljs css"><span class=3D"hljs-selector-tag">python3</sp=
an> <span class=3D"hljs-selector-tag">-i</span> <span class=3D"hljs-selecto=
r-tag">lab01</span><span class=3D"hljs-selector-class">.py</span></code></p=
re></li>
  <li><p><strong><code>-m doctest</code></strong>: Runs doctests in a parti=
cular file. Doctests are
  surrounded by triple quotes (<code>"""</code>) within functions. Each tes=
t consists of
  <code>&gt;&gt;&gt;</code> followed by some Python code and the expected o=
utput.</p>

<pre><code class=3D"hljs css"> <span class=3D"hljs-selector-tag">python3</s=
pan> <span class=3D"hljs-selector-tag">-m</span> <span class=3D"hljs-select=
or-tag">doctest</span> <span class=3D"hljs-selector-tag">lab01</span><span =
class=3D"hljs-selector-class">.py</span></code></pre></li>
</ul>


<h2 id=3D"using-ok">Using OK</h2>


<p>In 61A, we use a program called Ok for autograding labs, homeworks, and
projects. You should have Ok in the starter files downloaded at the start o=
f
this lab. For more information on using Ok commands, learn more
<a href=3D"http://cs61a.org/articles/using-ok.html">here</a>. To use Ok to =
run doctests for a
specified function, run the following command:</p>

<pre><code class=3D"hljs perl">python3 ok -<span class=3D"hljs-string">q &l=
t;specified function&gt;</span></code></pre>

<p>By default, only tests that did not pass will show up. You can use the <=
code>-v</code>
option to show all tests, including tests you have passed:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok -v</code></pre>

<p>Finally, when you have finished all the questions in
<a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/lab01.py">l=
ab01.py</a>, you must submit the assignment using the
<code>--submit</code> option:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok --submit</code></pre>


<h1 id=3D"topics">Topics</h1>


<p>Consult this section if you need a refresher on the material for this la=
b. It's
okay to skip directly to <a href=3D"https://inst.eecs.berkeley.edu/~cs61a/s=
p18/lab/lab01/#required-questions">the questions</a> and refer back
here should you get stuck.</p>


<h2 id=3D"expressions-and-statements">Expressions and statements</h2>


<p>Programs are made up of expressions and statements. Let's take a look at=
 the ones
you'll need to complete today's lab.</p>

<p>When you type a Python expression into the Python interpreter, its value=
 will be
printed out. As you read through the following examples, try out some simil=
ar
expressions in your own Python shell, which you can start up by typing this=
 in your
terminal:</p>

<pre><code class=3D"hljs">python3</code></pre>


<h3 id=3D"primitive-expressions">Primitive expressions</h3>


<p>Primitive expressions only take one step to evaluate. These include numb=
ers and
booleans, which just evaluate to themselves.</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; <span class=3D"hljs-number">3</span>
<span class=3D"hljs-number">3</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">1=
2.5</span>
<span class=3D"hljs-number">12.5</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; True
True</code></pre>

<p>Names are also primitive expressions. Names evaluate to the value that t=
hey are
bound to in the current environment. One way to bind a name to a value is w=
ith an
assignment statement.</p>


<h3 id=3D"assignment-statements">Assignment statements</h3>


<p>An assignment statement consists of a name and an expression. It changes=
 the state
of the program by evaluating the expression and <em>binding</em> its value =
to the name in
the current frame.</p>

<pre><code class=3D"hljs shell"><span class=3D"hljs-meta">&gt;</span><span =
class=3D"bash">&gt;&gt; a =3D (100 + 50) // 2</span></code></pre>

<p>Note that the statement itself doesn't evaluate to anything, because it'=
s a
statement and not an expression. Now, if we ask for <code>a</code>'s value,=
 the interpreter
will look it up in the current environment and output its value.</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; a
<span class=3D"hljs-number">75</span></code></pre>

<p>Note that the name <code>a</code> is bound to the <em>value</em> 75, <em=
>not</em> the expression
<code>(100 + 50) // 2</code>. <strong>Names are bound to values, not expres=
sions.</strong></p>


<h3 id=3D"boolean-operators">Boolean Operators</h3>


<p>Python supports three boolean operators: <code>and</code>, <code>or</cod=
e>, and <code>not</code>:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>a =3D <span class=3D"hljs-number">4</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>a &lt; <span class=3D"hljs-nu=
mber">2</span> <span class=3D"hljs-keyword">and</span> a &gt; <span class=
=3D"hljs-number">0</span>
<span class=3D"hljs-keyword">False</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>a &lt; <span class=3D"hljs-nu=
mber">2</span> <span class=3D"hljs-keyword">or</span> a &gt; <span class=3D=
"hljs-number">0</span>
<span class=3D"hljs-keyword">True</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
not</span> (a &gt; <span class=3D"hljs-number">0</span>)
<span class=3D"hljs-keyword">False</span></code></pre>

<ul>
  <li><code>and</code> evaluates to <code>True</code> only if both operands=
 evaluate to <code>True</code>.
  If at least one operand is <code>False</code>, then <code>and</code> eval=
uates to <code>False</code>.</li>
  <li><code>or</code> evaluates to <code>True</code> if at least one operan=
d evaluates to <code>True</code>.
  If both operands are <code>False</code>, then <code>or</code> evaluates t=
o <code>False</code>.</li>
  <li><code>not</code> evaluates to <code>True</code> if its operand evalua=
tes to <code>False</code>. It evaluates
  to <code>False</code> if its operand evalutes to <code>True</code>.</li>
</ul>

<p>What do you think the following expression evaluates to? Try it out in t=
he
Python interpreter.</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-keyword">True</span> <span class=3D"hljs-keyword">a=
nd</span> <span class=3D"hljs-keyword">not</span> <span class=3D"hljs-keywo=
rd">False</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs=
-keyword">not</span> <span class=3D"hljs-keyword">True</span> <span class=
=3D"hljs-keyword">and</span> <span class=3D"hljs-keyword">False</span></cod=
e></pre>

<p>It is difficult to read complex expressions, like the one above, and und=
erstand
how a program will behave. Using parentheses can make your code easier to
understand. Just so you know, Python interprets that expression in the
following way:</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>(<span class=3D"hljs-keyword">True</span> <span class=3D"hljs-keyword">=
and</span> (<span class=3D"hljs-keyword">not</span> <span class=3D"hljs-key=
word">False</span>)) <span class=3D"hljs-keyword">or</span> ((<span class=
=3D"hljs-keyword">not</span> <span class=3D"hljs-keyword">True</span>) <spa=
n class=3D"hljs-keyword">and</span> <span class=3D"hljs-keyword">False</spa=
n>)</code></pre>

<p>This is because boolean operators, like arithmetic operators, have an or=
der of operation:</p>

<ul>
  <li><code>not</code> has the highest priority</li>
  <li><code>and</code></li>
  <li><code>or</code> has the lowest priority</li>
</ul>

<p>It turns out <code>and</code> and <code>or</code> work on more than just=
 booleans (<code>True</code>,
<code>False</code>). Python values such as <code>0</code>, <code>None</code=
>, <code>''</code> (the empty string), and <code>[]</code>
(the empty list) are considered false values. All other values are consider=
ed
true values.</p>


<h4 id=3D"short-circuiting">Short Circuiting</h4>


<p>What do you think will happen if we type the following into Python?</p>

<pre><code class=3D"hljs">1 / 0</code></pre>

<p>Try it out in Python! You should see a <code>ZeroDivisionError</code>. B=
ut what about this expression?</p>

<pre><code class=3D"hljs php"><span class=3D"hljs-keyword">True</span> <spa=
n class=3D"hljs-keyword">or</span> <span class=3D"hljs-number">1</span> / <=
span class=3D"hljs-number">0</span></code></pre>

<p>It evaluates to <code>True</code> because Python's <code>and</code> and =
<code>or</code> operators <em>short-circuit</em>. That is, they don't neces=
sarily evaluate every operand.</p>

<div class=3D"table-responsive">
  <table class=3D"table table-bordered">
    <tbody><tr>
      <th>Operator</th>
      <th>Checks if:</th>
      <th>Evaluates from left to right up to:</th>
      <th>Example</th>
    </tr>
    <tr>
      <td>AND</td>
      <td>All values are true</td>
      <td>The first false value</td>
      <td><code>False and 1 / 0</code> evaluates to <code>False</code></td>
    </tr>
    <tr>
      <td>OR</td>
      <td>At least one value is true</td>
      <td>The first true value</td>
      <td><code>True or 1 / 0</code> evaluates to <code>True</code></td>
    </tr>
  </tbody></table>
</div>

<p>Short-circuiting happens when the operator reaches an operand that allow=
s them to make a conclusion about the expression. For example, <code>and</c=
ode> will short-circuit as soon as it reaches the first false value because=
 it then knows that not all the values are true.</p>

<p>If <code>and</code> and <code>or</code> do not <em>short-circuit</em>, t=
hey just return the last
value. Keep in mind that <code>and</code> and <code>or</code> don't always =
return booleans when using
values other than <code>True</code> and <code>False</code>.</p>


<h3 id=3D"division">Division</h3>


<p>Let's compare the different division-related operators in Python:</p>

<div class=3D"table-responsive">
    <table class=3D"table table-bordered">
      <tbody><tr>
        <th>True Division: <code>/</code> <br> (decimal division) </th>
        <th>Floor Division: <code>//</code> <br> (integer division) </th>
        <th>Modulo: <code>%</code> <br> (remainder) </th>

  </tr>
  <tr>
    <td align=3D"left">
<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; <span class=3D"hljs-number">1</span> / <span class=3D"hljs-number">5</spa=
n>
<span class=3D"hljs-number">0</span>.<span class=3D"hljs-number">2</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">2=
5</span> / <span class=3D"hljs-number">4</span>
<span class=3D"hljs-number">6.25</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">4=
</span> / <span class=3D"hljs-number">2</span>
<span class=3D"hljs-number">2.0</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">5=
</span> / <span class=3D"hljs-number">0</span>
ZeroDivisionError
</code></pre>
    </td>
    <td align=3D"left">
<pre><code class=3D"hljs shell"><span class=3D"hljs-meta">&gt;</span><span =
class=3D"bash">&gt;&gt; 1 // 5</span>
0
<span class=3D"hljs-meta">
&gt;</span><span class=3D"bash">&gt;&gt; 25 // 4</span>
6
<span class=3D"hljs-meta">
&gt;</span><span class=3D"bash">&gt;&gt; 4 // 2</span>
2
<span class=3D"hljs-meta">
&gt;</span><span class=3D"bash">&gt;&gt; 5 // 0</span>
ZeroDivisionError
</code></pre>
    </td>
    <td align=3D"left">
<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; <span class=3D"hljs-number">1</span> % <span class=3D"hljs-number">5</spa=
n>
<span class=3D"hljs-number">1</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">2=
5</span> % <span class=3D"hljs-number">4</span>
<span class=3D"hljs-number">1</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">4=
</span> % <span class=3D"hljs-number">2</span>
<span class=3D"hljs-number">0</span>

<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">5=
</span> % <span class=3D"hljs-number">0</span>
ZeroDivisionError
</code></pre>
    </td>
  </tr>
</tbody></table>
</div>

<p>Notice that Python outputs <code>ZeroDivisionError</code> for certain ca=
ses. We will go over this later in this lab under <a href=3D"https://inst.e=
ecs.berkeley.edu/~cs61a/sp18/lab/lab01/#error-messages">Error Messages</a>.=
</p>

<p>One useful technique involving the <code>%</code> operator is to check
whether a number <code>x</code> is divisible by another number <code>y</cod=
e>:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">x</span> % y=
 =3D=3D <span class=3D"hljs-number">0</span></code></pre>

<p>For example, in order to check if <code>x</code> is an even number:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">x</span> % <=
span class=3D"hljs-number">2</span> =3D=3D <span class=3D"hljs-number">0</s=
pan></code></pre>


<h2 id=3D"functions">Functions</h2>


<p>If we want to execute a series of statements over and over, we can abstr=
act them away
into a function to avoid repeating code.</p>

<p>For example, let's say we want to know the results of multiplying the nu=
mbers 1-3 by
3 and then adding 2 to it. Here's one way to do it:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; <span class=3D"hljs-number">1</span> * <span class=3D"hljs-number">3</spa=
n> + <span class=3D"hljs-number">2</span>
<span class=3D"hljs-number">5</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">2=
</span> * <span class=3D"hljs-number">3</span> + <span class=3D"hljs-number=
">2</span>
<span class=3D"hljs-number">8</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; <span class=3D"hljs-number">3=
</span> * <span class=3D"hljs-number">3</span> + <span class=3D"hljs-number=
">2</span>
<span class=3D"hljs-number">11</span></code></pre>

<p>If we wanted to do this with a larger set of numbers, that'd be a lot of=
 repeated
code! Let's write a function to capture this operation given any input numb=
er.</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">foo</span><span cla=
ss=3D"hljs-params">(x)</span>:</span>
    <span class=3D"hljs-keyword">return</span> x * <span class=3D"hljs-numb=
er">3</span> + <span class=3D"hljs-number">2</span></code></pre>

<p>This function, called <code>foo</code>, takes in a single <strong>argume=
nt</strong> and will <strong>return</strong> the
result of multiplying that argument by 3 and adding 2.</p>

<p>Now we can <strong>call</strong> this function whenever we want this ope=
ration to be done:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; foo(<span class=3D"hljs-number">1</span>)
<span class=3D"hljs-number">5</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; foo(<span class=3D"hljs-numbe=
r">2</span>)
<span class=3D"hljs-number">8</span>
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; foo(<span class=3D"hljs-numbe=
r">1000</span>)
<span class=3D"hljs-number">3002</span></code></pre>

<p>Applying a function to some arguments is done with a <strong>call expres=
sion</strong>.</p>


<h3 id=3D"call-expressions">Call expressions</h3>


<p>A call expression applies a function, which may or may not accept
arguments. The call expression evaluates to the function's return value.</p=
>

<p>The syntax of a function call:</p>

<pre><code class=3D"hljs cs">  <span class=3D"hljs-keyword">add</span>   ( =
   <span class=3D"hljs-number">2</span>   ,    <span class=3D"hljs-number">=
3</span>   )
   |         |        |
<span class=3D"hljs-keyword">operator</span>  operand  operand</code></pre>

<p>Every call expression requires a set of parentheses delimiting its
comma-separated operands.</p>

<p>To evaluate a function call:</p>

<ol>
  <li>Evaluate the operator, and then the operands (from left to right).</l=
i>
  <li>Apply the operator to the operands (the values of the operands).</li>
</ol>

<p>If an operand is a nested call expression, then these two steps are
applied to that operand in order to evaluate it.</p>


<h3 id=3D"return-and-print"><code>return</code> and <code>print</code></h3>


<p>Most functions that you define will contain a <code>return</code> statem=
ent. The <code>return</code>
statement will give the result of some computation back to the caller of th=
e
function and exit the function. For example, the function <code>square</cod=
e> below takes
in a number <code>x</code> and returns its square.</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">square</span><span =
class=3D"hljs-params">(x)</span>:</span>
    <span class=3D"hljs-string">"""
    &gt;&gt;&gt; square(4)
    16
    """</span>
    <span class=3D"hljs-keyword">return</span> x * x</code></pre>

<p>When Python executes a <code>return</code> statement, the function termi=
nates immediately.
If Python reaches the end of the function body without executing a <code>re=
turn</code>
statement, it will automatically return <code>None</code>.</p>

<p>In contrast, the <code>print</code> function is used to display values i=
n the Terminal.
This can lead to some confusion between <code>print</code> and <code>return=
</code> because calling a
function in the Python interpreter will print out the function's return val=
ue.</p>

<p>However, unlike a <code>return</code> statement, when Python evaluates a=
 <code>print</code>
expression, the function does <em>not</em> terminate immediately.</p>

<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">what_prints</span><=
span class=3D"hljs-params">()</span>:</span>
    print(<span class=3D"hljs-string">'Hello World!'</span>)
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-string">=
'Exiting this function.'</span>
    print(<span class=3D"hljs-string">'61A is awesome!'</span>)

<span class=3D"hljs-meta">&gt;&gt;&gt; </span>what_prints()
Hello World!
<span class=3D"hljs-string">'Exiting this function.'</span></code></pre>

<blockquote><p>Notice also that <code>print</code> will display text <stron=
g>without the quotes</strong>, but
<code>return</code> will preserve the quotes.</p></blockquote>


<h2 id=3D"control">Control</h2>



<h3 id=3D"if-statements">If Statements</h3>


<p>You can review the syntax of <code>if</code> statements in
<a href=3D"http://composingprograms.com/pages/15-control.html#conditional-s=
tatements">Section 1.5.4</a>
of Composing Programs.</p>

<blockquote><p><em>Tip</em>: We sometimes see code that looks like this:</p=
>

<pre><code class=3D"hljs php"><span class=3D"hljs-keyword">if</span> x &gt;=
 <span class=3D"hljs-number">3</span>:
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword"=
>True</span>
<span class=3D"hljs-keyword">else</span>:
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword"=
>False</span></code></pre>

<p>This can be written more concisely as <code>return x &gt; 3</code>. If y=
our code looks like
the code above, see if you can rewrite it more clearly!</p></blockquote>


<h3 id=3D"while-loops">While Loops</h3>


<p>You can review the syntax of <code>while</code> loops in
<a href=3D"http://composingprograms.com/pages/15-control.html#iteration">Se=
ction 1.5.5</a>
of Composing Programs.</p>


<h2 id=3D"error-messages">Error Messages</h2>


<p>By now, you've probably seen a couple of error messages.
They might look intimidating, but error messages are very helpful
for debugging code. The following are some common types of errors:</p>

<div class=3D"table-responsive">
  <table class=3D"table table-bordered">
    <tbody><tr>
      <th>Error Types</th>
      <th>Descriptions</th>
    </tr>
    <tr>
      <td>SyntaxError</td>
      <td align=3D"left">Contained improper syntax (e.g. missing a colon af=
ter an <code>if</code> statement or forgetting to close parentheses/quotes)=
</td>
    </tr>
    <tr>
      <td>IndentationError</td>
      <td align=3D"left">Contained improper indentation (e.g. inconsistent =
indentation of a function body)</td>
    </tr>
    <tr>
      <td>TypeError</td>
      <td align=3D"left">Attempted operation on incompatible types (e.g. tr=
ying to add a function and a number) or called function with the wrong numb=
er of arguments</td>
    </tr>
    <tr>
      <td>ZeroDivisionError</td>
      <td align=3D"left">Attempted division by zero</td>
    </tr>
  </tbody></table>
</div>

<p>Using these descriptions of error messages, you should be able to get
a better idea of what went wrong with your code. <strong>If you run into
error messages, try to identify the problem before asking for
help.</strong> You can often Google unfamiliar error messages to see if oth=
ers have
made similar mistakes to help you debug.</p>

<p>For example:</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; square(<span class=3D"hljs-number">3</span>, <span class=3D"hljs-number">=
3</span>)
Traceback (most recent call last):
  File <span class=3D"hljs-string">"&lt;stdin&gt;"</span>, line <span class=
=3D"hljs-number">1</span>, <span class=3D"hljs-keyword">in</span> &lt;<span=
 class=3D"hljs-class"><span class=3D"hljs-keyword">module</span>&gt;</span>
<span class=3D"hljs-symbol">TypeError:</span> square() takes <span class=3D=
"hljs-number">1</span> positional argument but <span class=3D"hljs-number">=
2</span> were given</code></pre>

<p>Note:</p>

<ul>
  <li>The last line of an error message tells us the type of the error. In =
the
  example above, we have a <code>TypeError</code>.</li>
  <li>The error message tells us what we did wrong -- we gave <code>square<=
/code> 2 arguments
  when it can only take in 1 argument. In general, the last line is the mos=
t
  helpful.</li>
  <li>The second to last line of the error message tells us on which line t=
he
  error occurred. This helps us track down the error. In the example above,
  <code>TypeError</code> occurred at <code>line 1</code>.</li>
</ul>


<h1 id=3D"required-questions">Required Questions</h1>



<h2 id=3D"what-would-python-display-part-1">What Would Python Display (Part=
 1)?</h2>


<h3 class=3D"question" id=3D"q1">Q1: WWPD: Veritasiness</h3>

<blockquote><p>Use Ok to test your knowledge with the following "What Would=
 Python Display?"
questions:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok -q short_circuiting -u</code></pre></blockquote>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-keyword">True</span> <span class=3D"hljs-keyword">a=
nd</span> <span class=3D"hljs-number">13</span>
<div class=3D"alt prompt-1">______</div><div class=3D"solution prompt-1">13=
</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
False</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-num=
ber">0</span>
<div class=3D"alt prompt-1">______</div><div class=3D"solution prompt-1">0<=
/div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
not</span> <span class=3D"hljs-number">10</span>
<div class=3D"alt prompt-1">______</div><div class=3D"solution prompt-1">Fa=
lse</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
not</span> <span class=3D"hljs-keyword">None</span>
<div class=3D"alt prompt-1">______</div><div class=3D"solution prompt-1">Tr=
ue</div></code></pre>
        <button id=3D"prompt-1" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-keyword">True</span> <span class=3D"hljs-keyword">a=
nd</span> <span class=3D"hljs-number">1</span> / <span class=3D"hljs-number=
">0</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-keyw=
ord">False</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">Er=
ror (ZeroDivisionError)</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
True</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-numb=
er">1</span> / <span class=3D"hljs-number">0</span> <span class=3D"hljs-key=
word">or</span> <span class=3D"hljs-keyword">False</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">Tr=
ue</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
True</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-num=
ber">0</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">0<=
/div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
False</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-num=
ber">1</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">1<=
/div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-number">1=
</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-number"=
>3</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-numbe=
r">6</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-num=
ber">10</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-=
number">15</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">15=
</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-number">0=
</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-keyword"=
>False</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-nu=
mber">2</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-n=
umber">1</span> / <span class=3D"hljs-number">0</span>
<div class=3D"alt prompt-2">______</div><div class=3D"solution prompt-2">2<=
/div></code></pre>
        <button id=3D"prompt-2" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-keyword">not</span> <span class=3D"hljs-number">0</=
span>
<div class=3D"alt prompt-3">______</div><div class=3D"solution prompt-3">Tr=
ue</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>(<span class=3D"hljs-number">=
1</span> + <span class=3D"hljs-number">1</span>) <span class=3D"hljs-keywor=
d">and</span> <span class=3D"hljs-number">1</span>
<div class=3D"alt prompt-3">______</div><div class=3D"solution prompt-3">1<=
/div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-number">1=
</span>/<span class=3D"hljs-number">0</span> <span class=3D"hljs-keyword">o=
r</span> <span class=3D"hljs-keyword">True</span>
<div class=3D"alt prompt-3">______</div><div class=3D"solution prompt-3">Er=
ror</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>(<span class=3D"hljs-keyword"=
>True</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-key=
word">False</span>) <span class=3D"hljs-keyword">and</span> <span class=3D"=
hljs-keyword">False</span>
<div class=3D"alt prompt-3">______</div><div class=3D"solution prompt-3">Fa=
lse</div></code></pre>
        <button id=3D"prompt-3" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q2">Q2: WWPD: Loops</h3>

<blockquote><p>Use Ok to test your knowledge with the following "What Would=
 Python Display?"
questions:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok -q loops -u</code></pre></blockquote>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>n =3D <span class=3D"hljs-number">3</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
while</span> n &gt;=3D <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>    n -=3D <span class=3D"hljs-number"=
>1</span>
<span class=3D"hljs-meta">... </span>    print(n)
<div class=3D"alt prompt-4">______</div><div class=3D"solution prompt-4">2
<span class=3D"hljs-number">1</span>
<span class=3D"hljs-number">0</span>
<span class=3D"hljs-number">-1</span></div></code></pre>
        <button id=3D"prompt-4" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<blockquote><p><em>Hint</em>: Make sure your <code>while</code> loop condit=
ions eventually evaluate to a false
value, or they'll never stop! Typing <code>Ctrl-C</code> will stop infinite=
 loops in the
interpreter.</p></blockquote>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>n =3D <span class=3D"hljs-number">4</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
while</span> n &gt; <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>    n +=3D <span class=3D"hljs-number"=
>1</span>
<span class=3D"hljs-meta">... </span>    print(n)
<div class=3D"alt prompt-5">______</div><div class=3D"solution prompt-5">5
<span class=3D"hljs-number">6</span>
<span class=3D"hljs-number">7</span>
<span class=3D"hljs-comment"># continues forever</span></div></code></pre>
        <button id=3D"prompt-5" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">go</span><span class=3D"hljs-params">(n)</span>:<=
/span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> n % <span class=3D"hljs-number">2</span> !=3D <span class=3D"hljs-numb=
er">0</span>:
<span class=3D"hljs-meta">... </span>        print(n / <span class=3D"hljs-=
number">2</span>)
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">while=
</span> n &gt; <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>        print(n)
<span class=3D"hljs-meta">... </span>        n =3D n // <span class=3D"hljs=
-number">2</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>go(<span class=3D"hljs-number=
">4</span>)
<div class=3D"alt prompt-6">______</div><div class=3D"solution prompt-6">4
<span class=3D"hljs-number">2</span>
<span class=3D"hljs-number">1</span></div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>go(<span class=3D"hljs-number=
">5</span>)
<div class=3D"alt prompt-6">______</div><div class=3D"solution prompt-6">2<=
span class=3D"hljs-number">.5</span></div></code></pre>
        <button id=3D"prompt-6" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>zero =3D <span class=3D"hljs-number">2</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
while</span> zero !=3D <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>   zero =3D zero // <span class=3D"hlj=
s-number">2</span>
<span class=3D"hljs-meta">... </span>   print(zero)
<div class=3D"alt prompt-7">______</div><div class=3D"solution prompt-7">1
<span class=3D"hljs-number">0</span></div></code></pre>
        <button id=3D"prompt-7" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>positive =3D <span class=3D"hljs-number">28</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
while</span> positive:
<span class=3D"hljs-meta">... </span>   print(<span class=3D"hljs-string">"=
positive?"</span>)
<span class=3D"hljs-meta">... </span>   positive -=3D <span class=3D"hljs-n=
umber">3</span>
<div class=3D"alt prompt-8">______</div><div class=3D"solution prompt-8">In=
finite Loop</div></code></pre>
        <button id=3D"prompt-8" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan>positive =3D <span class=3D"hljs-number">-9</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>negative =3D <span class=3D"h=
ljs-number">-12</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
while</span> negative:
<span class=3D"hljs-meta">... </span>   <span class=3D"hljs-keyword">if</sp=
an> positive:
<span class=3D"hljs-meta">... </span>       print(negative)
<span class=3D"hljs-meta">... </span>   positive +=3D <span class=3D"hljs-n=
umber">3</span>
<span class=3D"hljs-meta">... </span>   negative +=3D <span class=3D"hljs-n=
umber">3</span>
<div class=3D"alt prompt-9">______</div><div class=3D"solution prompt-9"><s=
pan class=3D"hljs-number">-12</span>
<span class=3D"hljs-number">-9</span>
<span class=3D"hljs-number">-6</span></div></code></pre>
        <button id=3D"prompt-9" class=3D"btn btn-outline btn-lg toggle prom=
pt">
        Toggle Solution
        </button>
       =20


<h2 id=3D"coding-practice">Coding Practice</h2>


<h3 class=3D"question" id=3D"q3">Q3: Repeated</h3>

<p>Implement the <code>repeated</code> function, which takes a one-argument=
 function <code>f</code>, a
positive integer <code>n</code>, and a parameter <code>x</code>. It returns=
 the result of <em>composing</em>,
or applying, <code>f</code> <code>n</code> times on <code>x</code>, i.e., <=
code>f(f(...f(x)...))</code>.</p>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">repeated</span><spa=
n class=3D"hljs-params">(f, n, x)</span>:</span>
    <span class=3D"hljs-string">"""Returns the result of composing f n time=
s on x.

    &gt;&gt;&gt; def square(x):
    ...     return x * x
    ...
    &gt;&gt;&gt; repeated(square, 2, 3)  # square(square(3)), or 3 ** 4
    81
    &gt;&gt;&gt; repeated(square, 1, 4)  # square(4)
    16
    &gt;&gt;&gt; repeated(square, 6, 2)  # big number
    18446744073709551616
    &gt;&gt;&gt; def opposite(b):
    ...     return not b
    ...
    &gt;&gt;&gt; repeated(opposite, 4, True)
    True
    &gt;&gt;&gt; repeated(opposite, 5, True)
    False
    &gt;&gt;&gt; repeated(opposite, 631, 1)
    False
    &gt;&gt;&gt; repeated(opposite, 3, 0)
    True
    """</span>
<div class=3D"alt solution-1">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-1">    result =3D x
    <span class=3D"hljs-keyword">while</span> n &gt; <span class=3D"hljs-nu=
mber">0</span>:
        result =3D f(result)
        n -=3D <span class=3D"hljs-number">1</span>
    <span class=3D"hljs-keyword">return</span> result</div></code></pre>


        <button id=3D"solution-1" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>Use Ok to test your code:</p><pre><code class=3D"nohighlight">python3 ok=
 -q repeated</code></pre>

<h3 class=3D"question" id=3D"q4">Q4: Sum Digits</h3>

<p>Write a function that takes in a nonnegative integer and sums its digits=
. (Using=20
floor division and modulo might be helpful here!)</p>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">sum_digits</span><s=
pan class=3D"hljs-params">(n)</span>:</span>
    <span class=3D"hljs-string">"""Sum all the digits of n.

    &gt;&gt;&gt; sum_digits(10) # 1 + 0 =3D 1
    1
    &gt;&gt;&gt; sum_digits(4224) # 4 + 2 + 2 + 4 =3D 12
    12
    &gt;&gt;&gt; sum_digits(1234567890)
    45
    """</span>
<div class=3D"alt solution-2">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-2">    total =3D <span class=3D"hljs-=
number">0</span>
    <span class=3D"hljs-keyword">while</span> n &gt; <span class=3D"hljs-nu=
mber">0</span>:
        total, n =3D total + n % <span class=3D"hljs-number">10</span>, n /=
/ <span class=3D"hljs-number">10</span>
    <span class=3D"hljs-keyword">return</span> total</div></code></pre>


        <button id=3D"solution-2" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>Use Ok to test your code:</p><pre><code class=3D"nohighlight">python3 ok=
 -q sum_digits</code></pre>

<h3 class=3D"question" id=3D"q5">Q5: Double Eights</h3>

<p>Write a function that takes in a number and determines if the digits con=
tain two
adjacent 8s.</p>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">double_eights</span=
><span class=3D"hljs-params">(n)</span>:</span>
    <span class=3D"hljs-string">"""Return true if n has two eights in a row=
.
    &gt;&gt;&gt; double_eights(8)
    False
    &gt;&gt;&gt; double_eights(88)
    True
    &gt;&gt;&gt; double_eights(2882)
    True
    &gt;&gt;&gt; double_eights(880088)
    True
    &gt;&gt;&gt; double_eights(12345)
    False
    &gt;&gt;&gt; double_eights(80808080)
    False
    """</span>
<div class=3D"alt solution-3">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-3">    prev_eight =3D <span class=3D"=
hljs-keyword">False</span>
    <span class=3D"hljs-keyword">while</span> n &gt; <span class=3D"hljs-nu=
mber">0</span>:
        last_digit =3D n % <span class=3D"hljs-number">10</span>
        <span class=3D"hljs-keyword">if</span> last_digit =3D=3D <span clas=
s=3D"hljs-number">8</span> <span class=3D"hljs-keyword">and</span> prev_eig=
ht:
            <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-=
keyword">True</span>
        <span class=3D"hljs-keyword">elif</span> last_digit =3D=3D <span cl=
ass=3D"hljs-number">8</span>:
            prev_eight =3D <span class=3D"hljs-keyword">True</span>
        <span class=3D"hljs-keyword">else</span>:
            prev_eight =3D <span class=3D"hljs-keyword">False</span>
        n =3D n // <span class=3D"hljs-number">10</span>
    <span class=3D"hljs-keyword">return</span> <span class=3D"hljs-keyword"=
>False</span></div></code></pre>


        <button id=3D"solution-3" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>Use Ok to test your code:</p><pre><code class=3D"nohighlight">python3 ok=
 -q double_eights</code></pre>


<h1 id=3D"optional-questions">Optional Questions</h1>



<h2 id=3D"what-would-python-display-part-2">What Would Python Display (Part=
 2)?</h2>


<h3 class=3D"question" id=3D"q6">Q6: WWPD: Truthiness</h3>

<blockquote><p>Use Ok to test your knowledge with the following "What Would=
 Python Display?"
questions:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok -q truthiness -u</code></pre></blockquote>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-number">0</span> <span class=3D"hljs-keyword">or</s=
pan> <span class=3D"hljs-keyword">True</span>
<div class=3D"alt prompt-10">______</div><div class=3D"solution prompt-10">=
True</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
not</span> <span class=3D"hljs-string">''</span> <span class=3D"hljs-keywor=
d">or</span> <span class=3D"hljs-keyword">not</span> <span class=3D"hljs-nu=
mber">0</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-=
keyword">False</span>
<div class=3D"alt prompt-10">______</div><div class=3D"solution prompt-10">=
True</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-number">1=
3</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-keywor=
d">False</span>
<div class=3D"alt prompt-10">______</div><div class=3D"solution prompt-10">=
False</div></code></pre>
        <button id=3D"prompt-10" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-keyword">False</span> <span class=3D"hljs-keyword">=
or</span> <span class=3D"hljs-number">1</span>
<div class=3D"alt prompt-11">______</div><div class=3D"solution prompt-11">=
1</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-string">'=
'</span> <span class=3D"hljs-keyword">or</span> <span class=3D"hljs-number"=
>1</span> <span class=3D"hljs-keyword">and</span> <span class=3D"hljs-numbe=
r">1</span>/<span class=3D"hljs-number">0</span>
<div class=3D"alt prompt-11">______</div><div class=3D"solution prompt-11">=
Error</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span><span class=3D"hljs-keyword">=
not</span> <span class=3D"hljs-number">0</span> <span class=3D"hljs-keyword=
">and</span> <span class=3D"hljs-number">12</span> <span class=3D"hljs-keyw=
ord">or</span> <span class=3D"hljs-number">0</span>
<div class=3D"alt prompt-11">______</div><div class=3D"solution prompt-11">=
12</div></code></pre>
        <button id=3D"prompt-11" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<h3 class=3D"question" id=3D"q7">Q7: WWPD: What If?</h3>

<blockquote><p>Use Ok to test your knowledge with the following "What Would=
 Python Display?"
questions:</p>

<pre><code class=3D"hljs nginx"><span class=3D"hljs-attribute">python3</spa=
n> ok -q what_if -u</code></pre></blockquote>

<p>The functions below are already defined in <code>lab01.py</code>. If you=
 get stuck, try
<code>python3 -i lab01.py</code> and experiment.</p>

<blockquote><p><strong>Hint</strong>: <code>print</code> (unlike <code>retu=
rn</code>) does <em>not</em> cause the function to exit!</p></blockquote>

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">xk</span><span class=3D"hljs-params">(c, d)</span=
>:</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> c =3D=3D <span class=3D"hljs-number">4</span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> <span class=3D"hljs-number">6</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">elif<=
/span> d &gt;=3D <span class=3D"hljs-number">4</span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> <span class=3D"hljs-number">6</span> + <span class=3D"hljs-num=
ber">7</span> + c
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">else<=
/span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> <span class=3D"hljs-number">25</span>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>xk(<span class=3D"hljs-number=
">10</span>, <span class=3D"hljs-number">10</span>)
<div class=3D"alt prompt-12">______</div><div class=3D"solution prompt-12">=
23</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>xk(<span class=3D"hljs-number=
">10</span>, <span class=3D"hljs-number">6</span>)
<div class=3D"alt prompt-12">______</div><div class=3D"solution prompt-12">=
23</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>xk(<span class=3D"hljs-number=
">4</span>, <span class=3D"hljs-number">6</span>)
<div class=3D"alt prompt-12">______</div><div class=3D"solution prompt-12">=
6</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>xk(<span class=3D"hljs-number=
">0</span>, <span class=3D"hljs-number">0</span>)
<div class=3D"alt prompt-12">______</div><div class=3D"solution prompt-12">=
25</div></code></pre>
        <button id=3D"prompt-12" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">how_big</span><span class=3D"hljs-params">(x)</sp=
an>:</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> x &gt; <span class=3D"hljs-number">10</span>:
<span class=3D"hljs-meta">... </span>        print(<span class=3D"hljs-stri=
ng">'huge'</span>)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">elif<=
/span> x &gt; <span class=3D"hljs-number">5</span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> <span class=3D"hljs-string">'big'</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">elif<=
/span> x &gt; <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>        print(<span class=3D"hljs-stri=
ng">'small'</span>)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">else<=
/span>:
<span class=3D"hljs-meta">... </span>        print(<span class=3D"hljs-stri=
ng">"nothin'"</span>)
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>how_big(<span class=3D"hljs-n=
umber">7</span>)
<div class=3D"alt prompt-13">______</div><div class=3D"solution prompt-13">=
<span class=3D"hljs-string">'big'</span></div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>how_big(<span class=3D"hljs-n=
umber">12</span>)
<div class=3D"alt prompt-13">______</div><div class=3D"solution prompt-13">=
huge</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>how_big(<span class=3D"hljs-n=
umber">1</span>)
<div class=3D"alt prompt-13">______</div><div class=3D"solution prompt-13">=
small</div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>how_big(<span class=3D"hljs-n=
umber">-1</span>)
<div class=3D"alt prompt-13">______</div><div class=3D"solution prompt-13">=
nothin<span class=3D"hljs-string">'</span></div></code></pre>
        <button id=3D"prompt-13" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">so_big</span><span class=3D"hljs-params">(x)</spa=
n>:</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> x &gt; <span class=3D"hljs-number">10</span>:
<span class=3D"hljs-meta">... </span>        print(<span class=3D"hljs-stri=
ng">'huge'</span>)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> x &gt; <span class=3D"hljs-number">5</span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> <span class=3D"hljs-string">'big'</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> x &gt; <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>        print(<span class=3D"hljs-stri=
ng">'small'</span>)
<span class=3D"hljs-meta">... </span>    print(<span class=3D"hljs-string">=
"nothin'"</span>)
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>so_big(<span class=3D"hljs-nu=
mber">7</span>)
<div class=3D"alt prompt-14">______</div><div class=3D"solution prompt-14">=
<span class=3D"hljs-string">'big'</span></div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>so_big(<span class=3D"hljs-nu=
mber">12</span>)
<div class=3D"alt prompt-14">______</div><div class=3D"solution prompt-14">=
huge
<span class=3D"hljs-string">'big'</span></div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>so_big(<span class=3D"hljs-nu=
mber">1</span>)
<div class=3D"alt prompt-14">______</div><div class=3D"solution prompt-14">=
small
nothin<span class=3D"hljs-string">'</span></div></code></pre>
        <button id=3D"prompt-14" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">ab</span><span class=3D"hljs-params">(c, d)</span=
>:</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> c &gt; <span class=3D"hljs-number">5</span>:
<span class=3D"hljs-meta">... </span>        print(c)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">elif<=
/span> c &gt; <span class=3D"hljs-number">7</span>:
<span class=3D"hljs-meta">... </span>        print(d)
<span class=3D"hljs-meta">... </span>    print(<span class=3D"hljs-string">=
'foo'</span>)
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>ab(<span class=3D"hljs-number=
">10</span>, <span class=3D"hljs-number">20</span>)
<div class=3D"alt prompt-15">______</div><div class=3D"solution prompt-15">=
10
foo</div></code></pre>
        <button id=3D"prompt-15" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20

<pre><code class=3D"hljs python"><span class=3D"hljs-meta">&gt;&gt;&gt; </s=
pan><span class=3D"hljs-function"><span class=3D"hljs-keyword">def</span> <=
span class=3D"hljs-title">bake</span><span class=3D"hljs-params">(cake, mak=
e)</span>:</span>
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> cake =3D=3D <span class=3D"hljs-number">0</span>:
<span class=3D"hljs-meta">... </span>        cake =3D cake + <span class=3D=
"hljs-number">1</span>
<span class=3D"hljs-meta">... </span>        print(cake)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">if</s=
pan> cake =3D=3D <span class=3D"hljs-number">1</span>:
<span class=3D"hljs-meta">... </span>        print(make)
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">else<=
/span>:
<span class=3D"hljs-meta">... </span>        <span class=3D"hljs-keyword">r=
eturn</span> cake
<span class=3D"hljs-meta">... </span>    <span class=3D"hljs-keyword">retur=
n</span> make
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>bake(<span class=3D"hljs-numb=
er">0</span>, <span class=3D"hljs-number">29</span>)
<div class=3D"alt prompt-16">______</div><div class=3D"solution prompt-16">=
1
<span class=3D"hljs-number">29</span>
<span class=3D"hljs-number">29</span></div>
<span class=3D"hljs-meta">&gt;&gt;&gt; </span>bake(<span class=3D"hljs-numb=
er">1</span>, <span class=3D"hljs-string">"mashed potatoes"</span>)
<div class=3D"alt prompt-16">______</div><div class=3D"solution prompt-16">=
mashed potatoes
<span class=3D"hljs-string">'mashed potatoes'</span></div></code></pre>
        <button id=3D"prompt-16" class=3D"btn btn-outline btn-lg toggle pro=
mpt">
        Toggle Solution
        </button>
       =20


<h2 id=3D"more-coding-practice">More Coding Practice</h2>


<h3 class=3D"question" id=3D"q8">Q8: Fix the Bug</h3>

<p>The following snippet of code doesn't work! Figure out what is wrong
and fix the bugs.</p>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">both_positive</span=
><span class=3D"hljs-params">(x, y)</span>:</span>
    <span class=3D"hljs-string">"""Returns True if both x and y are positiv=
e.

    &gt;&gt;&gt; both_positive(-1, 1)
    False
    &gt;&gt;&gt; both_positive(1, 1)
    True
    """</span>
<div class=3D"alt solution-4">    <span class=3D"hljs-keyword">return</span=
> x <span class=3D"hljs-keyword">and</span> y &gt; <span class=3D"hljs-numb=
er">0</span> <span class=3D"hljs-comment"># You can replace this line!</spa=
n>
</div><div class=3D"solution solution-4">    <span class=3D"hljs-keyword">r=
eturn</span> x &gt; <span class=3D"hljs-number">0</span> <span class=3D"hlj=
s-keyword">and</span> y &gt; <span class=3D"hljs-number">0</span></div></co=
de></pre>

<div class=3D"solution solution-4">

<p>The original line (<code>return x and y &gt; 0</code>) will check that t=
wo things are
true:</p>

<ol>
  <li><code>x</code></li>
  <li><code>y &gt; 0</code></li>
</ol>

<p>When will <code>x</code> be considered True? In Python, any number that =
is not 0
is considered True. Thus, the first doctest will fail: <code>x =3D -1</code=
>
and <code>-1 !=3D 0</code>, and <code>y =3D 1 &gt; 0</code>, so both clause=
s are True.</p>

</div>


        <button id=3D"solution-4" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>Use Ok to test your code:</p><pre><code class=3D"nohighlight">python3 ok=
 -q both_positive</code></pre>

<h3 class=3D"question" id=3D"q9">Q9: Falling Factorial</h3>

<p>Let's write a function <code>falling</code>, which is a "falling" factor=
ial
that takes two arguments, <code>n</code> and <code>k</code>, and returns th=
e product of <code>k</code>
consecutive numbers, starting from <code>n</code> and working downwards.</p=
>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">falling</span><span=
 class=3D"hljs-params">(n, k)</span>:</span>
    <span class=3D"hljs-string">"""Compute the falling factorial of n to de=
pth k.

    &gt;&gt;&gt; falling(6, 3)  # 6 * 5 * 4
    120
    &gt;&gt;&gt; falling(4, 0)
    1
    &gt;&gt;&gt; falling(4, 3)  # 4 * 3 * 2
    24
    &gt;&gt;&gt; falling(4, 1)  # 4
    4
    """</span>
<div class=3D"alt solution-5">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-5">    total, stop =3D <span class=3D=
"hljs-number">1</span>, n-k
    <span class=3D"hljs-keyword">while</span> n &gt; stop:
        total, n =3D total*n, n<span class=3D"hljs-number">-1</span>
    <span class=3D"hljs-keyword">return</span> total</div></code></pre>


        <button id=3D"solution-5" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>Use Ok to test your code:</p><pre><code class=3D"nohighlight">python3 ok=
 -q falling</code></pre>


<h2 id=3D"i-want-to-play-a-game">I Want to Play a Game</h2>


<p>Now that you have learned about call expressions and control structures,=
 you can
code an algorithm! An algorithm is a set of steps to accomplish a task. You=
 use
algorithms every day -- from adding numbers by hand to getting to your next
lecture.</p>

<p>Let's play a number guessing game with Python! Pick a number and Python =
will
guess randomly until it guesses correctly.</p>

<p>All the code for this guessing game will be in <code>lab01_extra.py</cod=
e>. In your terminal,
start an interactive session with Python:</p>

<pre><code class=3D"hljs css"><span class=3D"hljs-selector-tag">python3</sp=
an> <span class=3D"hljs-selector-tag">-i</span> <span class=3D"hljs-selecto=
r-tag">lab01_extra</span><span class=3D"hljs-selector-class">.py</span></co=
de></pre>

<p>The <code>guess_random</code> function will prompt you for a number, ask=
 if its guess is
correct (many times) and return the number of guesses Python had to make. T=
o
tell Python if its guess is correct, just enter <code>y</code> at the <code=
>[y/n]</code> prompt. If
it's wrong, enter <code>n</code>. Python isn't very good at guessing yet, s=
o if it's
taking too long, you can type <code>Ctrl-C</code> to make it stop.</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; guess_random()
Pick an integer between <span class=3D"hljs-number">1</span> <span class=3D=
"hljs-keyword">and</span> <span class=3D"hljs-number">10</span> (inclusive)=
 <span class=3D"hljs-keyword">for</span> me to <span class=3D"hljs-symbol">=
guess:</span> <span class=3D"hljs-number">7</span>
Is <span class=3D"hljs-number">1</span> your number? [y/n] n
Is <span class=3D"hljs-number">5</span> your number? [y/n] n
...</code></pre>

<p>Randomly guessing works, but you can create an even better guessing stra=
tegy.</p>

<h3 class=3D"question" id=3D"q10">Q10: Guess Linear</h3>

<p>One weakness in the <code>guess_random</code> strategy is that it can re=
peat (incorrect)
guesses. Rather than guessing wildly, let's guess numbers in increasing ord=
er.</p>

<blockquote><p>Note: <code>is_correct</code> is a function that will ask th=
e user if the guess is
correct and return <code>True</code> if the user confirms that the guess ma=
tches the
correct number. Feel free to reference the implementation of <code>guess_ra=
ndom</code> as
you implement <code>guess_linear</code>.</p></blockquote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">guess_linear</span>=
<span class=3D"hljs-params">()</span>:</span>
    <span class=3D"hljs-string">"""Guess in increasing order and return the=
 number of guesses."""</span>
    prompt_for_number(LOWER, UPPER)
    num_guesses =3D <span class=3D"hljs-number">1</span>
    guess =3D LOWER
<div class=3D"alt solution-6">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-6">    <span class=3D"hljs-keyword">w=
hile</span> <span class=3D"hljs-keyword">not</span> is_correct(guess):
        guess +=3D <span class=3D"hljs-number">1</span>
        num_guesses +=3D <span class=3D"hljs-number">1</span></div>    <spa=
n class=3D"hljs-keyword">return</span> num_guesses</code></pre>


        <button id=3D"solution-6" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>The best way to test this function is by playing with it interactively. =
See if
your algorithm does what you expect!</p>

<h3 class=3D"question" id=3D"q11">Q11: Guess Binary</h3>

<p><strong>Challenge question.</strong> The <code>guess_linear</code> funct=
ion can take a long time if
your number is large. However, a strategy called <em>binary search</em> can=
 find the
correct number faster. The idea is to start in the middle of the range and
after each incorrect guess ask if the guess <code>is_too_high</code> or too=
 low. Either
way, you can eliminate half the remaining possible guesses.</p>

<blockquote><p><em>Hint</em>: Try using the <code>is_too_high</code> functi=
on to implement a faster
strategy. <code>is_too_high</code> will return <code>True</code> if the gue=
ss is greater than the
correct number.</p>

<pre><code class=3D"hljs ruby"><span class=3D"hljs-meta">&gt;&gt;</span>&gt=
; result =3D is_too_high(<span class=3D"hljs-number">5</span>)
Is <span class=3D"hljs-number">5</span> too high? [y/n] y
<span class=3D"hljs-meta">&gt;&gt;</span>&gt; result
True</code></pre></blockquote>

<!-- DO NOT DELETE: hack for separate blockquotes -->

<blockquote><p><em>Hint</em>: You may want to update other variables beside=
s <code>guess</code>.</p></blockquote>



<pre><code class=3D"hljs python"><span class=3D"hljs-function"><span class=
=3D"hljs-keyword">def</span> <span class=3D"hljs-title">guess_binary</span>=
<span class=3D"hljs-params">()</span>:</span>
    <span class=3D"hljs-string">"""Return the number of attempted guesses. =
Implement a faster search
    algorithm that asks the user whether a guess is less than or greater th=
an
    the correct number.

    Hint: If you know the guess is greater than the correct number, then yo=
ur
    algorithm doesn't need to try numbers that are greater than guess.
    """</span>
    prompt_for_number(LOWER, UPPER)
    num_guesses =3D <span class=3D"hljs-number">1</span>
    lower, upper =3D LOWER, UPPER
    guess =3D (lower + upper) // <span class=3D"hljs-number">2</span>
<div class=3D"alt solution-7">    <span class=3D"hljs-string">"*** YOUR COD=
E HERE ***"</span>
</div><div class=3D"solution solution-7">    <span class=3D"hljs-keyword">w=
hile</span> <span class=3D"hljs-keyword">not</span> is_correct(guess):
        <span class=3D"hljs-keyword">if</span> is_too_high(guess):
            upper =3D guess - <span class=3D"hljs-number">1</span>
        <span class=3D"hljs-keyword">else</span>:
            lower =3D guess + <span class=3D"hljs-number">1</span>
        guess =3D (lower + upper) // <span class=3D"hljs-number">2</span>
        num_guesses +=3D <span class=3D"hljs-number">1</span></div>    <spa=
n class=3D"hljs-keyword">return</span> num_guesses</code></pre>


        <button id=3D"solution-7" class=3D"btn btn-outline btn-lg toggle so=
lution">
        Toggle Solution
        </button>
       =20

<p>If you choose a number between 1 and 10, this approach should need no mo=
re than
4 guesses to find your number.</p>

<p>The best way to test this function is by playing it interactively. Try t=
o think
of <em>edge cases</em> -- numbers that might cause your algorithm to do the=
 wrong
thing. If you edit the Python file while running it interactively, you will
need to <code>exit()</code> and restart the interpreter in order for those =
changes to take
effect.</p>

<p>So far, your algorithms have only had to find a number between 1 and 10.=
 What
if we expanded the possible range of numbers to be between 1 and 100? How m=
any
guesses would each algorithm make if you picked 100 to be your number?</p>


<h3 id=3D"a-second-look">A Second Look</h3>


<p>Let's try to visualize the two algorithms you've just written! We've pro=
vided
code that will run each algorithm 1000 times and plot the number of guesses=
 the
algorithms had to make. The numbers are randomly chosen from between 1 and =
100.</p>

<pre><code class=3D"hljs css"><span class=3D"hljs-selector-tag">python3</sp=
an> <span class=3D"hljs-selector-tag">guessing_game_graph</span><span class=
=3D"hljs-selector-class">.py</span> <span class=3D"hljs-selector-tag">guess=
_linear</span>
<span class=3D"hljs-selector-tag">python3</span> <span class=3D"hljs-select=
or-tag">guessing_game_graph</span><span class=3D"hljs-selector-class">.py</=
span> <span class=3D"hljs-selector-tag">guess_binary</span></code></pre>

<p>Each bar represents the number of guesses the algorithm took to find the
correct number. The height of each bar represents the frequency of each num=
ber
of guesses. Look carefully at the axes when comparing the two graphs! You
should see that <code>guess_linear</code> sometimes took up to 100 guesses;=
 what was the
highest number of guesses that <code>guess_binary</code> took?</p>

<p>You can see our plots for <a href=3D"https://chart.googleapis.com/chart?=
cht=3Dbvg&amp;chtt=3Dguess_linear&amp;chxt=3Dx,y,x,y&amp;chs=3D500x500&amp;=
chd=3Dt:4,23,32,39,48,60,66,75,82,93,102,113,125,140,157,165,176,187,196,20=
4,215,223,234,243,251,257,273,287,297,306,315,322,327,339,352,362,371,384,3=
94,399,415,420,433,445,451,460,473,486,492,503,511,516,521,534,543,551,560,=
568,579,593,599,608,619,630,642,655,671,685,698,706,719,725,730,741,754,772=
,783,795,800,809,818,824,829,842,845,855,866,878,882,897,908,914,924,935,94=
6,960,968,979,994,1000&amp;chxl=3D0:|0|10|20|30|40|50|60|70|80|90|100|2:|Ma=
x%20number%20of%20guesses|3:|Frequency|&amp;chxp=3D0,0|2,50|3,500&amp;chds=
=3Da&amp;chco=3D3072F3&amp;chbh=3Da&amp;chm=3Ds,000000,0,-1,5|s,000000,1,-1=
,5&amp;chdlp=3Dl">guess_linear</a> and <a href=3D"https://chart.googleapis.=
com/chart?cht=3Dbvg&amp;chtt=3Dguess_binary&amp;chxt=3Dx,y,x,y&amp;chs=3D50=
0x500&amp;chd=3Dt:10,27,79,176,329,644,1000&amp;chxl=3D0:|1|2|3|4|5|6|7|2:|=
Max%20number%20of%20guesses|3:|Frequency|&amp;chxp=3D0,8,22,36,50,64,78,92|=
2,50|3,500.0&amp;chds=3Da&amp;chco=3D3072F3&amp;chbh=3Da&amp;chm=3Ds,000000=
,0,-1,5|s,000000,1,-1,5&amp;chdlp=3Dl">guess_binary</a>. If
your plots only have one bar, make sure your functions are returning the
correct number of guesses!</p>

  </div>

  <div class=3D"col-md-3 sticky">
    <nav class=3D"hidden-print hidden-sm hidden-xs sidebar">
      <ul class=3D"nav nav-stacked noselect">
  <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#logi=
stics">Logistics</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#us=
ing-python">Using Python</a></li>
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#us=
ing-ok">Using OK</a></li>
  </ul>
  <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#topi=
cs">Topics</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#ex=
pressions-and-statements">Expressions and statements</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
primitive-expressions">Primitive expressions</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
assignment-statements">Assignment statements</a></li>
      <li class=3D"active"><a href=3D"https://inst.eecs.berkeley.edu/~cs61a=
/sp18/lab/lab01/#boolean-operators">Boolean Operators</a></li>
      <ul class=3D"nav nav-stacked noselect">
        <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp1=
8/lab/lab01/#short-circuiting">Short Circuiting</a></li>
      </ul>
      <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/=
lab/lab01/#division">Division</a></li>
    </ul>
    <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/la=
b/lab01/#functions">Functions</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/=
lab/lab01/#call-expressions">Call expressions</a></li>
      <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/=
lab/lab01/#return-and-print"><code>return</code> and <code>print</code></a>=
</li>
    </ul>
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#co=
ntrol">Control</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/=
lab/lab01/#if-statements">If Statements</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
while-loops">While Loops</a></li>
    </ul>
    <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/la=
b/lab01/#error-messages">Error Messages</a></li>
  </ul>
  <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/=
lab01/#required-questions">Required Questions</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#wh=
at-would-python-display-part-1">What Would Python Display (Part 1)?</a></li=
>
    <ul class=3D"nav nav-stacked noselect">
      <li class=3D""><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/=
lab/lab01/#q1">Q1: WWPD: Veritasiness</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q2">Q2: WWPD: Loops</a></li>
    </ul>
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#co=
ding-practice">Coding Practice</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q3">Q3: Repeated</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q4">Q4: Sum Digits</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q5">Q5: Double Eights</a></li>
    </ul>
  </ul>
  <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#opti=
onal-questions">Optional Questions</a></li>
  <ul class=3D"nav nav-stacked noselect">
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#wh=
at-would-python-display-part-2">What Would Python Display (Part 2)?</a></li=
>
    <ul class=3D"nav nav-stacked noselect">
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q6">Q6: WWPD: Truthiness</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q7">Q7: WWPD: What If?</a></li>
    </ul>
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#mo=
re-coding-practice">More Coding Practice</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q8">Q8: Fix the Bug</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q9">Q9: Falling Factorial</a></li>
    </ul>
    <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#i-=
want-to-play-a-game">I Want to Play a Game</a></li>
    <ul class=3D"nav nav-stacked noselect">
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q10">Q10: Guess Linear</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
q11">Q11: Guess Binary</a></li>
      <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/lab/lab01/#=
a-second-look">A Second Look</a></li>
    </ul>
  </ul>
</ul>
    </nav>
  </div>
</div>

    </main>

    <footer class=3D"container">
      <div class=3D"row text-center">
        <div class=3D"col col-sm-4">
          <h3><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/">CS 61=
A</a></h3>
          <ul class=3D"nav nav-pills nav-stacked">
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/weekl=
y.html">Weekly Schedule</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/offic=
e-hours.html">Office Hours</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/staff=
.html">Staff</a></li>
          </ul>
        </div>
        <div class=3D"col col-sm-4">
          <h3><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/resourc=
es.html">Resources</a></h3>
          <ul class=3D"nav nav-pills nav-stacked">
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/studying.html">Studying Guide</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/debugging.html">Debugging Guide</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/composition.html">Composition Guide</a></li>
          </ul>
        </div>
        <div class=3D"col col-sm-4">
          <h3><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/article=
s/about.html">Policies</a></h3>
          <ul class=3D"nav nav-pills nav-stacked">
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/about.html#assignments">Assignments</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/about.html#exams">Exams</a></li>
            <li><a href=3D"https://inst.eecs.berkeley.edu/~cs61a/sp18/artic=
les/about.html#grading">Grading</a></li>
          </ul>
        </div>
      </div>
    </footer>

   =20









 =20
</body></html>
------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css

@charset "utf-8";

html { font-family: sans-serif; text-size-adjust: 100%; }

body { margin: 0px; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, =
menu, nav, section, summary { display: block; }

audio, canvas, progress, video { display: inline-block; vertical-align: bas=
eline; }

audio:not([controls]) { display: none; height: 0px; }

[hidden], template { display: none; }

a { background-color: transparent; }

a:active, a:hover { outline: 0px; }

abbr[title] { border-bottom: 1px dotted; }

b, strong { font-weight: 700; }

dfn { font-style: italic; }

h1 { margin: 0.67em 0px; font-size: 2em; }

mark { color: rgb(0, 0, 0); background: rgb(255, 255, 0); }

small { font-size: 80%; }

sub, sup { position: relative; font-size: 75%; line-height: 0; vertical-ali=
gn: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

img { border: 0px; }

svg:not(:root) { overflow: hidden; }

figure { margin: 1em 40px; }

hr { height: 0px; box-sizing: content-box; }

pre { overflow: auto; }

code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

button, input, optgroup, select, textarea { margin: 0px; font: inherit; col=
or: inherit; }

button { overflow: visible; }

button, select { text-transform: none; }

button, html input[type=3D"button"], input[type=3D"reset"], input[type=3D"s=
ubmit"] { -webkit-appearance: button; cursor: pointer; }

button[disabled], html input[disabled] { cursor: default; }

input { line-height: normal; }

input[type=3D"checkbox"], input[type=3D"radio"] { box-sizing: border-box; p=
adding: 0px; }

input[type=3D"number"]::-webkit-inner-spin-button, input[type=3D"number"]::=
-webkit-outer-spin-button { height: auto; }

input[type=3D"search"] { box-sizing: content-box; -webkit-appearance: textf=
ield; }

input[type=3D"search"]::-webkit-search-cancel-button, input[type=3D"search"=
]::-webkit-search-decoration { -webkit-appearance: none; }

fieldset { padding: 0.35em 0.625em 0.75em; margin: 0px 2px; border: 1px sol=
id silver; }

legend { padding: 0px; border: 0px; }

textarea { overflow: auto; }

optgroup { font-weight: 700; }

table { border-spacing: 0px; border-collapse: collapse; }

td, th { padding: 0px; }

@media print {
  *, ::after, ::before { color: rgb(0, 0, 0) !important; text-shadow: none =
!important; background: 0px 0px !important; box-shadow: none !important; }
  a, a:visited { text-decoration: underline; }
  a[href]::after { content: " (" attr(href) ")"; }
  abbr[title]::after { content: " (" attr(title) ")"; }
  a[href^=3D"javascript:"]::after, a[href^=3D"#"]::after { content: ""; }
  blockquote, pre { border: 1px solid rgb(153, 153, 153); break-inside: avo=
id; }
  thead { display: table-header-group; }
  img, tr { break-inside: avoid; }
  img { max-width: 100% !important; }
  h2, h3, p { orphans: 3; widows: 3; }
  h2, h3 { break-after: avoid; }
  .navbar { display: none; }
  .btn > .caret, .dropup > .btn > .caret { border-top-color: rgb(0, 0, 0) !=
important; }
  .label { border: 1px solid rgb(0, 0, 0); }
  .table { border-collapse: collapse !important; }
  .table td, .table th { background-color: rgb(255, 255, 255) !important; }
  .table-bordered td, .table-bordered th { border: 1px solid rgb(221, 221, =
221) !important; }
}

@font-face { font-family: "Glyphicons Halflings"; src: url("../fonts/glyphi=
cons-halflings-regular.eot?#iefix") format("embedded-opentype"), url("../fo=
nts/glyphicons-halflings-regular.woff2") format("woff2"), url("../fonts/gly=
phicons-halflings-regular.woff") format("woff"), url("../fonts/glyphicons-h=
alflings-regular.ttf") format("truetype"), url("../fonts/glyphicons-halflin=
gs-regular.svg#glyphicons_halflingsregular") format("svg"); }

.glyphicon { position: relative; top: 1px; display: inline-block; font-fami=
ly: "Glyphicons Halflings"; font-style: normal; font-weight: 400; line-heig=
ht: 1; -webkit-font-smoothing: antialiased; }

.glyphicon-asterisk::before { content: "*"; }

.glyphicon-plus::before { content: "+"; }

.glyphicon-eur::before, .glyphicon-euro::before { content: "=E2=82=AC"; }

.glyphicon-minus::before { content: "=E2=88=92"; }

.glyphicon-cloud::before { content: "=E2=98=81"; }

.glyphicon-envelope::before { content: "=E2=9C=89"; }

.glyphicon-pencil::before { content: "=E2=9C=8F"; }

.glyphicon-glass::before { content: "=EE=80=81"; }

.glyphicon-music::before { content: "=EE=80=82"; }

.glyphicon-search::before { content: "=EE=80=83"; }

.glyphicon-heart::before { content: "=EE=80=85"; }

.glyphicon-star::before { content: "=EE=80=86"; }

.glyphicon-star-empty::before { content: "=EE=80=87"; }

.glyphicon-user::before { content: "=EE=80=88"; }

.glyphicon-film::before { content: "=EE=80=89"; }

.glyphicon-th-large::before { content: "=EE=80=90"; }

.glyphicon-th::before { content: "=EE=80=91"; }

.glyphicon-th-list::before { content: "=EE=80=92"; }

.glyphicon-ok::before { content: "=EE=80=93"; }

.glyphicon-remove::before { content: "=EE=80=94"; }

.glyphicon-zoom-in::before { content: "=EE=80=95"; }

.glyphicon-zoom-out::before { content: "=EE=80=96"; }

.glyphicon-off::before { content: "=EE=80=97"; }

.glyphicon-signal::before { content: "=EE=80=98"; }

.glyphicon-cog::before { content: "=EE=80=99"; }

.glyphicon-trash::before { content: "=EE=80=A0"; }

.glyphicon-home::before { content: "=EE=80=A1"; }

.glyphicon-file::before { content: "=EE=80=A2"; }

.glyphicon-time::before { content: "=EE=80=A3"; }

.glyphicon-road::before { content: "=EE=80=A4"; }

.glyphicon-download-alt::before { content: "=EE=80=A5"; }

.glyphicon-download::before { content: "=EE=80=A6"; }

.glyphicon-upload::before { content: "=EE=80=A7"; }

.glyphicon-inbox::before { content: "=EE=80=A8"; }

.glyphicon-play-circle::before { content: "=EE=80=A9"; }

.glyphicon-repeat::before { content: "=EE=80=B0"; }

.glyphicon-refresh::before { content: "=EE=80=B1"; }

.glyphicon-list-alt::before { content: "=EE=80=B2"; }

.glyphicon-lock::before { content: "=EE=80=B3"; }

.glyphicon-flag::before { content: "=EE=80=B4"; }

.glyphicon-headphones::before { content: "=EE=80=B5"; }

.glyphicon-volume-off::before { content: "=EE=80=B6"; }

.glyphicon-volume-down::before { content: "=EE=80=B7"; }

.glyphicon-volume-up::before { content: "=EE=80=B8"; }

.glyphicon-qrcode::before { content: "=EE=80=B9"; }

.glyphicon-barcode::before { content: "=EE=81=80"; }

.glyphicon-tag::before { content: "=EE=81=81"; }

.glyphicon-tags::before { content: "=EE=81=82"; }

.glyphicon-book::before { content: "=EE=81=83"; }

.glyphicon-bookmark::before { content: "=EE=81=84"; }

.glyphicon-print::before { content: "=EE=81=85"; }

.glyphicon-camera::before { content: "=EE=81=86"; }

.glyphicon-font::before { content: "=EE=81=87"; }

.glyphicon-bold::before { content: "=EE=81=88"; }

.glyphicon-italic::before { content: "=EE=81=89"; }

.glyphicon-text-height::before { content: "=EE=81=90"; }

.glyphicon-text-width::before { content: "=EE=81=91"; }

.glyphicon-align-left::before { content: "=EE=81=92"; }

.glyphicon-align-center::before { content: "=EE=81=93"; }

.glyphicon-align-right::before { content: "=EE=81=94"; }

.glyphicon-align-justify::before { content: "=EE=81=95"; }

.glyphicon-list::before { content: "=EE=81=96"; }

.glyphicon-indent-left::before { content: "=EE=81=97"; }

.glyphicon-indent-right::before { content: "=EE=81=98"; }

.glyphicon-facetime-video::before { content: "=EE=81=99"; }

.glyphicon-picture::before { content: "=EE=81=A0"; }

.glyphicon-map-marker::before { content: "=EE=81=A2"; }

.glyphicon-adjust::before { content: "=EE=81=A3"; }

.glyphicon-tint::before { content: "=EE=81=A4"; }

.glyphicon-edit::before { content: "=EE=81=A5"; }

.glyphicon-share::before { content: "=EE=81=A6"; }

.glyphicon-check::before { content: "=EE=81=A7"; }

.glyphicon-move::before { content: "=EE=81=A8"; }

.glyphicon-step-backward::before { content: "=EE=81=A9"; }

.glyphicon-fast-backward::before { content: "=EE=81=B0"; }

.glyphicon-backward::before { content: "=EE=81=B1"; }

.glyphicon-play::before { content: "=EE=81=B2"; }

.glyphicon-pause::before { content: "=EE=81=B3"; }

.glyphicon-stop::before { content: "=EE=81=B4"; }

.glyphicon-forward::before { content: "=EE=81=B5"; }

.glyphicon-fast-forward::before { content: "=EE=81=B6"; }

.glyphicon-step-forward::before { content: "=EE=81=B7"; }

.glyphicon-eject::before { content: "=EE=81=B8"; }

.glyphicon-chevron-left::before { content: "=EE=81=B9"; }

.glyphicon-chevron-right::before { content: "=EE=82=80"; }

.glyphicon-plus-sign::before { content: "=EE=82=81"; }

.glyphicon-minus-sign::before { content: "=EE=82=82"; }

.glyphicon-remove-sign::before { content: "=EE=82=83"; }

.glyphicon-ok-sign::before { content: "=EE=82=84"; }

.glyphicon-question-sign::before { content: "=EE=82=85"; }

.glyphicon-info-sign::before { content: "=EE=82=86"; }

.glyphicon-screenshot::before { content: "=EE=82=87"; }

.glyphicon-remove-circle::before { content: "=EE=82=88"; }

.glyphicon-ok-circle::before { content: "=EE=82=89"; }

.glyphicon-ban-circle::before { content: "=EE=82=90"; }

.glyphicon-arrow-left::before { content: "=EE=82=91"; }

.glyphicon-arrow-right::before { content: "=EE=82=92"; }

.glyphicon-arrow-up::before { content: "=EE=82=93"; }

.glyphicon-arrow-down::before { content: "=EE=82=94"; }

.glyphicon-share-alt::before { content: "=EE=82=95"; }

.glyphicon-resize-full::before { content: "=EE=82=96"; }

.glyphicon-resize-small::before { content: "=EE=82=97"; }

.glyphicon-exclamation-sign::before { content: "=EE=84=81"; }

.glyphicon-gift::before { content: "=EE=84=82"; }

.glyphicon-leaf::before { content: "=EE=84=83"; }

.glyphicon-fire::before { content: "=EE=84=84"; }

.glyphicon-eye-open::before { content: "=EE=84=85"; }

.glyphicon-eye-close::before { content: "=EE=84=86"; }

.glyphicon-warning-sign::before { content: "=EE=84=87"; }

.glyphicon-plane::before { content: "=EE=84=88"; }

.glyphicon-calendar::before { content: "=EE=84=89"; }

.glyphicon-random::before { content: "=EE=84=90"; }

.glyphicon-comment::before { content: "=EE=84=91"; }

.glyphicon-magnet::before { content: "=EE=84=92"; }

.glyphicon-chevron-up::before { content: "=EE=84=93"; }

.glyphicon-chevron-down::before { content: "=EE=84=94"; }

.glyphicon-retweet::before { content: "=EE=84=95"; }

.glyphicon-shopping-cart::before { content: "=EE=84=96"; }

.glyphicon-folder-close::before { content: "=EE=84=97"; }

.glyphicon-folder-open::before { content: "=EE=84=98"; }

.glyphicon-resize-vertical::before { content: "=EE=84=99"; }

.glyphicon-resize-horizontal::before { content: "=EE=84=A0"; }

.glyphicon-hdd::before { content: "=EE=84=A1"; }

.glyphicon-bullhorn::before { content: "=EE=84=A2"; }

.glyphicon-bell::before { content: "=EE=84=A3"; }

.glyphicon-certificate::before { content: "=EE=84=A4"; }

.glyphicon-thumbs-up::before { content: "=EE=84=A5"; }

.glyphicon-thumbs-down::before { content: "=EE=84=A6"; }

.glyphicon-hand-right::before { content: "=EE=84=A7"; }

.glyphicon-hand-left::before { content: "=EE=84=A8"; }

.glyphicon-hand-up::before { content: "=EE=84=A9"; }

.glyphicon-hand-down::before { content: "=EE=84=B0"; }

.glyphicon-circle-arrow-right::before { content: "=EE=84=B1"; }

.glyphicon-circle-arrow-left::before { content: "=EE=84=B2"; }

.glyphicon-circle-arrow-up::before { content: "=EE=84=B3"; }

.glyphicon-circle-arrow-down::before { content: "=EE=84=B4"; }

.glyphicon-globe::before { content: "=EE=84=B5"; }

.glyphicon-wrench::before { content: "=EE=84=B6"; }

.glyphicon-tasks::before { content: "=EE=84=B7"; }

.glyphicon-filter::before { content: "=EE=84=B8"; }

.glyphicon-briefcase::before { content: "=EE=84=B9"; }

.glyphicon-fullscreen::before { content: "=EE=85=80"; }

.glyphicon-dashboard::before { content: "=EE=85=81"; }

.glyphicon-paperclip::before { content: "=EE=85=82"; }

.glyphicon-heart-empty::before { content: "=EE=85=83"; }

.glyphicon-link::before { content: "=EE=85=84"; }

.glyphicon-phone::before { content: "=EE=85=85"; }

.glyphicon-pushpin::before { content: "=EE=85=86"; }

.glyphicon-usd::before { content: "=EE=85=88"; }

.glyphicon-gbp::before { content: "=EE=85=89"; }

.glyphicon-sort::before { content: "=EE=85=90"; }

.glyphicon-sort-by-alphabet::before { content: "=EE=85=91"; }

.glyphicon-sort-by-alphabet-alt::before { content: "=EE=85=92"; }

.glyphicon-sort-by-order::before { content: "=EE=85=93"; }

.glyphicon-sort-by-order-alt::before { content: "=EE=85=94"; }

.glyphicon-sort-by-attributes::before { content: "=EE=85=95"; }

.glyphicon-sort-by-attributes-alt::before { content: "=EE=85=96"; }

.glyphicon-unchecked::before { content: "=EE=85=97"; }

.glyphicon-expand::before { content: "=EE=85=98"; }

.glyphicon-collapse-down::before { content: "=EE=85=99"; }

.glyphicon-collapse-up::before { content: "=EE=85=A0"; }

.glyphicon-log-in::before { content: "=EE=85=A1"; }

.glyphicon-flash::before { content: "=EE=85=A2"; }

.glyphicon-log-out::before { content: "=EE=85=A3"; }

.glyphicon-new-window::before { content: "=EE=85=A4"; }

.glyphicon-record::before { content: "=EE=85=A5"; }

.glyphicon-save::before { content: "=EE=85=A6"; }

.glyphicon-open::before { content: "=EE=85=A7"; }

.glyphicon-saved::before { content: "=EE=85=A8"; }

.glyphicon-import::before { content: "=EE=85=A9"; }

.glyphicon-export::before { content: "=EE=85=B0"; }

.glyphicon-send::before { content: "=EE=85=B1"; }

.glyphicon-floppy-disk::before { content: "=EE=85=B2"; }

.glyphicon-floppy-saved::before { content: "=EE=85=B3"; }

.glyphicon-floppy-remove::before { content: "=EE=85=B4"; }

.glyphicon-floppy-save::before { content: "=EE=85=B5"; }

.glyphicon-floppy-open::before { content: "=EE=85=B6"; }

.glyphicon-credit-card::before { content: "=EE=85=B7"; }

.glyphicon-transfer::before { content: "=EE=85=B8"; }

.glyphicon-cutlery::before { content: "=EE=85=B9"; }

.glyphicon-header::before { content: "=EE=86=80"; }

.glyphicon-compressed::before { content: "=EE=86=81"; }

.glyphicon-earphone::before { content: "=EE=86=82"; }

.glyphicon-phone-alt::before { content: "=EE=86=83"; }

.glyphicon-tower::before { content: "=EE=86=84"; }

.glyphicon-stats::before { content: "=EE=86=85"; }

.glyphicon-sd-video::before { content: "=EE=86=86"; }

.glyphicon-hd-video::before { content: "=EE=86=87"; }

.glyphicon-subtitles::before { content: "=EE=86=88"; }

.glyphicon-sound-stereo::before { content: "=EE=86=89"; }

.glyphicon-sound-dolby::before { content: "=EE=86=90"; }

.glyphicon-sound-5-1::before { content: "=EE=86=91"; }

.glyphicon-sound-6-1::before { content: "=EE=86=92"; }

.glyphicon-sound-7-1::before { content: "=EE=86=93"; }

.glyphicon-copyright-mark::before { content: "=EE=86=94"; }

.glyphicon-registration-mark::before { content: "=EE=86=95"; }

.glyphicon-cloud-download::before { content: "=EE=86=97"; }

.glyphicon-cloud-upload::before { content: "=EE=86=98"; }

.glyphicon-tree-conifer::before { content: "=EE=86=99"; }

.glyphicon-tree-deciduous::before { content: "=EE=88=80"; }

.glyphicon-cd::before { content: "=EE=88=81"; }

.glyphicon-save-file::before { content: "=EE=88=82"; }

.glyphicon-open-file::before { content: "=EE=88=83"; }

.glyphicon-level-up::before { content: "=EE=88=84"; }

.glyphicon-copy::before { content: "=EE=88=85"; }

.glyphicon-paste::before { content: "=EE=88=86"; }

.glyphicon-alert::before { content: "=EE=88=89"; }

.glyphicon-equalizer::before { content: "=EE=88=90"; }

.glyphicon-king::before { content: "=EE=88=91"; }

.glyphicon-queen::before { content: "=EE=88=92"; }

.glyphicon-pawn::before { content: "=EE=88=93"; }

.glyphicon-bishop::before { content: "=EE=88=94"; }

.glyphicon-knight::before { content: "=EE=88=95"; }

.glyphicon-baby-formula::before { content: "=EE=88=96"; }

.glyphicon-tent::before { content: "=E2=9B=BA"; }

.glyphicon-blackboard::before { content: "=EE=88=98"; }

.glyphicon-bed::before { content: "=EE=88=99"; }

.glyphicon-apple::before { content: "=EF=A3=BF"; }

.glyphicon-erase::before { content: "=EE=88=A1"; }

.glyphicon-hourglass::before { content: "=E2=8C=9B"; }

.glyphicon-lamp::before { content: "=EE=88=A3"; }

.glyphicon-duplicate::before { content: "=EE=88=A4"; }

.glyphicon-piggy-bank::before { content: "=EE=88=A5"; }

.glyphicon-scissors::before { content: "=EE=88=A6"; }

.glyphicon-bitcoin::before { content: "=EE=88=A7"; }

.glyphicon-btc::before { content: "=EE=88=A7"; }

.glyphicon-xbt::before { content: "=EE=88=A7"; }

.glyphicon-yen::before { content: "=C2=A5"; }

.glyphicon-jpy::before { content: "=C2=A5"; }

.glyphicon-ruble::before { content: "=E2=82=BD"; }

.glyphicon-rub::before { content: "=E2=82=BD"; }

.glyphicon-scale::before { content: "=EE=88=B0"; }

.glyphicon-ice-lolly::before { content: "=EE=88=B1"; }

.glyphicon-ice-lolly-tasted::before { content: "=EE=88=B2"; }

.glyphicon-education::before { content: "=EE=88=B3"; }

.glyphicon-option-horizontal::before { content: "=EE=88=B4"; }

.glyphicon-option-vertical::before { content: "=EE=88=B5"; }

.glyphicon-menu-hamburger::before { content: "=EE=88=B6"; }

.glyphicon-modal-window::before { content: "=EE=88=B7"; }

.glyphicon-oil::before { content: "=EE=88=B8"; }

.glyphicon-grain::before { content: "=EE=88=B9"; }

.glyphicon-sunglasses::before { content: "=EE=89=80"; }

.glyphicon-text-size::before { content: "=EE=89=81"; }

.glyphicon-text-color::before { content: "=EE=89=82"; }

.glyphicon-text-background::before { content: "=EE=89=83"; }

.glyphicon-object-align-top::before { content: "=EE=89=84"; }

.glyphicon-object-align-bottom::before { content: "=EE=89=85"; }

.glyphicon-object-align-horizontal::before { content: "=EE=89=86"; }

.glyphicon-object-align-left::before { content: "=EE=89=87"; }

.glyphicon-object-align-vertical::before { content: "=EE=89=88"; }

.glyphicon-object-align-right::before { content: "=EE=89=89"; }

.glyphicon-triangle-right::before { content: "=EE=89=90"; }

.glyphicon-triangle-left::before { content: "=EE=89=91"; }

.glyphicon-triangle-bottom::before { content: "=EE=89=92"; }

.glyphicon-triangle-top::before { content: "=EE=89=93"; }

.glyphicon-console::before { content: "=EE=89=94"; }

.glyphicon-superscript::before { content: "=EE=89=95"; }

.glyphicon-subscript::before { content: "=EE=89=96"; }

.glyphicon-menu-left::before { content: "=EE=89=97"; }

.glyphicon-menu-right::before { content: "=EE=89=98"; }

.glyphicon-menu-down::before { content: "=EE=89=99"; }

.glyphicon-menu-up::before { content: "=EE=89=A0"; }

* { box-sizing: border-box; }

::after, ::before { box-sizing: border-box; }

html { font-size: 10px; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); }

body { font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; font-si=
ze: 14px; line-height: 1.42857; color: rgb(51, 51, 51); background-color: r=
gb(255, 255, 255); }

button, input, select, textarea { font-family: inherit; font-size: inherit;=
 line-height: inherit; }

a { color: rgb(51, 122, 183); text-decoration: none; }

a:focus, a:hover { color: rgb(35, 82, 124); text-decoration: underline; }

a:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: -2px;=
 }

figure { margin: 0px; }

img { vertical-align: middle; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img, .img-resp=
onsive, .thumbnail a > img, .thumbnail > img { display: block; max-width: 1=
00%; height: auto; }

.img-rounded { border-radius: 6px; }

.img-thumbnail { display: inline-block; max-width: 100%; height: auto; padd=
ing: 4px; line-height: 1.42857; background-color: rgb(255, 255, 255); borde=
r: 1px solid rgb(221, 221, 221); border-radius: 4px; transition: all 0.2s e=
ase-in-out; }

.img-circle { border-radius: 50%; }

hr { margin-top: 20px; margin-bottom: 20px; border-width: 1px 0px 0px; bord=
er-right-style: initial; border-bottom-style: initial; border-left-style: i=
nitial; border-right-color: initial; border-bottom-color: initial; border-l=
eft-color: initial; border-image: initial; border-top-style: solid; border-=
top-color: rgb(238, 238, 238); }

.sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; margi=
n: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); border: 0px; }

.sr-only-focusable:active, .sr-only-focusable:focus { position: static; wid=
th: auto; height: auto; margin: 0px; overflow: visible; clip: auto; }

[role=3D"button"] { cursor: pointer; }

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 { font-family: inherit=
; font-weight: 500; line-height: 1.1; color: inherit; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, .h4 .s=
mall, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h1 .small, h=
1 small, h2 .small, h2 small, h3 .small, h3 small, h4 .small, h4 small, h5 =
.small, h5 small, h6 .small, h6 small { font-weight: 400; line-height: 1; c=
olor: rgb(119, 119, 119); }

.h1, .h2, .h3, h1, h2, h3 { margin-top: 20px; margin-bottom: 10px; }

.h1 .small, .h1 small, .h2 .small, .h2 small, .h3 .small, .h3 small, h1 .sm=
all, h1 small, h2 .small, h2 small, h3 .small, h3 small { font-size: 65%; }

.h4, .h5, .h6, h4, h5, h6 { margin-top: 10px; margin-bottom: 10px; }

.h4 .small, .h4 small, .h5 .small, .h5 small, .h6 .small, .h6 small, h4 .sm=
all, h4 small, h5 .small, h5 small, h6 .small, h6 small { font-size: 75%; }

.h1, h1 { font-size: 36px; }

.h2, h2 { font-size: 30px; }

.h3, h3 { font-size: 24px; }

.h4, h4 { font-size: 18px; }

.h5, h5 { font-size: 14px; }

.h6, h6 { font-size: 12px; }

p { margin: 0px 0px 10px; }

.lead { margin-bottom: 20px; font-size: 16px; font-weight: 300; line-height=
: 1.4; }

@media (min-width: 768px) {
  .lead { font-size: 21px; }
}

.small, small { font-size: 85%; }

.mark, mark { padding: 0.2em; background-color: rgb(252, 248, 227); }

.text-left { text-align: left; }

.text-right { text-align: right; }

.text-center { text-align: center; }

.text-justify { text-align: justify; }

.text-nowrap { white-space: nowrap; }

.text-lowercase { text-transform: lowercase; }

.text-uppercase { text-transform: uppercase; }

.text-capitalize { text-transform: capitalize; }

.text-muted { color: rgb(119, 119, 119); }

.text-primary { color: rgb(51, 122, 183); }

a.text-primary:focus, a.text-primary:hover { color: rgb(40, 96, 144); }

.text-success { color: rgb(60, 118, 61); }

a.text-success:focus, a.text-success:hover { color: rgb(43, 84, 44); }

.text-info { color: rgb(49, 112, 143); }

a.text-info:focus, a.text-info:hover { color: rgb(36, 82, 105); }

.text-warning { color: rgb(138, 109, 59); }

a.text-warning:focus, a.text-warning:hover { color: rgb(102, 81, 44); }

.text-danger { color: rgb(169, 68, 66); }

a.text-danger:focus, a.text-danger:hover { color: rgb(132, 53, 52); }

.bg-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 183=
); }

a.bg-primary:focus, a.bg-primary:hover { background-color: rgb(40, 96, 144)=
; }

.bg-success { background-color: rgb(223, 240, 216); }

a.bg-success:focus, a.bg-success:hover { background-color: rgb(193, 226, 17=
9); }

.bg-info { background-color: rgb(217, 237, 247); }

a.bg-info:focus, a.bg-info:hover { background-color: rgb(175, 217, 238); }

.bg-warning { background-color: rgb(252, 248, 227); }

a.bg-warning:focus, a.bg-warning:hover { background-color: rgb(247, 236, 18=
1); }

.bg-danger { background-color: rgb(242, 222, 222); }

a.bg-danger:focus, a.bg-danger:hover { background-color: rgb(228, 185, 185)=
; }

.page-header { padding-bottom: 9px; margin: 40px 0px 20px; border-bottom: 1=
px solid rgb(238, 238, 238); }

ol, ul { margin-top: 0px; margin-bottom: 10px; }

ol ol, ol ul, ul ol, ul ul { margin-bottom: 0px; }

.list-unstyled { padding-left: 0px; list-style: none; }

.list-inline { padding-left: 0px; margin-left: -5px; list-style: none; }

.list-inline > li { display: inline-block; padding-right: 5px; padding-left=
: 5px; }

dl { margin-top: 0px; margin-bottom: 20px; }

dd, dt { line-height: 1.42857; }

dt { font-weight: 700; }

dd { margin-left: 0px; }

@media (min-width: 768px) {
  .dl-horizontal dt { float: left; width: 160px; overflow: hidden; clear: l=
eft; text-align: right; text-overflow: ellipsis; white-space: nowrap; }
  .dl-horizontal dd { margin-left: 180px; }
}

abbr[data-original-title], abbr[title] { cursor: help; border-bottom: 1px d=
otted rgb(119, 119, 119); }

.initialism { font-size: 90%; text-transform: uppercase; }

blockquote { padding: 10px 20px; margin: 0px 0px 20px; font-size: 17.5px; b=
order-left: 5px solid rgb(238, 238, 238); }

blockquote ol:last-child, blockquote p:last-child, blockquote ul:last-child=
 { margin-bottom: 0px; }

blockquote .small, blockquote footer, blockquote small { display: block; fo=
nt-size: 80%; line-height: 1.42857; color: rgb(119, 119, 119); }

blockquote .small::before, blockquote footer::before, blockquote small::bef=
ore { content: "=E2=80=94=C2=A0"; }

.blockquote-reverse, blockquote.pull-right { padding-right: 15px; padding-l=
eft: 0px; text-align: right; border-right: 5px solid rgb(238, 238, 238); bo=
rder-left: 0px; }

.blockquote-reverse .small::before, .blockquote-reverse footer::before, .bl=
ockquote-reverse small::before, blockquote.pull-right .small::before, block=
quote.pull-right footer::before, blockquote.pull-right small::before { cont=
ent: ""; }

.blockquote-reverse .small::after, .blockquote-reverse footer::after, .bloc=
kquote-reverse small::after, blockquote.pull-right .small::after, blockquot=
e.pull-right footer::after, blockquote.pull-right small::after { content: "=
=C2=A0=E2=80=94"; }

address { margin-bottom: 20px; font-style: normal; line-height: 1.42857; }

code, kbd, pre, samp { font-family: Menlo, Monaco, Consolas, "Courier New",=
 monospace; }

code { padding: 2px 4px; font-size: 90%; color: rgb(199, 37, 78); backgroun=
d-color: rgb(249, 242, 244); border-radius: 4px; }

kbd { padding: 2px 4px; font-size: 90%; color: rgb(255, 255, 255); backgrou=
nd-color: rgb(51, 51, 51); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.=
25) 0px -1px 0px inset; }

kbd kbd { padding: 0px; font-size: 100%; font-weight: 700; box-shadow: none=
; }

pre { display: block; padding: 9.5px; margin: 0px 0px 10px; font-size: 13px=
; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word=
-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid =
rgb(204, 204, 204); border-radius: 4px; }

pre code { padding: 0px; font-size: inherit; color: inherit; white-space: p=
re-wrap; background-color: transparent; border-radius: 0px; }

.pre-scrollable { max-height: 340px; overflow-y: scroll; }

.container { padding-right: 15px; padding-left: 15px; margin-right: auto; m=
argin-left: auto; }

@media (min-width: 768px) {
  .container { width: 750px; }
}

@media (min-width: 992px) {
  .container { width: 970px; }
}

@media (min-width: 1200px) {
  .container { width: 1170px; }
}

.container-fluid { padding-right: 15px; padding-left: 15px; margin-right: a=
uto; margin-left: auto; }

.row { margin-right: -15px; margin-left: -15px; }

.col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-l=
g-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-md-1, .col=
-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5,=
 .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-sm-1, .col-sm-10, .col-sm=
-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .co=
l-sm-7, .col-sm-8, .col-sm-9, .col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12=
, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs=
-8, .col-xs-9 { position: relative; min-height: 1px; padding-right: 15px; p=
adding-left: 15px; }

.col-xs-1, .col-xs-10, .col-xs-11, .col-xs-12, .col-xs-2, .col-xs-3, .col-x=
s-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9 { float: left; }

.col-xs-12 { width: 100%; }

.col-xs-11 { width: 91.6667%; }

.col-xs-10 { width: 83.3333%; }

.col-xs-9 { width: 75%; }

.col-xs-8 { width: 66.6667%; }

.col-xs-7 { width: 58.3333%; }

.col-xs-6 { width: 50%; }

.col-xs-5 { width: 41.6667%; }

.col-xs-4 { width: 33.3333%; }

.col-xs-3 { width: 25%; }

.col-xs-2 { width: 16.6667%; }

.col-xs-1 { width: 8.33333%; }

.col-xs-pull-12 { right: 100%; }

.col-xs-pull-11 { right: 91.6667%; }

.col-xs-pull-10 { right: 83.3333%; }

.col-xs-pull-9 { right: 75%; }

.col-xs-pull-8 { right: 66.6667%; }

.col-xs-pull-7 { right: 58.3333%; }

.col-xs-pull-6 { right: 50%; }

.col-xs-pull-5 { right: 41.6667%; }

.col-xs-pull-4 { right: 33.3333%; }

.col-xs-pull-3 { right: 25%; }

.col-xs-pull-2 { right: 16.6667%; }

.col-xs-pull-1 { right: 8.33333%; }

.col-xs-pull-0 { right: auto; }

.col-xs-push-12 { left: 100%; }

.col-xs-push-11 { left: 91.6667%; }

.col-xs-push-10 { left: 83.3333%; }

.col-xs-push-9 { left: 75%; }

.col-xs-push-8 { left: 66.6667%; }

.col-xs-push-7 { left: 58.3333%; }

.col-xs-push-6 { left: 50%; }

.col-xs-push-5 { left: 41.6667%; }

.col-xs-push-4 { left: 33.3333%; }

.col-xs-push-3 { left: 25%; }

.col-xs-push-2 { left: 16.6667%; }

.col-xs-push-1 { left: 8.33333%; }

.col-xs-push-0 { left: auto; }

.col-xs-offset-12 { margin-left: 100%; }

.col-xs-offset-11 { margin-left: 91.6667%; }

.col-xs-offset-10 { margin-left: 83.3333%; }

.col-xs-offset-9 { margin-left: 75%; }

.col-xs-offset-8 { margin-left: 66.6667%; }

.col-xs-offset-7 { margin-left: 58.3333%; }

.col-xs-offset-6 { margin-left: 50%; }

.col-xs-offset-5 { margin-left: 41.6667%; }

.col-xs-offset-4 { margin-left: 33.3333%; }

.col-xs-offset-3 { margin-left: 25%; }

.col-xs-offset-2 { margin-left: 16.6667%; }

.col-xs-offset-1 { margin-left: 8.33333%; }

.col-xs-offset-0 { margin-left: 0px; }

@media (min-width: 768px) {
  .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col=
-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9 { float: left;=
 }
  .col-sm-12 { width: 100%; }
  .col-sm-11 { width: 91.6667%; }
  .col-sm-10 { width: 83.3333%; }
  .col-sm-9 { width: 75%; }
  .col-sm-8 { width: 66.6667%; }
  .col-sm-7 { width: 58.3333%; }
  .col-sm-6 { width: 50%; }
  .col-sm-5 { width: 41.6667%; }
  .col-sm-4 { width: 33.3333%; }
  .col-sm-3 { width: 25%; }
  .col-sm-2 { width: 16.6667%; }
  .col-sm-1 { width: 8.33333%; }
  .col-sm-pull-12 { right: 100%; }
  .col-sm-pull-11 { right: 91.6667%; }
  .col-sm-pull-10 { right: 83.3333%; }
  .col-sm-pull-9 { right: 75%; }
  .col-sm-pull-8 { right: 66.6667%; }
  .col-sm-pull-7 { right: 58.3333%; }
  .col-sm-pull-6 { right: 50%; }
  .col-sm-pull-5 { right: 41.6667%; }
  .col-sm-pull-4 { right: 33.3333%; }
  .col-sm-pull-3 { right: 25%; }
  .col-sm-pull-2 { right: 16.6667%; }
  .col-sm-pull-1 { right: 8.33333%; }
  .col-sm-pull-0 { right: auto; }
  .col-sm-push-12 { left: 100%; }
  .col-sm-push-11 { left: 91.6667%; }
  .col-sm-push-10 { left: 83.3333%; }
  .col-sm-push-9 { left: 75%; }
  .col-sm-push-8 { left: 66.6667%; }
  .col-sm-push-7 { left: 58.3333%; }
  .col-sm-push-6 { left: 50%; }
  .col-sm-push-5 { left: 41.6667%; }
  .col-sm-push-4 { left: 33.3333%; }
  .col-sm-push-3 { left: 25%; }
  .col-sm-push-2 { left: 16.6667%; }
  .col-sm-push-1 { left: 8.33333%; }
  .col-sm-push-0 { left: auto; }
  .col-sm-offset-12 { margin-left: 100%; }
  .col-sm-offset-11 { margin-left: 91.6667%; }
  .col-sm-offset-10 { margin-left: 83.3333%; }
  .col-sm-offset-9 { margin-left: 75%; }
  .col-sm-offset-8 { margin-left: 66.6667%; }
  .col-sm-offset-7 { margin-left: 58.3333%; }
  .col-sm-offset-6 { margin-left: 50%; }
  .col-sm-offset-5 { margin-left: 41.6667%; }
  .col-sm-offset-4 { margin-left: 33.3333%; }
  .col-sm-offset-3 { margin-left: 25%; }
  .col-sm-offset-2 { margin-left: 16.6667%; }
  .col-sm-offset-1 { margin-left: 8.33333%; }
  .col-sm-offset-0 { margin-left: 0px; }
}

@media (min-width: 992px) {
  .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col=
-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9 { float: left;=
 }
  .col-md-12 { width: 100%; }
  .col-md-11 { width: 91.6667%; }
  .col-md-10 { width: 83.3333%; }
  .col-md-9 { width: 75%; }
  .col-md-8 { width: 66.6667%; }
  .col-md-7 { width: 58.3333%; }
  .col-md-6 { width: 50%; }
  .col-md-5 { width: 41.6667%; }
  .col-md-4 { width: 33.3333%; }
  .col-md-3 { width: 25%; }
  .col-md-2 { width: 16.6667%; }
  .col-md-1 { width: 8.33333%; }
  .col-md-pull-12 { right: 100%; }
  .col-md-pull-11 { right: 91.6667%; }
  .col-md-pull-10 { right: 83.3333%; }
  .col-md-pull-9 { right: 75%; }
  .col-md-pull-8 { right: 66.6667%; }
  .col-md-pull-7 { right: 58.3333%; }
  .col-md-pull-6 { right: 50%; }
  .col-md-pull-5 { right: 41.6667%; }
  .col-md-pull-4 { right: 33.3333%; }
  .col-md-pull-3 { right: 25%; }
  .col-md-pull-2 { right: 16.6667%; }
  .col-md-pull-1 { right: 8.33333%; }
  .col-md-pull-0 { right: auto; }
  .col-md-push-12 { left: 100%; }
  .col-md-push-11 { left: 91.6667%; }
  .col-md-push-10 { left: 83.3333%; }
  .col-md-push-9 { left: 75%; }
  .col-md-push-8 { left: 66.6667%; }
  .col-md-push-7 { left: 58.3333%; }
  .col-md-push-6 { left: 50%; }
  .col-md-push-5 { left: 41.6667%; }
  .col-md-push-4 { left: 33.3333%; }
  .col-md-push-3 { left: 25%; }
  .col-md-push-2 { left: 16.6667%; }
  .col-md-push-1 { left: 8.33333%; }
  .col-md-push-0 { left: auto; }
  .col-md-offset-12 { margin-left: 100%; }
  .col-md-offset-11 { margin-left: 91.6667%; }
  .col-md-offset-10 { margin-left: 83.3333%; }
  .col-md-offset-9 { margin-left: 75%; }
  .col-md-offset-8 { margin-left: 66.6667%; }
  .col-md-offset-7 { margin-left: 58.3333%; }
  .col-md-offset-6 { margin-left: 50%; }
  .col-md-offset-5 { margin-left: 41.6667%; }
  .col-md-offset-4 { margin-left: 33.3333%; }
  .col-md-offset-3 { margin-left: 25%; }
  .col-md-offset-2 { margin-left: 16.6667%; }
  .col-md-offset-1 { margin-left: 8.33333%; }
  .col-md-offset-0 { margin-left: 0px; }
}

@media (min-width: 1200px) {
  .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col=
-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9 { float: left;=
 }
  .col-lg-12 { width: 100%; }
  .col-lg-11 { width: 91.6667%; }
  .col-lg-10 { width: 83.3333%; }
  .col-lg-9 { width: 75%; }
  .col-lg-8 { width: 66.6667%; }
  .col-lg-7 { width: 58.3333%; }
  .col-lg-6 { width: 50%; }
  .col-lg-5 { width: 41.6667%; }
  .col-lg-4 { width: 33.3333%; }
  .col-lg-3 { width: 25%; }
  .col-lg-2 { width: 16.6667%; }
  .col-lg-1 { width: 8.33333%; }
  .col-lg-pull-12 { right: 100%; }
  .col-lg-pull-11 { right: 91.6667%; }
  .col-lg-pull-10 { right: 83.3333%; }
  .col-lg-pull-9 { right: 75%; }
  .col-lg-pull-8 { right: 66.6667%; }
  .col-lg-pull-7 { right: 58.3333%; }
  .col-lg-pull-6 { right: 50%; }
  .col-lg-pull-5 { right: 41.6667%; }
  .col-lg-pull-4 { right: 33.3333%; }
  .col-lg-pull-3 { right: 25%; }
  .col-lg-pull-2 { right: 16.6667%; }
  .col-lg-pull-1 { right: 8.33333%; }
  .col-lg-pull-0 { right: auto; }
  .col-lg-push-12 { left: 100%; }
  .col-lg-push-11 { left: 91.6667%; }
  .col-lg-push-10 { left: 83.3333%; }
  .col-lg-push-9 { left: 75%; }
  .col-lg-push-8 { left: 66.6667%; }
  .col-lg-push-7 { left: 58.3333%; }
  .col-lg-push-6 { left: 50%; }
  .col-lg-push-5 { left: 41.6667%; }
  .col-lg-push-4 { left: 33.3333%; }
  .col-lg-push-3 { left: 25%; }
  .col-lg-push-2 { left: 16.6667%; }
  .col-lg-push-1 { left: 8.33333%; }
  .col-lg-push-0 { left: auto; }
  .col-lg-offset-12 { margin-left: 100%; }
  .col-lg-offset-11 { margin-left: 91.6667%; }
  .col-lg-offset-10 { margin-left: 83.3333%; }
  .col-lg-offset-9 { margin-left: 75%; }
  .col-lg-offset-8 { margin-left: 66.6667%; }
  .col-lg-offset-7 { margin-left: 58.3333%; }
  .col-lg-offset-6 { margin-left: 50%; }
  .col-lg-offset-5 { margin-left: 41.6667%; }
  .col-lg-offset-4 { margin-left: 33.3333%; }
  .col-lg-offset-3 { margin-left: 25%; }
  .col-lg-offset-2 { margin-left: 16.6667%; }
  .col-lg-offset-1 { margin-left: 8.33333%; }
  .col-lg-offset-0 { margin-left: 0px; }
}

table { background-color: transparent; }

caption { padding-top: 8px; padding-bottom: 8px; color: rgb(119, 119, 119);=
 text-align: left; }

th { text-align: left; }

.table { width: 100%; max-width: 100%; margin-bottom: 20px; }

.table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > t=
d, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr =
> th { padding: 8px; line-height: 1.42857; vertical-align: top; border-top:=
 1px solid rgb(221, 221, 221); }

.table > thead > tr > th { vertical-align: bottom; border-bottom: 2px solid=
 rgb(221, 221, 221); }

.table > caption + thead > tr:first-child > td, .table > caption + thead > =
tr:first-child > th, .table > colgroup + thead > tr:first-child > td, .tabl=
e > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr=
:first-child > td, .table > thead:first-child > tr:first-child > th { borde=
r-top: 0px; }

.table > tbody + tbody { border-top: 2px solid rgb(221, 221, 221); }

.table .table { background-color: rgb(255, 255, 255); }

.table-condensed > tbody > tr > td, .table-condensed > tbody > tr > th, .ta=
ble-condensed > tfoot > tr > td, .table-condensed > tfoot > tr > th, .table=
-condensed > thead > tr > td, .table-condensed > thead > tr > th { padding:=
 5px; }

.table-bordered { border: 1px solid rgb(221, 221, 221); }

.table-bordered > tbody > tr > td, .table-bordered > tbody > tr > th, .tabl=
e-bordered > tfoot > tr > td, .table-bordered > tfoot > tr > th, .table-bor=
dered > thead > tr > td, .table-bordered > thead > tr > th { border: 1px so=
lid rgb(221, 221, 221); }

.table-bordered > thead > tr > td, .table-bordered > thead > tr > th { bord=
er-bottom-width: 2px; }

.table-striped > tbody > tr:nth-of-type(2n+1) { background-color: rgb(249, =
249, 249); }

.table-hover > tbody > tr:hover { background-color: rgb(245, 245, 245); }

table col[class*=3D"col-"] { position: static; display: table-column; float=
: none; }

table td[class*=3D"col-"], table th[class*=3D"col-"] { position: static; di=
splay: table-cell; float: none; }

.table > tbody > tr.active > td, .table > tbody > tr.active > th, .table > =
tbody > tr > td.active, .table > tbody > tr > th.active, .table > tfoot > t=
r.active > td, .table > tfoot > tr.active > th, .table > tfoot > tr > td.ac=
tive, .table > tfoot > tr > th.active, .table > thead > tr.active > td, .ta=
ble > thead > tr.active > th, .table > thead > tr > td.active, .table > the=
ad > tr > th.active { background-color: rgb(245, 245, 245); }

.table-hover > tbody > tr.active:hover > td, .table-hover > tbody > tr.acti=
ve:hover > th, .table-hover > tbody > tr:hover > .active, .table-hover > tb=
ody > tr > td.active:hover, .table-hover > tbody > tr > th.active:hover { b=
ackground-color: rgb(232, 232, 232); }

.table > tbody > tr.success > td, .table > tbody > tr.success > th, .table =
> tbody > tr > td.success, .table > tbody > tr > th.success, .table > tfoot=
 > tr.success > td, .table > tfoot > tr.success > th, .table > tfoot > tr >=
 td.success, .table > tfoot > tr > th.success, .table > thead > tr.success =
> td, .table > thead > tr.success > th, .table > thead > tr > td.success, .=
table > thead > tr > th.success { background-color: rgb(223, 240, 216); }

.table-hover > tbody > tr.success:hover > td, .table-hover > tbody > tr.suc=
cess:hover > th, .table-hover > tbody > tr:hover > .success, .table-hover >=
 tbody > tr > td.success:hover, .table-hover > tbody > tr > th.success:hove=
r { background-color: rgb(208, 233, 198); }

.table > tbody > tr.info > td, .table > tbody > tr.info > th, .table > tbod=
y > tr > td.info, .table > tbody > tr > th.info, .table > tfoot > tr.info >=
 td, .table > tfoot > tr.info > th, .table > tfoot > tr > td.info, .table >=
 tfoot > tr > th.info, .table > thead > tr.info > td, .table > thead > tr.i=
nfo > th, .table > thead > tr > td.info, .table > thead > tr > th.info { ba=
ckground-color: rgb(217, 237, 247); }

.table-hover > tbody > tr.info:hover > td, .table-hover > tbody > tr.info:h=
over > th, .table-hover > tbody > tr:hover > .info, .table-hover > tbody > =
tr > td.info:hover, .table-hover > tbody > tr > th.info:hover { background-=
color: rgb(196, 227, 243); }

.table > tbody > tr.warning > td, .table > tbody > tr.warning > th, .table =
> tbody > tr > td.warning, .table > tbody > tr > th.warning, .table > tfoot=
 > tr.warning > td, .table > tfoot > tr.warning > th, .table > tfoot > tr >=
 td.warning, .table > tfoot > tr > th.warning, .table > thead > tr.warning =
> td, .table > thead > tr.warning > th, .table > thead > tr > td.warning, .=
table > thead > tr > th.warning { background-color: rgb(252, 248, 227); }

.table-hover > tbody > tr.warning:hover > td, .table-hover > tbody > tr.war=
ning:hover > th, .table-hover > tbody > tr:hover > .warning, .table-hover >=
 tbody > tr > td.warning:hover, .table-hover > tbody > tr > th.warning:hove=
r { background-color: rgb(250, 242, 204); }

.table > tbody > tr.danger > td, .table > tbody > tr.danger > th, .table > =
tbody > tr > td.danger, .table > tbody > tr > th.danger, .table > tfoot > t=
r.danger > td, .table > tfoot > tr.danger > th, .table > tfoot > tr > td.da=
nger, .table > tfoot > tr > th.danger, .table > thead > tr.danger > td, .ta=
ble > thead > tr.danger > th, .table > thead > tr > td.danger, .table > the=
ad > tr > th.danger { background-color: rgb(242, 222, 222); }

.table-hover > tbody > tr.danger:hover > td, .table-hover > tbody > tr.dang=
er:hover > th, .table-hover > tbody > tr:hover > .danger, .table-hover > tb=
ody > tr > td.danger:hover, .table-hover > tbody > tr > th.danger:hover { b=
ackground-color: rgb(235, 204, 204); }

.table-responsive { min-height: 0.01%; overflow-x: auto; }

@media screen and (max-width: 767px) {
  .table-responsive { width: 100%; margin-bottom: 15px; overflow-y: hidden;=
 border: 1px solid rgb(221, 221, 221); }
  .table-responsive > .table { margin-bottom: 0px; }
  .table-responsive > .table > tbody > tr > td, .table-responsive > .table =
> tbody > tr > th, .table-responsive > .table > tfoot > tr > td, .table-res=
ponsive > .table > tfoot > tr > th, .table-responsive > .table > thead > tr=
 > td, .table-responsive > .table > thead > tr > th { white-space: nowrap; =
}
  .table-responsive > .table-bordered { border: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:first-child, .table=
-responsive > .table-bordered > tbody > tr > th:first-child, .table-respons=
ive > .table-bordered > tfoot > tr > td:first-child, .table-responsive > .t=
able-bordered > tfoot > tr > th:first-child, .table-responsive > .table-bor=
dered > thead > tr > td:first-child, .table-responsive > .table-bordered > =
thead > tr > th:first-child { border-left: 0px; }
  .table-responsive > .table-bordered > tbody > tr > td:last-child, .table-=
responsive > .table-bordered > tbody > tr > th:last-child, .table-responsiv=
e > .table-bordered > tfoot > tr > td:last-child, .table-responsive > .tabl=
e-bordered > tfoot > tr > th:last-child, .table-responsive > .table-bordere=
d > thead > tr > td:last-child, .table-responsive > .table-bordered > thead=
 > tr > th:last-child { border-right: 0px; }
  .table-responsive > .table-bordered > tbody > tr:last-child > td, .table-=
responsive > .table-bordered > tbody > tr:last-child > th, .table-responsiv=
e > .table-bordered > tfoot > tr:last-child > td, .table-responsive > .tabl=
e-bordered > tfoot > tr:last-child > th { border-bottom: 0px; }
}

fieldset { min-width: 0px; padding: 0px; margin: 0px; border: 0px; }

legend { display: block; width: 100%; padding: 0px; margin-bottom: 20px; fo=
nt-size: 21px; line-height: inherit; color: rgb(51, 51, 51); border-width: =
0px 0px 1px; border-top-style: initial; border-right-style: initial; border=
-left-style: initial; border-top-color: initial; border-right-color: initia=
l; border-left-color: initial; border-image: initial; border-bottom-style: =
solid; border-bottom-color: rgb(229, 229, 229); }

label { display: inline-block; max-width: 100%; margin-bottom: 5px; font-we=
ight: 700; }

input[type=3D"search"] { box-sizing: border-box; }

input[type=3D"checkbox"], input[type=3D"radio"] { margin: 4px 0px 0px; line=
-height: normal; }

input[type=3D"file"] { display: block; }

input[type=3D"range"] { display: block; width: 100%; }

select[multiple], select[size] { height: auto; }

input[type=3D"file"]:focus, input[type=3D"checkbox"]:focus, input[type=3D"r=
adio"]:focus { outline: -webkit-focus-ring-color auto 5px; outline-offset: =
-2px; }

output { display: block; padding-top: 7px; font-size: 14px; line-height: 1.=
42857; color: rgb(85, 85, 85); }

.form-control { display: block; width: 100%; height: 34px; padding: 6px 12p=
x; font-size: 14px; line-height: 1.42857; color: rgb(85, 85, 85); backgroun=
d-color: rgb(255, 255, 255); background-image: none; border: 1px solid rgb(=
204, 204, 204); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.075) 0px 1p=
x 1px inset; transition: border-color 0.15s ease-in-out, box-shadow 0.15s e=
ase-in-out; }

.form-control:focus { border-color: rgb(102, 175, 233); outline: 0px; box-s=
hadow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgba(102, 175, 233, 0.6) 0px=
 0px 8px; }

.form-control::-webkit-input-placeholder { color: rgb(153, 153, 153); }

.form-control[disabled], .form-control[readonly], fieldset[disabled] .form-=
control { background-color: rgb(238, 238, 238); opacity: 1; }

.form-control[disabled], fieldset[disabled] .form-control { cursor: not-all=
owed; }

textarea.form-control { height: auto; }

input[type=3D"search"] { -webkit-appearance: none; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type=3D"date"].form-control, input[type=3D"time"].form-control, inp=
ut[type=3D"datetime-local"].form-control, input[type=3D"month"].form-contro=
l { line-height: 34px; }
  .input-group-sm input[type=3D"date"], .input-group-sm input[type=3D"time"=
], .input-group-sm input[type=3D"datetime-local"], .input-group-sm input[ty=
pe=3D"month"], input[type=3D"date"].input-sm, input[type=3D"time"].input-sm=
, input[type=3D"datetime-local"].input-sm, input[type=3D"month"].input-sm {=
 line-height: 30px; }
  .input-group-lg input[type=3D"date"], .input-group-lg input[type=3D"time"=
], .input-group-lg input[type=3D"datetime-local"], .input-group-lg input[ty=
pe=3D"month"], input[type=3D"date"].input-lg, input[type=3D"time"].input-lg=
, input[type=3D"datetime-local"].input-lg, input[type=3D"month"].input-lg {=
 line-height: 46px; }
}

.form-group { margin-bottom: 15px; }

.checkbox, .radio { position: relative; display: block; margin-top: 10px; m=
argin-bottom: 10px; }

.checkbox label, .radio label { min-height: 20px; padding-left: 20px; margi=
n-bottom: 0px; font-weight: 400; cursor: pointer; }

.checkbox input[type=3D"checkbox"], .checkbox-inline input[type=3D"checkbox=
"], .radio input[type=3D"radio"], .radio-inline input[type=3D"radio"] { pos=
ition: absolute; margin-left: -20px; }

.checkbox + .checkbox, .radio + .radio { margin-top: -5px; }

.checkbox-inline, .radio-inline { position: relative; display: inline-block=
; padding-left: 20px; margin-bottom: 0px; font-weight: 400; vertical-align:=
 middle; cursor: pointer; }

.checkbox-inline + .checkbox-inline, .radio-inline + .radio-inline { margin=
-top: 0px; margin-left: 10px; }

fieldset[disabled] input[type=3D"checkbox"], fieldset[disabled] input[type=
=3D"radio"], input[type=3D"checkbox"].disabled, input[type=3D"checkbox"][di=
sabled], input[type=3D"radio"].disabled, input[type=3D"radio"][disabled] { =
cursor: not-allowed; }

.checkbox-inline.disabled, .radio-inline.disabled, fieldset[disabled] .chec=
kbox-inline, fieldset[disabled] .radio-inline { cursor: not-allowed; }

.checkbox.disabled label, .radio.disabled label, fieldset[disabled] .checkb=
ox label, fieldset[disabled] .radio label { cursor: not-allowed; }

.form-control-static { min-height: 34px; padding-top: 7px; padding-bottom: =
7px; margin-bottom: 0px; }

.form-control-static.input-lg, .form-control-static.input-sm { padding-righ=
t: 0px; padding-left: 0px; }

.input-sm { height: 30px; padding: 5px 10px; font-size: 12px; line-height: =
1.5; border-radius: 3px; }

select.input-sm { height: 30px; line-height: 30px; }

select[multiple].input-sm, textarea.input-sm { height: auto; }

.form-group-sm .form-control { height: 30px; padding: 5px 10px; font-size: =
12px; line-height: 1.5; border-radius: 3px; }

.form-group-sm select.form-control { height: 30px; line-height: 30px; }

.form-group-sm select[multiple].form-control, .form-group-sm textarea.form-=
control { height: auto; }

.form-group-sm .form-control-static { height: 30px; min-height: 32px; paddi=
ng: 6px 10px; font-size: 12px; line-height: 1.5; }

.input-lg { height: 46px; padding: 10px 16px; font-size: 18px; line-height:=
 1.33333; border-radius: 6px; }

select.input-lg { height: 46px; line-height: 46px; }

select[multiple].input-lg, textarea.input-lg { height: auto; }

.form-group-lg .form-control { height: 46px; padding: 10px 16px; font-size:=
 18px; line-height: 1.33333; border-radius: 6px; }

.form-group-lg select.form-control { height: 46px; line-height: 46px; }

.form-group-lg select[multiple].form-control, .form-group-lg textarea.form-=
control { height: auto; }

.form-group-lg .form-control-static { height: 46px; min-height: 38px; paddi=
ng: 11px 16px; font-size: 18px; line-height: 1.33333; }

.has-feedback { position: relative; }

.has-feedback .form-control { padding-right: 42.5px; }

.form-control-feedback { position: absolute; top: 0px; right: 0px; z-index:=
 2; display: block; width: 34px; height: 34px; line-height: 34px; text-alig=
n: center; pointer-events: none; }

.form-group-lg .form-control + .form-control-feedback, .input-group-lg + .f=
orm-control-feedback, .input-lg + .form-control-feedback { width: 46px; hei=
ght: 46px; line-height: 46px; }

.form-group-sm .form-control + .form-control-feedback, .input-group-sm + .f=
orm-control-feedback, .input-sm + .form-control-feedback { width: 30px; hei=
ght: 30px; line-height: 30px; }

.has-success .checkbox, .has-success .checkbox-inline, .has-success .contro=
l-label, .has-success .help-block, .has-success .radio, .has-success .radio=
-inline, .has-success.checkbox label, .has-success.checkbox-inline label, .=
has-success.radio label, .has-success.radio-inline label { color: rgb(60, 1=
18, 61); }

.has-success .form-control { border-color: rgb(60, 118, 61); box-shadow: rg=
ba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-success .form-control:focus { border-color: rgb(43, 84, 44); box-shado=
w: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(103, 177, 104) 0px 0px 6px; =
}

.has-success .input-group-addon { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(60, 118, 61); }

.has-success .form-control-feedback { color: rgb(60, 118, 61); }

.has-warning .checkbox, .has-warning .checkbox-inline, .has-warning .contro=
l-label, .has-warning .help-block, .has-warning .radio, .has-warning .radio=
-inline, .has-warning.checkbox label, .has-warning.checkbox-inline label, .=
has-warning.radio label, .has-warning.radio-inline label { color: rgb(138, =
109, 59); }

.has-warning .form-control { border-color: rgb(138, 109, 59); box-shadow: r=
gba(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-warning .form-control:focus { border-color: rgb(102, 81, 44); box-shad=
ow: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(192, 161, 107) 0px 0px 6px;=
 }

.has-warning .input-group-addon { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(138, 109, 59); }

.has-warning .form-control-feedback { color: rgb(138, 109, 59); }

.has-error .checkbox, .has-error .checkbox-inline, .has-error .control-labe=
l, .has-error .help-block, .has-error .radio, .has-error .radio-inline, .ha=
s-error.checkbox label, .has-error.checkbox-inline label, .has-error.radio =
label, .has-error.radio-inline label { color: rgb(169, 68, 66); }

.has-error .form-control { border-color: rgb(169, 68, 66); box-shadow: rgba=
(0, 0, 0, 0.075) 0px 1px 1px inset; }

.has-error .form-control:focus { border-color: rgb(132, 53, 52); box-shadow=
: rgba(0, 0, 0, 0.075) 0px 1px 1px inset, rgb(206, 132, 131) 0px 0px 6px; }

.has-error .input-group-addon { color: rgb(169, 68, 66); background-color: =
rgb(242, 222, 222); border-color: rgb(169, 68, 66); }

.has-error .form-control-feedback { color: rgb(169, 68, 66); }

.has-feedback label ~ .form-control-feedback { top: 25px; }

.has-feedback label.sr-only ~ .form-control-feedback { top: 0px; }

.help-block { display: block; margin-top: 5px; margin-bottom: 10px; color: =
rgb(115, 115, 115); }

@media (min-width: 768px) {
  .form-inline .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .form-inline .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .form-inline .form-control-static { display: inline-block; }
  .form-inline .input-group { display: inline-table; vertical-align: middle=
; }
  .form-inline .input-group .form-control, .form-inline .input-group .input=
-group-addon, .form-inline .input-group .input-group-btn { width: auto; }
  .form-inline .input-group > .form-control { width: 100%; }
  .form-inline .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .form-inline .checkbox, .form-inline .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .form-inline .checkbox label, .form-inline .radio label { padding-left: 0=
px; }
  .form-inline .checkbox input[type=3D"checkbox"], .form-inline .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .form-inline .has-feedback .form-control-feedback { top: 0px; }
}

.form-horizontal .checkbox, .form-horizontal .checkbox-inline, .form-horizo=
ntal .radio, .form-horizontal .radio-inline { padding-top: 7px; margin-top:=
 0px; margin-bottom: 0px; }

.form-horizontal .checkbox, .form-horizontal .radio { min-height: 27px; }

.form-horizontal .form-group { margin-right: -15px; margin-left: -15px; }

@media (min-width: 768px) {
  .form-horizontal .control-label { padding-top: 7px; margin-bottom: 0px; t=
ext-align: right; }
}

.form-horizontal .has-feedback .form-control-feedback { right: 15px; }

@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label { padding-top: 11px; font-=
size: 18px; }
}

@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label { padding-top: 6px; font-s=
ize: 12px; }
}

.btn { display: inline-block; padding: 6px 12px; margin-bottom: 0px; font-s=
ize: 14px; font-weight: 400; line-height: 1.42857; text-align: center; whit=
e-space: nowrap; vertical-align: middle; touch-action: manipulation; cursor=
: pointer; user-select: none; background-image: none; border: 1px solid tra=
nsparent; border-radius: 4px; }

.btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:a=
ctive:focus, .btn:focus { outline: -webkit-focus-ring-color auto 5px; outli=
ne-offset: -2px; }

.btn.focus, .btn:focus, .btn:hover { color: rgb(51, 51, 51); text-decoratio=
n: none; }

.btn.active, .btn:active { background-image: none; outline: 0px; box-shadow=
: rgba(0, 0, 0, 0.125) 0px 3px 5px inset; }

.btn.disabled, .btn[disabled], fieldset[disabled] .btn { cursor: not-allowe=
d; box-shadow: none; opacity: 0.65; }

a.btn.disabled, fieldset[disabled] a.btn { pointer-events: none; }

.btn-default { color: rgb(51, 51, 51); background-color: rgb(255, 255, 255)=
; border-color: rgb(204, 204, 204); }

.btn-default.focus, .btn-default:focus { color: rgb(51, 51, 51); background=
-color: rgb(230, 230, 230); border-color: rgb(140, 140, 140); }

.btn-default:hover { color: rgb(51, 51, 51); background-color: rgb(230, 230=
, 230); border-color: rgb(173, 173, 173); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { color: rgb(51, 51, 51); background-color: rgb(230, 230, 230); border-=
color: rgb(173, 173, 173); }

.btn-default.active.focus, .btn-default.active:focus, .btn-default.active:h=
over, .btn-default:active.focus, .btn-default:active:focus, .btn-default:ac=
tive:hover, .open > .dropdown-toggle.btn-default.focus, .open > .dropdown-t=
oggle.btn-default:focus, .open > .dropdown-toggle.btn-default:hover { color=
: rgb(51, 51, 51); background-color: rgb(212, 212, 212); border-color: rgb(=
140, 140, 140); }

.btn-default.active, .btn-default:active, .open > .dropdown-toggle.btn-defa=
ult { background-image: none; }

.btn-default.disabled.focus, .btn-default.disabled:focus, .btn-default.disa=
bled:hover, .btn-default[disabled].focus, .btn-default[disabled]:focus, .bt=
n-default[disabled]:hover, fieldset[disabled] .btn-default.focus, fieldset[=
disabled] .btn-default:focus, fieldset[disabled] .btn-default:hover { backg=
round-color: rgb(255, 255, 255); border-color: rgb(204, 204, 204); }

.btn-default .badge { color: rgb(255, 255, 255); background-color: rgb(51, =
51, 51); }

.btn-primary { color: rgb(255, 255, 255); background-color: rgb(51, 122, 18=
3); border-color: rgb(46, 109, 164); }

.btn-primary.focus, .btn-primary:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(40, 96, 144); border-color: rgb(18, 43, 64); }

.btn-primary:hover { color: rgb(255, 255, 255); background-color: rgb(40, 9=
6, 144); border-color: rgb(32, 77, 116); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { color: rgb(255, 255, 255); background-color: rgb(40, 96, 144); border=
-color: rgb(32, 77, 116); }

.btn-primary.active.focus, .btn-primary.active:focus, .btn-primary.active:h=
over, .btn-primary:active.focus, .btn-primary:active:focus, .btn-primary:ac=
tive:hover, .open > .dropdown-toggle.btn-primary.focus, .open > .dropdown-t=
oggle.btn-primary:focus, .open > .dropdown-toggle.btn-primary:hover { color=
: rgb(255, 255, 255); background-color: rgb(32, 77, 116); border-color: rgb=
(18, 43, 64); }

.btn-primary.active, .btn-primary:active, .open > .dropdown-toggle.btn-prim=
ary { background-image: none; }

.btn-primary.disabled.focus, .btn-primary.disabled:focus, .btn-primary.disa=
bled:hover, .btn-primary[disabled].focus, .btn-primary[disabled]:focus, .bt=
n-primary[disabled]:hover, fieldset[disabled] .btn-primary.focus, fieldset[=
disabled] .btn-primary:focus, fieldset[disabled] .btn-primary:hover { backg=
round-color: rgb(51, 122, 183); border-color: rgb(46, 109, 164); }

.btn-primary .badge { color: rgb(51, 122, 183); background-color: rgb(255, =
255, 255); }

.btn-success { color: rgb(255, 255, 255); background-color: rgb(92, 184, 92=
); border-color: rgb(76, 174, 76); }

.btn-success.focus, .btn-success:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(68, 157, 68); border-color: rgb(37, 86, 37); }

.btn-success:hover { color: rgb(255, 255, 255); background-color: rgb(68, 1=
57, 68); border-color: rgb(57, 132, 57); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { color: rgb(255, 255, 255); background-color: rgb(68, 157, 68); border=
-color: rgb(57, 132, 57); }

.btn-success.active.focus, .btn-success.active:focus, .btn-success.active:h=
over, .btn-success:active.focus, .btn-success:active:focus, .btn-success:ac=
tive:hover, .open > .dropdown-toggle.btn-success.focus, .open > .dropdown-t=
oggle.btn-success:focus, .open > .dropdown-toggle.btn-success:hover { color=
: rgb(255, 255, 255); background-color: rgb(57, 132, 57); border-color: rgb=
(37, 86, 37); }

.btn-success.active, .btn-success:active, .open > .dropdown-toggle.btn-succ=
ess { background-image: none; }

.btn-success.disabled.focus, .btn-success.disabled:focus, .btn-success.disa=
bled:hover, .btn-success[disabled].focus, .btn-success[disabled]:focus, .bt=
n-success[disabled]:hover, fieldset[disabled] .btn-success.focus, fieldset[=
disabled] .btn-success:focus, fieldset[disabled] .btn-success:hover { backg=
round-color: rgb(92, 184, 92); border-color: rgb(76, 174, 76); }

.btn-success .badge { color: rgb(92, 184, 92); background-color: rgb(255, 2=
55, 255); }

.btn-info { color: rgb(255, 255, 255); background-color: rgb(91, 192, 222);=
 border-color: rgb(70, 184, 218); }

.btn-info.focus, .btn-info:focus { color: rgb(255, 255, 255); background-co=
lor: rgb(49, 176, 213); border-color: rgb(27, 109, 133); }

.btn-info:hover { color: rgb(255, 255, 255); background-color: rgb(49, 176,=
 213); border-color: rgb(38, 154, 188); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { col=
or: rgb(255, 255, 255); background-color: rgb(49, 176, 213); border-color: =
rgb(38, 154, 188); }

.btn-info.active.focus, .btn-info.active:focus, .btn-info.active:hover, .bt=
n-info:active.focus, .btn-info:active:focus, .btn-info:active:hover, .open =
> .dropdown-toggle.btn-info.focus, .open > .dropdown-toggle.btn-info:focus,=
 .open > .dropdown-toggle.btn-info:hover { color: rgb(255, 255, 255); backg=
round-color: rgb(38, 154, 188); border-color: rgb(27, 109, 133); }

.btn-info.active, .btn-info:active, .open > .dropdown-toggle.btn-info { bac=
kground-image: none; }

.btn-info.disabled.focus, .btn-info.disabled:focus, .btn-info.disabled:hove=
r, .btn-info[disabled].focus, .btn-info[disabled]:focus, .btn-info[disabled=
]:hover, fieldset[disabled] .btn-info.focus, fieldset[disabled] .btn-info:f=
ocus, fieldset[disabled] .btn-info:hover { background-color: rgb(91, 192, 2=
22); border-color: rgb(70, 184, 218); }

.btn-info .badge { color: rgb(91, 192, 222); background-color: rgb(255, 255=
, 255); }

.btn-warning { color: rgb(255, 255, 255); background-color: rgb(240, 173, 7=
8); border-color: rgb(238, 162, 54); }

.btn-warning.focus, .btn-warning:focus { color: rgb(255, 255, 255); backgro=
und-color: rgb(236, 151, 31); border-color: rgb(152, 95, 13); }

.btn-warning:hover { color: rgb(255, 255, 255); background-color: rgb(236, =
151, 31); border-color: rgb(213, 133, 18); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { color: rgb(255, 255, 255); background-color: rgb(236, 151, 31); borde=
r-color: rgb(213, 133, 18); }

.btn-warning.active.focus, .btn-warning.active:focus, .btn-warning.active:h=
over, .btn-warning:active.focus, .btn-warning:active:focus, .btn-warning:ac=
tive:hover, .open > .dropdown-toggle.btn-warning.focus, .open > .dropdown-t=
oggle.btn-warning:focus, .open > .dropdown-toggle.btn-warning:hover { color=
: rgb(255, 255, 255); background-color: rgb(213, 133, 18); border-color: rg=
b(152, 95, 13); }

.btn-warning.active, .btn-warning:active, .open > .dropdown-toggle.btn-warn=
ing { background-image: none; }

.btn-warning.disabled.focus, .btn-warning.disabled:focus, .btn-warning.disa=
bled:hover, .btn-warning[disabled].focus, .btn-warning[disabled]:focus, .bt=
n-warning[disabled]:hover, fieldset[disabled] .btn-warning.focus, fieldset[=
disabled] .btn-warning:focus, fieldset[disabled] .btn-warning:hover { backg=
round-color: rgb(240, 173, 78); border-color: rgb(238, 162, 54); }

.btn-warning .badge { color: rgb(240, 173, 78); background-color: rgb(255, =
255, 255); }

.btn-danger { color: rgb(255, 255, 255); background-color: rgb(217, 83, 79)=
; border-color: rgb(212, 63, 58); }

.btn-danger.focus, .btn-danger:focus { color: rgb(255, 255, 255); backgroun=
d-color: rgb(201, 48, 44); border-color: rgb(118, 28, 25); }

.btn-danger:hover { color: rgb(255, 255, 255); background-color: rgb(201, 4=
8, 44); border-color: rgb(172, 41, 37); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { color: rgb(255, 255, 255); background-color: rgb(201, 48, 44); border-co=
lor: rgb(172, 41, 37); }

.btn-danger.active.focus, .btn-danger.active:focus, .btn-danger.active:hove=
r, .btn-danger:active.focus, .btn-danger:active:focus, .btn-danger:active:h=
over, .open > .dropdown-toggle.btn-danger.focus, .open > .dropdown-toggle.b=
tn-danger:focus, .open > .dropdown-toggle.btn-danger:hover { color: rgb(255=
, 255, 255); background-color: rgb(172, 41, 37); border-color: rgb(118, 28,=
 25); }

.btn-danger.active, .btn-danger:active, .open > .dropdown-toggle.btn-danger=
 { background-image: none; }

.btn-danger.disabled.focus, .btn-danger.disabled:focus, .btn-danger.disable=
d:hover, .btn-danger[disabled].focus, .btn-danger[disabled]:focus, .btn-dan=
ger[disabled]:hover, fieldset[disabled] .btn-danger.focus, fieldset[disable=
d] .btn-danger:focus, fieldset[disabled] .btn-danger:hover { background-col=
or: rgb(217, 83, 79); border-color: rgb(212, 63, 58); }

.btn-danger .badge { color: rgb(217, 83, 79); background-color: rgb(255, 25=
5, 255); }

.btn-link { font-weight: 400; color: rgb(51, 122, 183); border-radius: 0px;=
 }

.btn-link, .btn-link.active, .btn-link:active, .btn-link[disabled], fieldse=
t[disabled] .btn-link { background-color: transparent; box-shadow: none; }

.btn-link, .btn-link:active, .btn-link:focus, .btn-link:hover { border-colo=
r: transparent; }

.btn-link:focus, .btn-link:hover { color: rgb(35, 82, 124); text-decoration=
: underline; background-color: transparent; }

.btn-link[disabled]:focus, .btn-link[disabled]:hover, fieldset[disabled] .b=
tn-link:focus, fieldset[disabled] .btn-link:hover { color: rgb(119, 119, 11=
9); text-decoration: none; }

.btn-group-lg > .btn, .btn-lg { padding: 10px 16px; font-size: 18px; line-h=
eight: 1.33333; border-radius: 6px; }

.btn-group-sm > .btn, .btn-sm { padding: 5px 10px; font-size: 12px; line-he=
ight: 1.5; border-radius: 3px; }

.btn-group-xs > .btn, .btn-xs { padding: 1px 5px; font-size: 12px; line-hei=
ght: 1.5; border-radius: 3px; }

.btn-block { display: block; width: 100%; }

.btn-block + .btn-block { margin-top: 5px; }

input[type=3D"button"].btn-block, input[type=3D"reset"].btn-block, input[ty=
pe=3D"submit"].btn-block { width: 100%; }

.fade { opacity: 0; transition: opacity 0.15s linear; }

.fade.in { opacity: 1; }

.collapse { display: none; }

.collapse.in { display: block; }

tr.collapse.in { display: table-row; }

tbody.collapse.in { display: table-row-group; }

.collapsing { position: relative; height: 0px; overflow: hidden; transition=
-timing-function: ease; transition-duration: 0.35s; transition-property: he=
ight, visibility; }

.caret { display: inline-block; width: 0px; height: 0px; margin-left: 2px; =
vertical-align: middle; border-top: 4px dashed; border-right: 4px solid tra=
nsparent; border-left: 4px solid transparent; }

.dropdown, .dropup { position: relative; }

.dropdown-toggle:focus { outline: 0px; }

.dropdown-menu { position: absolute; top: 100%; left: 0px; z-index: 1000; d=
isplay: none; float: left; min-width: 160px; padding: 5px 0px; margin: 2px =
0px 0px; font-size: 14px; text-align: left; list-style: none; background-co=
lor: rgb(255, 255, 255); background-clip: padding-box; border: 1px solid rg=
ba(0, 0, 0, 0.15); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.176) 0px=
 6px 12px; }

.dropdown-menu.pull-right { right: 0px; left: auto; }

.dropdown-menu .divider { height: 1px; margin: 9px 0px; overflow: hidden; b=
ackground-color: rgb(229, 229, 229); }

.dropdown-menu > li > a { display: block; padding: 3px 20px; clear: both; f=
ont-weight: 400; line-height: 1.42857; color: rgb(51, 51, 51); white-space:=
 nowrap; }

.dropdown-menu > li > a:focus, .dropdown-menu > li > a:hover { color: rgb(3=
8, 38, 38); text-decoration: none; background-color: rgb(245, 245, 245); }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown=
-menu > .active > a:hover { color: rgb(255, 255, 255); text-decoration: non=
e; background-color: rgb(51, 122, 183); outline: 0px; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:focus, .drop=
down-menu > .disabled > a:hover { color: rgb(119, 119, 119); }

.dropdown-menu > .disabled > a:focus, .dropdown-menu > .disabled > a:hover =
{ text-decoration: none; cursor: not-allowed; background-color: transparent=
; background-image: none; }

.open > .dropdown-menu { display: block; }

.open > a { outline: 0px; }

.dropdown-menu-right { right: 0px; left: auto; }

.dropdown-menu-left { right: auto; left: 0px; }

.dropdown-header { display: block; padding: 3px 20px; font-size: 12px; line=
-height: 1.42857; color: rgb(119, 119, 119); white-space: nowrap; }

.dropdown-backdrop { position: fixed; top: 0px; right: 0px; bottom: 0px; le=
ft: 0px; z-index: 990; }

.pull-right > .dropdown-menu { right: 0px; left: auto; }

.dropup .caret, .navbar-fixed-bottom .dropdown .caret { content: ""; border=
-top: 0px; border-bottom: 4px dashed; }

.dropup .dropdown-menu, .navbar-fixed-bottom .dropdown .dropdown-menu { top=
: auto; bottom: 100%; margin-bottom: 2px; }

@media (min-width: 768px) {
  .navbar-right .dropdown-menu { right: 0px; left: auto; }
  .navbar-right .dropdown-menu-left { right: auto; left: 0px; }
}

.btn-group, .btn-group-vertical { position: relative; display: inline-block=
; vertical-align: middle; }

.btn-group-vertical > .btn, .btn-group > .btn { position: relative; float: =
left; }

.btn-group-vertical > .btn.active, .btn-group-vertical > .btn:active, .btn-=
group-vertical > .btn:focus, .btn-group-vertical > .btn:hover, .btn-group >=
 .btn.active, .btn-group > .btn:active, .btn-group > .btn:focus, .btn-group=
 > .btn:hover { z-index: 2; }

.btn-group .btn + .btn, .btn-group .btn + .btn-group, .btn-group .btn-group=
 + .btn, .btn-group .btn-group + .btn-group { margin-left: -1px; }

.btn-toolbar { margin-left: -5px; }

.btn-toolbar .btn, .btn-toolbar .btn-group, .btn-toolbar .input-group { flo=
at: left; }

.btn-toolbar > .btn, .btn-toolbar > .btn-group, .btn-toolbar > .input-group=
 { margin-left: 5px; }

.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) =
{ border-radius: 0px; }

.btn-group > .btn:first-child { margin-left: 0px; }

.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn:last-child:not(:first-child), .btn-group > .dropdown-togg=
le:not(:first-child) { border-top-left-radius: 0px; border-bottom-left-radi=
us: 0px; }

.btn-group > .btn-group { float: left; }

.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn { border-=
radius: 0px; }

.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child, .bt=
n-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle { bord=
er-top-right-radius: 0px; border-bottom-right-radius: 0px; }

.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child { b=
order-top-left-radius: 0px; border-bottom-left-radius: 0px; }

.btn-group .dropdown-toggle:active, .btn-group.open .dropdown-toggle { outl=
ine: 0px; }

.btn-group > .btn + .dropdown-toggle { padding-right: 8px; padding-left: 8p=
x; }

.btn-group > .btn-lg + .dropdown-toggle { padding-right: 12px; padding-left=
: 12px; }

.btn-group.open .dropdown-toggle { box-shadow: rgba(0, 0, 0, 0.125) 0px 3px=
 5px inset; }

.btn-group.open .dropdown-toggle.btn-link { box-shadow: none; }

.btn .caret { margin-left: 0px; }

.btn-lg .caret { border-width: 5px 5px 0px; }

.dropup .btn-lg .caret { border-width: 0px 5px 5px; }

.btn-group-vertical > .btn, .btn-group-vertical > .btn-group, .btn-group-ve=
rtical > .btn-group > .btn { display: block; float: none; width: 100%; max-=
width: 100%; }

.btn-group-vertical > .btn-group > .btn { float: none; }

.btn-group-vertical > .btn + .btn, .btn-group-vertical > .btn + .btn-group,=
 .btn-group-vertical > .btn-group + .btn, .btn-group-vertical > .btn-group =
+ .btn-group { margin-top: -1px; margin-left: 0px; }

.btn-group-vertical > .btn:not(:first-child):not(:last-child) { border-radi=
us: 0px; }

.btn-group-vertical > .btn:first-child:not(:last-child) { border-radius: 4p=
x 4px 0px 0px; }

.btn-group-vertical > .btn:last-child:not(:first-child) { border-radius: 0p=
x 0px 4px 4px; }

.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn =
{ border-radius: 0px; }

.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-c=
hild, .btn-group-vertical > .btn-group:first-child:not(:last-child) > .drop=
down-toggle { border-bottom-right-radius: 0px; border-bottom-left-radius: 0=
px; }

.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-=
child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.btn-group-justified { display: table; width: 100%; table-layout: fixed; bo=
rder-collapse: separate; }

.btn-group-justified > .btn, .btn-group-justified > .btn-group { display: t=
able-cell; float: none; width: 1%; }

.btn-group-justified > .btn-group .btn { width: 100%; }

.btn-group-justified > .btn-group .dropdown-menu { left: auto; }

[data-toggle=3D"buttons"] > .btn input[type=3D"checkbox"], [data-toggle=3D"=
buttons"] > .btn input[type=3D"radio"], [data-toggle=3D"buttons"] > .btn-gr=
oup > .btn input[type=3D"checkbox"], [data-toggle=3D"buttons"] > .btn-group=
 > .btn input[type=3D"radio"] { position: absolute; clip: rect(0px, 0px, 0p=
x, 0px); pointer-events: none; }

.input-group { position: relative; display: table; border-collapse: separat=
e; }

.input-group[class*=3D"col-"] { float: none; padding-right: 0px; padding-le=
ft: 0px; }

.input-group .form-control { position: relative; z-index: 2; float: left; w=
idth: 100%; margin-bottom: 0px; }

.input-group .form-control:focus { z-index: 3; }

.input-group-lg > .form-control, .input-group-lg > .input-group-addon, .inp=
ut-group-lg > .input-group-btn > .btn { height: 46px; padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; border-radius: 6px; }

select.input-group-lg > .form-control, select.input-group-lg > .input-group=
-addon, select.input-group-lg > .input-group-btn > .btn { height: 46px; lin=
e-height: 46px; }

select[multiple].input-group-lg > .form-control, select[multiple].input-gro=
up-lg > .input-group-addon, select[multiple].input-group-lg > .input-group-=
btn > .btn, textarea.input-group-lg > .form-control, textarea.input-group-l=
g > .input-group-addon, textarea.input-group-lg > .input-group-btn > .btn {=
 height: auto; }

.input-group-sm > .form-control, .input-group-sm > .input-group-addon, .inp=
ut-group-sm > .input-group-btn > .btn { height: 30px; padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; border-radius: 3px; }

select.input-group-sm > .form-control, select.input-group-sm > .input-group=
-addon, select.input-group-sm > .input-group-btn > .btn { height: 30px; lin=
e-height: 30px; }

select[multiple].input-group-sm > .form-control, select[multiple].input-gro=
up-sm > .input-group-addon, select[multiple].input-group-sm > .input-group-=
btn > .btn, textarea.input-group-sm > .form-control, textarea.input-group-s=
m > .input-group-addon, textarea.input-group-sm > .input-group-btn > .btn {=
 height: auto; }

.input-group .form-control, .input-group-addon, .input-group-btn { display:=
 table-cell; }

.input-group .form-control:not(:first-child):not(:last-child), .input-group=
-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-chil=
d):not(:last-child) { border-radius: 0px; }

.input-group-addon, .input-group-btn { width: 1%; white-space: nowrap; vert=
ical-align: middle; }

.input-group-addon { padding: 6px 12px; font-size: 14px; font-weight: 400; =
line-height: 1; color: rgb(85, 85, 85); text-align: center; background-colo=
r: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); border-radius:=
 4px; }

.input-group-addon.input-sm { padding: 5px 10px; font-size: 12px; border-ra=
dius: 3px; }

.input-group-addon.input-lg { padding: 10px 16px; font-size: 18px; border-r=
adius: 6px; }

.input-group-addon input[type=3D"checkbox"], .input-group-addon input[type=
=3D"radio"] { margin-top: 0px; }

.input-group .form-control:first-child, .input-group-addon:first-child, .in=
put-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-group=
 > .btn, .input-group-btn:first-child > .dropdown-toggle, .input-group-btn:=
last-child > .btn-group:not(:last-child) > .btn, .input-group-btn:last-chil=
d > .btn:not(:last-child):not(.dropdown-toggle) { border-top-right-radius: =
0px; border-bottom-right-radius: 0px; }

.input-group-addon:first-child { border-right: 0px; }

.input-group .form-control:last-child, .input-group-addon:last-child, .inpu=
t-group-btn:first-child > .btn-group:not(:first-child) > .btn, .input-group=
-btn:first-child > .btn:not(:first-child), .input-group-btn:last-child > .b=
tn, .input-group-btn:last-child > .btn-group > .btn, .input-group-btn:last-=
child > .dropdown-toggle { border-top-left-radius: 0px; border-bottom-left-=
radius: 0px; }

.input-group-addon:last-child { border-left: 0px; }

.input-group-btn { position: relative; font-size: 0px; white-space: nowrap;=
 }

.input-group-btn > .btn { position: relative; }

.input-group-btn > .btn + .btn { margin-left: -1px; }

.input-group-btn > .btn:active, .input-group-btn > .btn:focus, .input-group=
-btn > .btn:hover { z-index: 2; }

.input-group-btn:first-child > .btn, .input-group-btn:first-child > .btn-gr=
oup { margin-right: -1px; }

.input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-grou=
p { z-index: 2; margin-left: -1px; }

.nav { padding-left: 0px; margin-bottom: 0px; list-style: none; }

.nav > li { position: relative; display: block; }

.nav > li > a { position: relative; display: block; padding: 10px 15px; }

.nav > li > a:focus, .nav > li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.nav > li.disabled > a { color: rgb(119, 119, 119); }

.nav > li.disabled > a:focus, .nav > li.disabled > a:hover { color: rgb(119=
, 119, 119); text-decoration: none; cursor: not-allowed; background-color: =
transparent; }

.nav .open > a, .nav .open > a:focus, .nav .open > a:hover { background-col=
or: rgb(238, 238, 238); border-color: rgb(51, 122, 183); }

.nav .nav-divider { height: 1px; margin: 9px 0px; overflow: hidden; backgro=
und-color: rgb(229, 229, 229); }

.nav > li > a > img { max-width: none; }

.nav-tabs { border-bottom: 1px solid rgb(221, 221, 221); }

.nav-tabs > li { float: left; margin-bottom: -1px; }

.nav-tabs > li > a { margin-right: 2px; line-height: 1.42857; border: 1px s=
olid transparent; border-radius: 4px 4px 0px 0px; }

.nav-tabs > li > a:hover { border-color: rgb(238, 238, 238) rgb(238, 238, 2=
38) rgb(221, 221, 221); }

.nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.=
active > a:hover { color: rgb(85, 85, 85); cursor: default; background-colo=
r: rgb(255, 255, 255); border-width: 1px; border-style: solid; border-color=
: rgb(221, 221, 221) rgb(221, 221, 221) transparent; border-image: initial;=
 }

.nav-tabs.nav-justified { width: 100%; border-bottom: 0px; }

.nav-tabs.nav-justified > li { float: none; }

.nav-tabs.nav-justified > li > a { margin-bottom: 5px; text-align: center; =
}

.nav-tabs.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto;=
 }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li { display: table-cell; width: 1%; }
  .nav-tabs.nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs.nav-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active > =
a:focus, .nav-tabs.nav-justified > .active > a:hover { border: 1px solid rg=
b(221, 221, 221); }

@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a { border-bottom: 1px solid rgb(221, 221,=
 221); border-radius: 4px 4px 0px 0px; }
  .nav-tabs.nav-justified > .active > a, .nav-tabs.nav-justified > .active =
> a:focus, .nav-tabs.nav-justified > .active > a:hover { border-bottom-colo=
r: rgb(255, 255, 255); }
}

.nav-pills > li { float: left; }

.nav-pills > li > a { border-radius: 4px; }

.nav-pills > li + li { margin-left: 2px; }

.nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > =
li.active > a:hover { color: rgb(255, 255, 255); background-color: rgb(51, =
122, 183); }

.nav-stacked > li { float: none; }

.nav-stacked > li + li { margin-top: 2px; margin-left: 0px; }

.nav-justified { width: 100%; }

.nav-justified > li { float: none; }

.nav-justified > li > a { margin-bottom: 5px; text-align: center; }

.nav-justified > .dropdown .dropdown-menu { top: auto; left: auto; }

@media (min-width: 768px) {
  .nav-justified > li { display: table-cell; width: 1%; }
  .nav-justified > li > a { margin-bottom: 0px; }
}

.nav-tabs-justified { border-bottom: 0px; }

.nav-tabs-justified > li > a { margin-right: 0px; border-radius: 4px; }

.nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focus,=
 .nav-tabs-justified > .active > a:hover { border: 1px solid rgb(221, 221, =
221); }

@media (min-width: 768px) {
  .nav-tabs-justified > li > a { border-bottom: 1px solid rgb(221, 221, 221=
); border-radius: 4px 4px 0px 0px; }
  .nav-tabs-justified > .active > a, .nav-tabs-justified > .active > a:focu=
s, .nav-tabs-justified > .active > a:hover { border-bottom-color: rgb(255, =
255, 255); }
}

.tab-content > .tab-pane { display: none; }

.tab-content > .active { display: block; }

.nav-tabs .dropdown-menu { margin-top: -1px; border-top-left-radius: 0px; b=
order-top-right-radius: 0px; }

.navbar { position: relative; min-height: 50px; margin-bottom: 20px; border=
: 1px solid transparent; }

@media (min-width: 768px) {
  .navbar { border-radius: 4px; }
}

@media (min-width: 768px) {
  .navbar-header { float: left; }
}

.navbar-collapse { padding-right: 15px; padding-left: 15px; overflow-x: vis=
ible; border-top: 1px solid transparent; box-shadow: rgba(255, 255, 255, 0.=
1) 0px 1px 0px inset; }

.navbar-collapse.in { overflow-y: auto; }

@media (min-width: 768px) {
  .navbar-collapse { width: auto; border-top: 0px; box-shadow: none; }
  .navbar-collapse.collapse { padding-bottom: 0px; display: block !importan=
t; height: auto !important; overflow: visible !important; }
  .navbar-collapse.in { overflow-y: visible; }
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
, .navbar-static-top .navbar-collapse { padding-right: 0px; padding-left: 0=
px; }
}

.navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse {=
 max-height: 340px; }

@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-bottom .navbar-collapse, .navbar-fixed-top .navbar-collapse=
 { max-height: 200px; }
}

.container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .co=
ntainer > .navbar-collapse, .container > .navbar-header { margin-right: -15=
px; margin-left: -15px; }

@media (min-width: 768px) {
  .container-fluid > .navbar-collapse, .container-fluid > .navbar-header, .=
container > .navbar-collapse, .container > .navbar-header { margin-right: 0=
px; margin-left: 0px; }
}

.navbar-static-top { z-index: 1000; border-width: 0px 0px 1px; }

@media (min-width: 768px) {
  .navbar-static-top { border-radius: 0px; }
}

.navbar-fixed-bottom, .navbar-fixed-top { position: fixed; right: 0px; left=
: 0px; z-index: 1030; }

@media (min-width: 768px) {
  .navbar-fixed-bottom, .navbar-fixed-top { border-radius: 0px; }
}

.navbar-fixed-top { top: 0px; border-width: 0px 0px 1px; }

.navbar-fixed-bottom { bottom: 0px; margin-bottom: 0px; border-width: 1px 0=
px 0px; }

.navbar-brand { float: left; height: 50px; padding: 15px; font-size: 18px; =
line-height: 20px; }

.navbar-brand:focus, .navbar-brand:hover { text-decoration: none; }

.navbar-brand > img { display: block; }

@media (min-width: 768px) {
  .navbar > .container .navbar-brand, .navbar > .container-fluid .navbar-br=
and { margin-left: -15px; }
}

.navbar-toggle { position: relative; float: right; padding: 9px 10px; margi=
n-top: 8px; margin-right: 15px; margin-bottom: 8px; background-color: trans=
parent; background-image: none; border: 1px solid transparent; border-radiu=
s: 4px; }

.navbar-toggle:focus { outline: 0px; }

.navbar-toggle .icon-bar { display: block; width: 22px; height: 2px; border=
-radius: 1px; }

.navbar-toggle .icon-bar + .icon-bar { margin-top: 4px; }

@media (min-width: 768px) {
  .navbar-toggle { display: none; }
}

.navbar-nav { margin: 7.5px -15px; }

.navbar-nav > li > a { padding-top: 10px; padding-bottom: 10px; line-height=
: 20px; }

@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu { position: static; float: none; width: =
auto; margin-top: 0px; background-color: transparent; border: 0px; box-shad=
ow: none; }
  .navbar-nav .open .dropdown-menu .dropdown-header, .navbar-nav .open .dro=
pdown-menu > li > a { padding: 5px 15px 5px 25px; }
  .navbar-nav .open .dropdown-menu > li > a { line-height: 20px; }
  .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-nav .open .dropd=
own-menu > li > a:hover { background-image: none; }
}

@media (min-width: 768px) {
  .navbar-nav { float: left; margin: 0px; }
  .navbar-nav > li { float: left; }
  .navbar-nav > li > a { padding-top: 15px; padding-bottom: 15px; }
}

.navbar-form { padding: 10px 15px; margin: 8px -15px; border-top: 1px solid=
 transparent; border-bottom: 1px solid transparent; box-shadow: rgba(255, 2=
55, 255, 0.1) 0px 1px 0px inset, rgba(255, 255, 255, 0.1) 0px 1px 0px; }

@media (min-width: 768px) {
  .navbar-form .form-group { display: inline-block; margin-bottom: 0px; ver=
tical-align: middle; }
  .navbar-form .form-control { display: inline-block; width: auto; vertical=
-align: middle; }
  .navbar-form .form-control-static { display: inline-block; }
  .navbar-form .input-group { display: inline-table; vertical-align: middle=
; }
  .navbar-form .input-group .form-control, .navbar-form .input-group .input=
-group-addon, .navbar-form .input-group .input-group-btn { width: auto; }
  .navbar-form .input-group > .form-control { width: 100%; }
  .navbar-form .control-label { margin-bottom: 0px; vertical-align: middle;=
 }
  .navbar-form .checkbox, .navbar-form .radio { display: inline-block; marg=
in-top: 0px; margin-bottom: 0px; vertical-align: middle; }
  .navbar-form .checkbox label, .navbar-form .radio label { padding-left: 0=
px; }
  .navbar-form .checkbox input[type=3D"checkbox"], .navbar-form .radio inpu=
t[type=3D"radio"] { position: relative; margin-left: 0px; }
  .navbar-form .has-feedback .form-control-feedback { top: 0px; }
}

@media (max-width: 767px) {
  .navbar-form .form-group { margin-bottom: 5px; }
  .navbar-form .form-group:last-child { margin-bottom: 0px; }
}

@media (min-width: 768px) {
  .navbar-form { width: auto; padding-top: 0px; padding-bottom: 0px; margin=
-right: 0px; margin-left: 0px; border: 0px; box-shadow: none; }
}

.navbar-nav > li > .dropdown-menu { margin-top: 0px; border-top-left-radius=
: 0px; border-top-right-radius: 0px; }

.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu { margin-bottom: 0px=
; border-radius: 4px 4px 0px 0px; }

.navbar-btn { margin-top: 8px; margin-bottom: 8px; }

.navbar-btn.btn-sm { margin-top: 10px; margin-bottom: 10px; }

.navbar-btn.btn-xs { margin-top: 14px; margin-bottom: 14px; }

.navbar-text { margin-top: 15px; margin-bottom: 15px; }

@media (min-width: 768px) {
  .navbar-text { float: left; margin-right: 15px; margin-left: 15px; }
}

@media (min-width: 768px) {
  .navbar-left { float: left !important; }
  .navbar-right { margin-right: -15px; float: right !important; }
  .navbar-right ~ .navbar-right { margin-right: 0px; }
}

.navbar-default { background-color: rgb(248, 248, 248); border-color: rgb(2=
31, 231, 231); }

.navbar-default .navbar-brand { color: rgb(119, 119, 119); }

.navbar-default .navbar-brand:focus, .navbar-default .navbar-brand:hover { =
color: rgb(94, 94, 94); background-color: transparent; }

.navbar-default .navbar-text { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a { color: rgb(119, 119, 119); }

.navbar-default .navbar-nav > li > a:focus, .navbar-default .navbar-nav > l=
i > a:hover { color: rgb(51, 51, 51); background-color: transparent; }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:focus, .navbar-default .navbar-nav > .active > a:hover { color: r=
gb(85, 85, 85); background-color: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .disabled > a, .navbar-default .navbar-nav > =
.disabled > a:focus, .navbar-default .navbar-nav > .disabled > a:hover { co=
lor: rgb(204, 204, 204); background-color: transparent; }

.navbar-default .navbar-toggle { border-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle:focus, .navbar-default .navbar-toggle:hover =
{ background-color: rgb(221, 221, 221); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(136, 136, =
136); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border-col=
or: rgb(231, 231, 231); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:focus, .navbar-default .navbar-nav > .open > a:hover { color: rgb(85,=
 85, 85); background-color: rgb(231, 231, 231); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(11=
9, 119, 119); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(51, 51=
, 51); background-color: transparent; }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(85, 85,=
 85); background-color: rgb(231, 231, 231); }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-default .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-de=
fault .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(2=
04, 204, 204); background-color: transparent; }
}

.navbar-default .navbar-link { color: rgb(119, 119, 119); }

.navbar-default .navbar-link:hover { color: rgb(51, 51, 51); }

.navbar-default .btn-link { color: rgb(119, 119, 119); }

.navbar-default .btn-link:focus, .navbar-default .btn-link:hover { color: r=
gb(51, 51, 51); }

.navbar-default .btn-link[disabled]:focus, .navbar-default .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-default .btn-link:focus, fieldset[dis=
abled] .navbar-default .btn-link:hover { color: rgb(204, 204, 204); }

.navbar-inverse { background-color: rgb(34, 34, 34); border-color: rgb(8, 8=
, 8); }

.navbar-inverse .navbar-brand { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-brand:focus, .navbar-inverse .navbar-brand:hover { =
color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-text { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-nav > li > a:focus, .navbar-inverse .navbar-nav > l=
i > a:hover { color: rgb(255, 255, 255); background-color: transparent; }

.navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .a=
ctive > a:focus, .navbar-inverse .navbar-nav > .active > a:hover { color: r=
gb(255, 255, 255); background-color: rgb(8, 8, 8); }

.navbar-inverse .navbar-nav > .disabled > a, .navbar-inverse .navbar-nav > =
.disabled > a:focus, .navbar-inverse .navbar-nav > .disabled > a:hover { co=
lor: rgb(68, 68, 68); background-color: transparent; }

.navbar-inverse .navbar-toggle { border-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle:focus, .navbar-inverse .navbar-toggle:hover =
{ background-color: rgb(51, 51, 51); }

.navbar-inverse .navbar-toggle .icon-bar { background-color: rgb(255, 255, =
255); }

.navbar-inverse .navbar-collapse, .navbar-inverse .navbar-form { border-col=
or: rgb(16, 16, 16); }

.navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .ope=
n > a:focus, .navbar-inverse .navbar-nav > .open > a:hover { color: rgb(255=
, 255, 255); background-color: rgb(8, 8, 8); }

@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header { bor=
der-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider { background-co=
lor: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a { color: rgb(15=
7, 157, 157); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus, .navbar-=
inverse .navbar-nav .open .dropdown-menu > li > a:hover { color: rgb(255, 2=
55, 255); background-color: transparent; }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a, .navbar-i=
nverse .navbar-nav .open .dropdown-menu > .active > a:focus, .navbar-invers=
e .navbar-nav .open .dropdown-menu > .active > a:hover { color: rgb(255, 25=
5, 255); background-color: rgb(8, 8, 8); }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a, .navbar=
-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus, .navbar-in=
verse .navbar-nav .open .dropdown-menu > .disabled > a:hover { color: rgb(6=
8, 68, 68); background-color: transparent; }
}

.navbar-inverse .navbar-link { color: rgb(157, 157, 157); }

.navbar-inverse .navbar-link:hover { color: rgb(255, 255, 255); }

.navbar-inverse .btn-link { color: rgb(157, 157, 157); }

.navbar-inverse .btn-link:focus, .navbar-inverse .btn-link:hover { color: r=
gb(255, 255, 255); }

.navbar-inverse .btn-link[disabled]:focus, .navbar-inverse .btn-link[disabl=
ed]:hover, fieldset[disabled] .navbar-inverse .btn-link:focus, fieldset[dis=
abled] .navbar-inverse .btn-link:hover { color: rgb(68, 68, 68); }

.breadcrumb { padding: 8px 15px; margin-bottom: 20px; list-style: none; bac=
kground-color: rgb(245, 245, 245); border-radius: 4px; }

.breadcrumb > li { display: inline-block; }

.breadcrumb > li + li::before { padding: 0px 5px; color: rgb(204, 204, 204)=
; content: "/=C2=A0"; }

.breadcrumb > .active { color: rgb(119, 119, 119); }

.pagination { display: inline-block; padding-left: 0px; margin: 20px 0px; b=
order-radius: 4px; }

.pagination > li { display: inline; }

.pagination > li > a, .pagination > li > span { position: relative; float: =
left; padding: 6px 12px; margin-left: -1px; line-height: 1.42857; color: rg=
b(51, 122, 183); text-decoration: none; background-color: rgb(255, 255, 255=
); border: 1px solid rgb(221, 221, 221); }

.pagination > li:first-child > a, .pagination > li:first-child > span { mar=
gin-left: 0px; border-top-left-radius: 4px; border-bottom-left-radius: 4px;=
 }

.pagination > li:last-child > a, .pagination > li:last-child > span { borde=
r-top-right-radius: 4px; border-bottom-right-radius: 4px; }

.pagination > li > a:focus, .pagination > li > a:hover, .pagination > li > =
span:focus, .pagination > li > span:hover { z-index: 2; color: rgb(35, 82, =
124); background-color: rgb(238, 238, 238); border-color: rgb(221, 221, 221=
); }

.pagination > .active > a, .pagination > .active > a:focus, .pagination > .=
active > a:hover, .pagination > .active > span, .pagination > .active > spa=
n:focus, .pagination > .active > span:hover { z-index: 3; color: rgb(255, 2=
55, 255); cursor: default; background-color: rgb(51, 122, 183); border-colo=
r: rgb(51, 122, 183); }

.pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination=
 > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disa=
bled > span:focus, .pagination > .disabled > span:hover { color: rgb(119, 1=
19, 119); cursor: not-allowed; background-color: rgb(255, 255, 255); border=
-color: rgb(221, 221, 221); }

.pagination-lg > li > a, .pagination-lg > li > span { padding: 10px 16px; f=
ont-size: 18px; line-height: 1.33333; }

.pagination-lg > li:first-child > a, .pagination-lg > li:first-child > span=
 { border-top-left-radius: 6px; border-bottom-left-radius: 6px; }

.pagination-lg > li:last-child > a, .pagination-lg > li:last-child > span {=
 border-top-right-radius: 6px; border-bottom-right-radius: 6px; }

.pagination-sm > li > a, .pagination-sm > li > span { padding: 5px 10px; fo=
nt-size: 12px; line-height: 1.5; }

.pagination-sm > li:first-child > a, .pagination-sm > li:first-child > span=
 { border-top-left-radius: 3px; border-bottom-left-radius: 3px; }

.pagination-sm > li:last-child > a, .pagination-sm > li:last-child > span {=
 border-top-right-radius: 3px; border-bottom-right-radius: 3px; }

.pager { padding-left: 0px; margin: 20px 0px; text-align: center; list-styl=
e: none; }

.pager li { display: inline; }

.pager li > a, .pager li > span { display: inline-block; padding: 5px 14px;=
 background-color: rgb(255, 255, 255); border: 1px solid rgb(221, 221, 221)=
; border-radius: 15px; }

.pager li > a:focus, .pager li > a:hover { text-decoration: none; backgroun=
d-color: rgb(238, 238, 238); }

.pager .next > a, .pager .next > span { float: right; }

.pager .previous > a, .pager .previous > span { float: left; }

.pager .disabled > a, .pager .disabled > a:focus, .pager .disabled > a:hove=
r, .pager .disabled > span { color: rgb(119, 119, 119); cursor: not-allowed=
; background-color: rgb(255, 255, 255); }

.label { display: inline; padding: 0.2em 0.6em 0.3em; font-size: 75%; font-=
weight: 700; line-height: 1; color: rgb(255, 255, 255); text-align: center;=
 white-space: nowrap; vertical-align: baseline; border-radius: 0.25em; }

a.label:focus, a.label:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.label:empty { display: none; }

.btn .label { position: relative; top: -1px; }

.label-default { background-color: rgb(119, 119, 119); }

.label-default[href]:focus, .label-default[href]:hover { background-color: =
rgb(94, 94, 94); }

.label-primary { background-color: rgb(51, 122, 183); }

.label-primary[href]:focus, .label-primary[href]:hover { background-color: =
rgb(40, 96, 144); }

.label-success { background-color: rgb(92, 184, 92); }

.label-success[href]:focus, .label-success[href]:hover { background-color: =
rgb(68, 157, 68); }

.label-info { background-color: rgb(91, 192, 222); }

.label-info[href]:focus, .label-info[href]:hover { background-color: rgb(49=
, 176, 213); }

.label-warning { background-color: rgb(240, 173, 78); }

.label-warning[href]:focus, .label-warning[href]:hover { background-color: =
rgb(236, 151, 31); }

.label-danger { background-color: rgb(217, 83, 79); }

.label-danger[href]:focus, .label-danger[href]:hover { background-color: rg=
b(201, 48, 44); }

.badge { display: inline-block; min-width: 10px; padding: 3px 7px; font-siz=
e: 12px; font-weight: 700; line-height: 1; color: rgb(255, 255, 255); text-=
align: center; white-space: nowrap; vertical-align: middle; background-colo=
r: rgb(119, 119, 119); border-radius: 10px; }

.badge:empty { display: none; }

.btn .badge { position: relative; top: -1px; }

.btn-group-xs > .btn .badge, .btn-xs .badge { top: 0px; padding: 1px 5px; }

a.badge:focus, a.badge:hover { color: rgb(255, 255, 255); text-decoration: =
none; cursor: pointer; }

.list-group-item.active > .badge, .nav-pills > .active > a > .badge { color=
: rgb(51, 122, 183); background-color: rgb(255, 255, 255); }

.list-group-item > .badge { float: right; }

.list-group-item > .badge + .badge { margin-right: 5px; }

.nav-pills > li > a > .badge { margin-left: 3px; }

.jumbotron { padding-top: 30px; padding-bottom: 30px; margin-bottom: 30px; =
color: inherit; background-color: rgb(238, 238, 238); }

.jumbotron .h1, .jumbotron h1 { color: inherit; }

.jumbotron p { margin-bottom: 15px; font-size: 21px; font-weight: 200; }

.jumbotron > hr { border-top-color: rgb(213, 213, 213); }

.container .jumbotron, .container-fluid .jumbotron { padding-right: 15px; p=
adding-left: 15px; border-radius: 6px; }

.jumbotron .container { max-width: 100%; }

@media screen and (min-width: 768px) {
  .jumbotron { padding-top: 48px; padding-bottom: 48px; }
  .container .jumbotron, .container-fluid .jumbotron { padding-right: 60px;=
 padding-left: 60px; }
  .jumbotron .h1, .jumbotron h1 { font-size: 63px; }
}

.thumbnail { display: block; padding: 4px; margin-bottom: 20px; line-height=
: 1.42857; background-color: rgb(255, 255, 255); border: 1px solid rgb(221,=
 221, 221); border-radius: 4px; transition: border 0.2s ease-in-out; }

.thumbnail a > img, .thumbnail > img { margin-right: auto; margin-left: aut=
o; }

a.thumbnail.active, a.thumbnail:focus, a.thumbnail:hover { border-color: rg=
b(51, 122, 183); }

.thumbnail .caption { padding: 9px; color: rgb(51, 51, 51); }

.alert { padding: 15px; margin-bottom: 20px; border: 1px solid transparent;=
 border-radius: 4px; }

.alert h4 { margin-top: 0px; color: inherit; }

.alert .alert-link { font-weight: 700; }

.alert > p, .alert > ul { margin-bottom: 0px; }

.alert > p + p { margin-top: 5px; }

.alert-dismissable, .alert-dismissible { padding-right: 35px; }

.alert-dismissable .close, .alert-dismissible .close { position: relative; =
top: -2px; right: -21px; color: inherit; }

.alert-success { color: rgb(60, 118, 61); background-color: rgb(223, 240, 2=
16); border-color: rgb(214, 233, 198); }

.alert-success hr { border-top-color: rgb(201, 226, 179); }

.alert-success .alert-link { color: rgb(43, 84, 44); }

.alert-info { color: rgb(49, 112, 143); background-color: rgb(217, 237, 247=
); border-color: rgb(188, 232, 241); }

.alert-info hr { border-top-color: rgb(166, 225, 236); }

.alert-info .alert-link { color: rgb(36, 82, 105); }

.alert-warning { color: rgb(138, 109, 59); background-color: rgb(252, 248, =
227); border-color: rgb(250, 235, 204); }

.alert-warning hr { border-top-color: rgb(247, 225, 181); }

.alert-warning .alert-link { color: rgb(102, 81, 44); }

.alert-danger { color: rgb(169, 68, 66); background-color: rgb(242, 222, 22=
2); border-color: rgb(235, 204, 209); }

.alert-danger hr { border-top-color: rgb(228, 185, 192); }

.alert-danger .alert-link { color: rgb(132, 53, 52); }

@-webkit-keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

@keyframes progress-bar-stripes {=20
  0% { background-position: 40px 0px; }
  100% { background-position: 0px 0px; }
}

.progress { height: 20px; margin-bottom: 20px; overflow: hidden; background=
-color: rgb(245, 245, 245); border-radius: 4px; box-shadow: rgba(0, 0, 0, 0=
.1) 0px 1px 2px inset; }

.progress-bar { float: left; width: 0px; height: 100%; font-size: 12px; lin=
e-height: 20px; color: rgb(255, 255, 255); text-align: center; background-c=
olor: rgb(51, 122, 183); box-shadow: rgba(0, 0, 0, 0.15) 0px -1px 0px inset=
; transition: width 0.6s ease; }

.progress-bar-striped, .progress-striped .progress-bar { background-image: =
linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, tran=
sparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, =
transparent 75%, transparent); background-size: 40px 40px; }

.progress-bar.active, .progress.active .progress-bar { animation: progress-=
bar-stripes 2s linear infinite; }

.progress-bar-success { background-color: rgb(92, 184, 92); }

.progress-striped .progress-bar-success { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-info { background-color: rgb(91, 192, 222); }

.progress-striped .progress-bar-info { background-image: linear-gradient(45=
deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(=
255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, t=
ransparent); }

.progress-bar-warning { background-color: rgb(240, 173, 78); }

.progress-striped .progress-bar-warning { background-image: linear-gradient=
(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rg=
ba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%=
, transparent); }

.progress-bar-danger { background-color: rgb(217, 83, 79); }

.progress-striped .progress-bar-danger { background-image: linear-gradient(=
45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgb=
a(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%,=
 transparent); }

.media { margin-top: 15px; }

.media:first-child { margin-top: 0px; }

.media, .media-body { overflow: hidden; zoom: 1; }

.media-body { width: 10000px; }

.media-object { display: block; }

.media-object.img-thumbnail { max-width: none; }

.media-right, .media > .pull-right { padding-left: 10px; }

.media-left, .media > .pull-left { padding-right: 10px; }

.media-body, .media-left, .media-right { display: table-cell; vertical-alig=
n: top; }

.media-middle { vertical-align: middle; }

.media-bottom { vertical-align: bottom; }

.media-heading { margin-top: 0px; margin-bottom: 5px; }

.media-list { padding-left: 0px; list-style: none; }

.list-group { padding-left: 0px; margin-bottom: 20px; }

.list-group-item { position: relative; display: block; padding: 10px 15px; =
margin-bottom: -1px; background-color: rgb(255, 255, 255); border: 1px soli=
d rgb(221, 221, 221); }

.list-group-item:first-child { border-top-left-radius: 4px; border-top-righ=
t-radius: 4px; }

.list-group-item:last-child { margin-bottom: 0px; border-bottom-right-radiu=
s: 4px; border-bottom-left-radius: 4px; }

a.list-group-item, button.list-group-item { color: rgb(85, 85, 85); }

a.list-group-item .list-group-item-heading, button.list-group-item .list-gr=
oup-item-heading { color: rgb(51, 51, 51); }

a.list-group-item:focus, a.list-group-item:hover, button.list-group-item:fo=
cus, button.list-group-item:hover { color: rgb(85, 85, 85); text-decoration=
: none; background-color: rgb(245, 245, 245); }

button.list-group-item { width: 100%; text-align: left; }

.list-group-item.disabled, .list-group-item.disabled:focus, .list-group-ite=
m.disabled:hover { color: rgb(119, 119, 119); cursor: not-allowed; backgrou=
nd-color: rgb(238, 238, 238); }

.list-group-item.disabled .list-group-item-heading, .list-group-item.disabl=
ed:focus .list-group-item-heading, .list-group-item.disabled:hover .list-gr=
oup-item-heading { color: inherit; }

.list-group-item.disabled .list-group-item-text, .list-group-item.disabled:=
focus .list-group-item-text, .list-group-item.disabled:hover .list-group-it=
em-text { color: rgb(119, 119, 119); }

.list-group-item.active, .list-group-item.active:focus, .list-group-item.ac=
tive:hover { z-index: 2; color: rgb(255, 255, 255); background-color: rgb(5=
1, 122, 183); border-color: rgb(51, 122, 183); }

.list-group-item.active .list-group-item-heading, .list-group-item.active .=
list-group-item-heading > .small, .list-group-item.active .list-group-item-=
heading > small, .list-group-item.active:focus .list-group-item-heading, .l=
ist-group-item.active:focus .list-group-item-heading > .small, .list-group-=
item.active:focus .list-group-item-heading > small, .list-group-item.active=
:hover .list-group-item-heading, .list-group-item.active:hover .list-group-=
item-heading > .small, .list-group-item.active:hover .list-group-item-headi=
ng > small { color: inherit; }

.list-group-item.active .list-group-item-text, .list-group-item.active:focu=
s .list-group-item-text, .list-group-item.active:hover .list-group-item-tex=
t { color: rgb(199, 221, 239); }

.list-group-item-success { color: rgb(60, 118, 61); background-color: rgb(2=
23, 240, 216); }

a.list-group-item-success, button.list-group-item-success { color: rgb(60, =
118, 61); }

a.list-group-item-success .list-group-item-heading, button.list-group-item-=
success .list-group-item-heading { color: inherit; }

a.list-group-item-success:focus, a.list-group-item-success:hover, button.li=
st-group-item-success:focus, button.list-group-item-success:hover { color: =
rgb(60, 118, 61); background-color: rgb(208, 233, 198); }

a.list-group-item-success.active, a.list-group-item-success.active:focus, a=
.list-group-item-success.active:hover, button.list-group-item-success.activ=
e, button.list-group-item-success.active:focus, button.list-group-item-succ=
ess.active:hover { color: rgb(255, 255, 255); background-color: rgb(60, 118=
, 61); border-color: rgb(60, 118, 61); }

.list-group-item-info { color: rgb(49, 112, 143); background-color: rgb(217=
, 237, 247); }

a.list-group-item-info, button.list-group-item-info { color: rgb(49, 112, 1=
43); }

a.list-group-item-info .list-group-item-heading, button.list-group-item-inf=
o .list-group-item-heading { color: inherit; }

a.list-group-item-info:focus, a.list-group-item-info:hover, button.list-gro=
up-item-info:focus, button.list-group-item-info:hover { color: rgb(49, 112,=
 143); background-color: rgb(196, 227, 243); }

a.list-group-item-info.active, a.list-group-item-info.active:focus, a.list-=
group-item-info.active:hover, button.list-group-item-info.active, button.li=
st-group-item-info.active:focus, button.list-group-item-info.active:hover {=
 color: rgb(255, 255, 255); background-color: rgb(49, 112, 143); border-col=
or: rgb(49, 112, 143); }

.list-group-item-warning { color: rgb(138, 109, 59); background-color: rgb(=
252, 248, 227); }

a.list-group-item-warning, button.list-group-item-warning { color: rgb(138,=
 109, 59); }

a.list-group-item-warning .list-group-item-heading, button.list-group-item-=
warning .list-group-item-heading { color: inherit; }

a.list-group-item-warning:focus, a.list-group-item-warning:hover, button.li=
st-group-item-warning:focus, button.list-group-item-warning:hover { color: =
rgb(138, 109, 59); background-color: rgb(250, 242, 204); }

a.list-group-item-warning.active, a.list-group-item-warning.active:focus, a=
.list-group-item-warning.active:hover, button.list-group-item-warning.activ=
e, button.list-group-item-warning.active:focus, button.list-group-item-warn=
ing.active:hover { color: rgb(255, 255, 255); background-color: rgb(138, 10=
9, 59); border-color: rgb(138, 109, 59); }

.list-group-item-danger { color: rgb(169, 68, 66); background-color: rgb(24=
2, 222, 222); }

a.list-group-item-danger, button.list-group-item-danger { color: rgb(169, 6=
8, 66); }

a.list-group-item-danger .list-group-item-heading, button.list-group-item-d=
anger .list-group-item-heading { color: inherit; }

a.list-group-item-danger:focus, a.list-group-item-danger:hover, button.list=
-group-item-danger:focus, button.list-group-item-danger:hover { color: rgb(=
169, 68, 66); background-color: rgb(235, 204, 204); }

a.list-group-item-danger.active, a.list-group-item-danger.active:focus, a.l=
ist-group-item-danger.active:hover, button.list-group-item-danger.active, b=
utton.list-group-item-danger.active:focus, button.list-group-item-danger.ac=
tive:hover { color: rgb(255, 255, 255); background-color: rgb(169, 68, 66);=
 border-color: rgb(169, 68, 66); }

.list-group-item-heading { margin-top: 0px; margin-bottom: 5px; }

.list-group-item-text { margin-bottom: 0px; line-height: 1.3; }

.panel { margin-bottom: 20px; background-color: rgb(255, 255, 255); border:=
 1px solid transparent; border-radius: 4px; box-shadow: rgba(0, 0, 0, 0.05)=
 0px 1px 1px; }

.panel-body { padding: 15px; }

.panel-heading { padding: 10px 15px; border-bottom: 1px solid transparent; =
border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel-heading > .dropdown .dropdown-toggle { color: inherit; }

.panel-title { margin-top: 0px; margin-bottom: 0px; font-size: 16px; color:=
 inherit; }

.panel-title > .small, .panel-title > .small > a, .panel-title > a, .panel-=
title > small, .panel-title > small > a { color: inherit; }

.panel-footer { padding: 10px 15px; background-color: rgb(245, 245, 245); b=
order-top: 1px solid rgb(221, 221, 221); border-bottom-right-radius: 3px; b=
order-bottom-left-radius: 3px; }

.panel > .list-group, .panel > .panel-collapse > .list-group { margin-botto=
m: 0px; }

.panel > .list-group .list-group-item, .panel > .panel-collapse > .list-gro=
up .list-group-item { border-width: 1px 0px; border-radius: 0px; }

.panel > .list-group:first-child .list-group-item:first-child, .panel > .pa=
nel-collapse > .list-group:first-child .list-group-item:first-child { borde=
r-top: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; }

.panel > .list-group:last-child .list-group-item:last-child, .panel > .pane=
l-collapse > .list-group:last-child .list-group-item:last-child { border-bo=
ttom: 0px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;=
 }

.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:fi=
rst-child { border-top-left-radius: 0px; border-top-right-radius: 0px; }

.panel-heading + .list-group .list-group-item:first-child { border-top-widt=
h: 0px; }

.list-group + .panel-footer { border-top-width: 0px; }

.panel > .panel-collapse > .table, .panel > .table, .panel > .table-respons=
ive > .table { margin-bottom: 0px; }

.panel > .panel-collapse > .table caption, .panel > .table caption, .panel =
> .table-responsive > .table caption { padding-right: 15px; padding-left: 1=
5px; }

.panel > .table-responsive:first-child > .table:first-child, .panel > .tabl=
e:first-child { border-top-left-radius: 3px; border-top-right-radius: 3px; =
}

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child, .panel > .table-responsive:first-child > .table:firs=
t-child > thead:first-child > tr:first-child, .panel > .table:first-child >=
 tbody:first-child > tr:first-child, .panel > .table:first-child > thead:fi=
rst-child > tr:first-child { border-top-left-radius: 3px; border-top-right-=
radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:first-child, .panel > .table-responsive:first-chil=
d > .table:first-child > tbody:first-child > tr:first-child th:first-child,=
 .panel > .table-responsive:first-child > .table:first-child > thead:first-=
child > tr:first-child td:first-child, .panel > .table-responsive:first-chi=
ld > .table:first-child > thead:first-child > tr:first-child th:first-child=
, .panel > .table:first-child > tbody:first-child > tr:first-child td:first=
-child, .panel > .table:first-child > tbody:first-child > tr:first-child th=
:first-child, .panel > .table:first-child > thead:first-child > tr:first-ch=
ild td:first-child, .panel > .table:first-child > thead:first-child > tr:fi=
rst-child th:first-child { border-top-left-radius: 3px; }

.panel > .table-responsive:first-child > .table:first-child > tbody:first-c=
hild > tr:first-child td:last-child, .panel > .table-responsive:first-child=
 > .table:first-child > tbody:first-child > tr:first-child th:last-child, .=
panel > .table-responsive:first-child > .table:first-child > thead:first-ch=
ild > tr:first-child td:last-child, .panel > .table-responsive:first-child =
> .table:first-child > thead:first-child > tr:first-child th:last-child, .p=
anel > .table:first-child > tbody:first-child > tr:first-child td:last-chil=
d, .panel > .table:first-child > tbody:first-child > tr:first-child th:last=
-child, .panel > .table:first-child > thead:first-child > tr:first-child td=
:last-child, .panel > .table:first-child > thead:first-child > tr:first-chi=
ld th:last-child { border-top-right-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child, .panel > .table:=
last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: 3p=
x; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child, .panel > .table-responsive:last-child > .table:last-chil=
d > tfoot:last-child > tr:last-child, .panel > .table:last-child > tbody:la=
st-child > tr:last-child, .panel > .table:last-child > tfoot:last-child > t=
r:last-child { border-bottom-right-radius: 3px; border-bottom-left-radius: =
3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:first-child, .panel > .table-responsive:last-child > .=
table:last-child > tbody:last-child > tr:last-child th:first-child, .panel =
> .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:=
last-child td:first-child, .panel > .table-responsive:last-child > .table:l=
ast-child > tfoot:last-child > tr:last-child th:first-child, .panel > .tabl=
e:last-child > tbody:last-child > tr:last-child td:first-child, .panel > .t=
able:last-child > tbody:last-child > tr:last-child th:first-child, .panel >=
 .table:last-child > tfoot:last-child > tr:last-child td:first-child, .pane=
l > .table:last-child > tfoot:last-child > tr:last-child th:first-child { b=
order-bottom-left-radius: 3px; }

.panel > .table-responsive:last-child > .table:last-child > tbody:last-chil=
d > tr:last-child td:last-child, .panel > .table-responsive:last-child > .t=
able:last-child > tbody:last-child > tr:last-child th:last-child, .panel > =
.table-responsive:last-child > .table:last-child > tfoot:last-child > tr:la=
st-child td:last-child, .panel > .table-responsive:last-child > .table:last=
-child > tfoot:last-child > tr:last-child th:last-child, .panel > .table:la=
st-child > tbody:last-child > tr:last-child td:last-child, .panel > .table:=
last-child > tbody:last-child > tr:last-child th:last-child, .panel > .tabl=
e:last-child > tfoot:last-child > tr:last-child td:last-child, .panel > .ta=
ble:last-child > tfoot:last-child > tr:last-child th:last-child { border-bo=
ttom-right-radius: 3px; }

.panel > .panel-body + .table, .panel > .panel-body + .table-responsive, .p=
anel > .table + .panel-body, .panel > .table-responsive + .panel-body { bor=
der-top: 1px solid rgb(221, 221, 221); }

.panel > .table > tbody:first-child > tr:first-child td, .panel > .table > =
tbody:first-child > tr:first-child th { border-top: 0px; }

.panel > .table-bordered, .panel > .table-responsive > .table-bordered { bo=
rder: 0px; }

.panel > .table-bordered > tbody > tr > td:first-child, .panel > .table-bor=
dered > tbody > tr > th:first-child, .panel > .table-bordered > tfoot > tr =
> td:first-child, .panel > .table-bordered > tfoot > tr > th:first-child, .=
panel > .table-bordered > thead > tr > td:first-child, .panel > .table-bord=
ered > thead > tr > th:first-child, .panel > .table-responsive > .table-bor=
dered > tbody > tr > td:first-child, .panel > .table-responsive > .table-bo=
rdered > tbody > tr > th:first-child, .panel > .table-responsive > .table-b=
ordered > tfoot > tr > td:first-child, .panel > .table-responsive > .table-=
bordered > tfoot > tr > th:first-child, .panel > .table-responsive > .table=
-bordered > thead > tr > td:first-child, .panel > .table-responsive > .tabl=
e-bordered > thead > tr > th:first-child { border-left: 0px; }

.panel > .table-bordered > tbody > tr > td:last-child, .panel > .table-bord=
ered > tbody > tr > th:last-child, .panel > .table-bordered > tfoot > tr > =
td:last-child, .panel > .table-bordered > tfoot > tr > th:last-child, .pane=
l > .table-bordered > thead > tr > td:last-child, .panel > .table-bordered =
> thead > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tbody > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> tfoot > tr > th:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > td:last-child, .panel > .table-responsive > .table-bordered =
> thead > tr > th:last-child { border-right: 0px; }

.panel > .table-bordered > tbody > tr:first-child > td, .panel > .table-bor=
dered > tbody > tr:first-child > th, .panel > .table-bordered > thead > tr:=
first-child > td, .panel > .table-bordered > thead > tr:first-child > th, .=
panel > .table-responsive > .table-bordered > tbody > tr:first-child > td, =
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th,=
 .panel > .table-responsive > .table-bordered > thead > tr:first-child > td=
, .panel > .table-responsive > .table-bordered > thead > tr:first-child > t=
h { border-bottom: 0px; }

.panel > .table-bordered > tbody > tr:last-child > td, .panel > .table-bord=
ered > tbody > tr:last-child > th, .panel > .table-bordered > tfoot > tr:la=
st-child > td, .panel > .table-bordered > tfoot > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tbody > tr:last-child > th, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > td, .pane=
l > .table-responsive > .table-bordered > tfoot > tr:last-child > th { bord=
er-bottom: 0px; }

.panel > .table-responsive { margin-bottom: 0px; border: 0px; }

.panel-group { margin-bottom: 20px; }

.panel-group .panel { margin-bottom: 0px; border-radius: 4px; }

.panel-group .panel + .panel { margin-top: 5px; }

.panel-group .panel-heading { border-bottom: 0px; }

.panel-group .panel-heading + .panel-collapse > .list-group, .panel-group .=
panel-heading + .panel-collapse > .panel-body { border-top: 1px solid rgb(2=
21, 221, 221); }

.panel-group .panel-footer { border-top: 0px; }

.panel-group .panel-footer + .panel-collapse .panel-body { border-bottom: 1=
px solid rgb(221, 221, 221); }

.panel-default { border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading { color: rgb(51, 51, 51); background-color:=
 rgb(245, 245, 245); border-color: rgb(221, 221, 221); }

.panel-default > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(221, 221, 221); }

.panel-default > .panel-heading .badge { color: rgb(245, 245, 245); backgro=
und-color: rgb(51, 51, 51); }

.panel-default > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(221, 221, 221); }

.panel-primary { border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading { color: rgb(255, 255, 255); background-col=
or: rgb(51, 122, 183); border-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(51, 122, 183); }

.panel-primary > .panel-heading .badge { color: rgb(51, 122, 183); backgrou=
nd-color: rgb(255, 255, 255); }

.panel-primary > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(51, 122, 183); }

.panel-success { border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading { color: rgb(60, 118, 61); background-color=
: rgb(223, 240, 216); border-color: rgb(214, 233, 198); }

.panel-success > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(214, 233, 198); }

.panel-success > .panel-heading .badge { color: rgb(223, 240, 216); backgro=
und-color: rgb(60, 118, 61); }

.panel-success > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(214, 233, 198); }

.panel-info { border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading { color: rgb(49, 112, 143); background-color: =
rgb(217, 237, 247); border-color: rgb(188, 232, 241); }

.panel-info > .panel-heading + .panel-collapse > .panel-body { border-top-c=
olor: rgb(188, 232, 241); }

.panel-info > .panel-heading .badge { color: rgb(217, 237, 247); background=
-color: rgb(49, 112, 143); }

.panel-info > .panel-footer + .panel-collapse > .panel-body { border-bottom=
-color: rgb(188, 232, 241); }

.panel-warning { border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading { color: rgb(138, 109, 59); background-colo=
r: rgb(252, 248, 227); border-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading + .panel-collapse > .panel-body { border-to=
p-color: rgb(250, 235, 204); }

.panel-warning > .panel-heading .badge { color: rgb(252, 248, 227); backgro=
und-color: rgb(138, 109, 59); }

.panel-warning > .panel-footer + .panel-collapse > .panel-body { border-bot=
tom-color: rgb(250, 235, 204); }

.panel-danger { border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading { color: rgb(169, 68, 66); background-color:=
 rgb(242, 222, 222); border-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading + .panel-collapse > .panel-body { border-top=
-color: rgb(235, 204, 209); }

.panel-danger > .panel-heading .badge { color: rgb(242, 222, 222); backgrou=
nd-color: rgb(169, 68, 66); }

.panel-danger > .panel-footer + .panel-collapse > .panel-body { border-bott=
om-color: rgb(235, 204, 209); }

.embed-responsive { position: relative; display: block; height: 0px; paddin=
g: 0px; overflow: hidden; }

.embed-responsive .embed-responsive-item, .embed-responsive embed, .embed-r=
esponsive iframe, .embed-responsive object, .embed-responsive video { posit=
ion: absolute; top: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;=
 border: 0px; }

.embed-responsive-16by9 { padding-bottom: 56.25%; }

.embed-responsive-4by3 { padding-bottom: 75%; }

.well { min-height: 20px; padding: 19px; margin-bottom: 20px; background-co=
lor: rgb(245, 245, 245); border: 1px solid rgb(227, 227, 227); border-radiu=
s: 4px; box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 1px inset; }

.well blockquote { border-color: rgba(0, 0, 0, 0.15); }

.well-lg { padding: 24px; border-radius: 6px; }

.well-sm { padding: 9px; border-radius: 3px; }

.close { float: right; font-size: 21px; font-weight: 700; line-height: 1; c=
olor: rgb(0, 0, 0); text-shadow: rgb(255, 255, 255) 0px 1px 0px; opacity: 0=
.2; }

.close:focus, .close:hover { color: rgb(0, 0, 0); text-decoration: none; cu=
rsor: pointer; opacity: 0.5; }

button.close { -webkit-appearance: none; padding: 0px; cursor: pointer; bac=
kground: 0px 0px; border: 0px; }

.modal-open { overflow: hidden; }

.modal { position: fixed; top: 0px; right: 0px; bottom: 0px; left: 0px; z-i=
ndex: 1050; display: none; overflow: hidden; outline: 0px; }

.modal.fade .modal-dialog { transition: transform 0.3s ease-out; transform:=
 translate(0px, -25%); }

.modal.in .modal-dialog { transform: translate(0px, 0px); }

.modal-open .modal { overflow-x: hidden; overflow-y: auto; }

.modal-dialog { position: relative; width: auto; margin: 10px; }

.modal-content { position: relative; background-color: rgb(255, 255, 255); =
background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.2); border-=
radius: 6px; outline: 0px; box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 9px; }

.modal-backdrop { position: fixed; top: 0px; right: 0px; bottom: 0px; left:=
 0px; z-index: 1040; background-color: rgb(0, 0, 0); }

.modal-backdrop.fade { opacity: 0; }

.modal-backdrop.in { opacity: 0.5; }

.modal-header { padding: 15px; border-bottom: 1px solid rgb(229, 229, 229);=
 }

.modal-header .close { margin-top: -2px; }

.modal-title { margin: 0px; line-height: 1.42857; }

.modal-body { position: relative; padding: 15px; }

.modal-footer { padding: 15px; text-align: right; border-top: 1px solid rgb=
(229, 229, 229); }

.modal-footer .btn + .btn { margin-bottom: 0px; margin-left: 5px; }

.modal-footer .btn-group .btn + .btn { margin-left: -1px; }

.modal-footer .btn-block + .btn-block { margin-left: 0px; }

.modal-scrollbar-measure { position: absolute; top: -9999px; width: 50px; h=
eight: 50px; overflow: scroll; }

@media (min-width: 768px) {
  .modal-dialog { width: 600px; margin: 30px auto; }
  .modal-content { box-shadow: rgba(0, 0, 0, 0.5) 0px 5px 15px; }
  .modal-sm { width: 300px; }
}

@media (min-width: 992px) {
  .modal-lg { width: 900px; }
}

.tooltip { position: absolute; z-index: 1070; display: block; font-family: =
"Helvetica Neue", Helvetica, Arial, sans-serif; font-size: 12px; font-style=
: normal; font-weight: 400; line-height: 1.42857; text-align: start; text-d=
ecoration: none; text-shadow: none; text-transform: none; letter-spacing: n=
ormal; word-break: normal; word-spacing: normal; word-wrap: normal; white-s=
pace: normal; opacity: 0; line-break: auto; }

.tooltip.in { opacity: 0.9; }

.tooltip.top { padding: 5px 0px; margin-top: -3px; }

.tooltip.right { padding: 0px 5px; margin-left: 3px; }

.tooltip.bottom { padding: 5px 0px; margin-top: 3px; }

.tooltip.left { padding: 0px 5px; margin-left: -3px; }

.tooltip-inner { max-width: 200px; padding: 3px 8px; color: rgb(255, 255, 2=
55); text-align: center; background-color: rgb(0, 0, 0); border-radius: 4px=
; }

.tooltip-arrow { position: absolute; width: 0px; height: 0px; border-color:=
 transparent; border-style: solid; }

.tooltip.top .tooltip-arrow { bottom: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-left .tooltip-arrow { right: 5px; bottom: 0px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.top-right .tooltip-arrow { bottom: 0px; left: 5px; margin-bottom: =
-5px; border-width: 5px 5px 0px; border-top-color: rgb(0, 0, 0); }

.tooltip.right .tooltip-arrow { top: 50%; left: 0px; margin-top: -5px; bord=
er-width: 5px 5px 5px 0px; border-right-color: rgb(0, 0, 0); }

.tooltip.left .tooltip-arrow { top: 50%; right: 0px; margin-top: -5px; bord=
er-width: 5px 0px 5px 5px; border-left-color: rgb(0, 0, 0); }

.tooltip.bottom .tooltip-arrow { top: 0px; left: 50%; margin-left: -5px; bo=
rder-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-left .tooltip-arrow { top: 0px; right: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.tooltip.bottom-right .tooltip-arrow { top: 0px; left: 5px; margin-top: -5p=
x; border-width: 0px 5px 5px; border-bottom-color: rgb(0, 0, 0); }

.popover { position: absolute; top: 0px; left: 0px; z-index: 1060; display:=
 none; max-width: 276px; padding: 1px; font-family: "Helvetica Neue", Helve=
tica, Arial, sans-serif; font-size: 14px; font-style: normal; font-weight: =
400; line-height: 1.42857; text-align: start; text-decoration: none; text-s=
hadow: none; text-transform: none; letter-spacing: normal; word-break: norm=
al; word-spacing: normal; word-wrap: normal; white-space: normal; backgroun=
d-color: rgb(255, 255, 255); background-clip: padding-box; border: 1px soli=
d rgba(0, 0, 0, 0.2); border-radius: 6px; box-shadow: rgba(0, 0, 0, 0.2) 0p=
x 5px 10px; line-break: auto; }

.popover.top { margin-top: -10px; }

.popover.right { margin-left: 10px; }

.popover.bottom { margin-top: 10px; }

.popover.left { margin-left: -10px; }

.popover-title { padding: 8px 14px; margin: 0px; font-size: 14px; backgroun=
d-color: rgb(247, 247, 247); border-bottom: 1px solid rgb(235, 235, 235); b=
order-radius: 5px 5px 0px 0px; }

.popover-content { padding: 9px 14px; }

.popover > .arrow, .popover > .arrow::after { position: absolute; display: =
block; width: 0px; height: 0px; border-color: transparent; border-style: so=
lid; }

.popover > .arrow { border-width: 11px; }

.popover > .arrow::after { content: ""; border-width: 10px; }

.popover.top > .arrow { bottom: -11px; left: 50%; margin-left: -11px; borde=
r-top-color: rgba(0, 0, 0, 0.25); border-bottom-width: 0px; }

.popover.top > .arrow::after { bottom: 1px; margin-left: -10px; content: " =
"; border-top-color: rgb(255, 255, 255); border-bottom-width: 0px; }

.popover.right > .arrow { top: 50%; left: -11px; margin-top: -11px; border-=
right-color: rgba(0, 0, 0, 0.25); border-left-width: 0px; }

.popover.right > .arrow::after { bottom: -10px; left: 1px; content: " "; bo=
rder-right-color: rgb(255, 255, 255); border-left-width: 0px; }

.popover.bottom > .arrow { top: -11px; left: 50%; margin-left: -11px; borde=
r-top-width: 0px; border-bottom-color: rgba(0, 0, 0, 0.25); }

.popover.bottom > .arrow::after { top: 1px; margin-left: -10px; content: " =
"; border-top-width: 0px; border-bottom-color: rgb(255, 255, 255); }

.popover.left > .arrow { top: 50%; right: -11px; margin-top: -11px; border-=
right-width: 0px; border-left-color: rgba(0, 0, 0, 0.25); }

.popover.left > .arrow::after { right: 1px; bottom: -10px; content: " "; bo=
rder-right-width: 0px; border-left-color: rgb(255, 255, 255); }

.carousel { position: relative; }

.carousel-inner { position: relative; width: 100%; overflow: hidden; }

.carousel-inner > .item { position: relative; display: none; transition: le=
ft 0.6s ease-in-out; }

.carousel-inner > .item > a > img, .carousel-inner > .item > img { line-hei=
ght: 1; }

@media not all, (-webkit-transform-3d) {
  .carousel-inner > .item { transition: transform 0.6s ease-in-out; backfac=
e-visibility: hidden; perspective: 1000px; }
  .carousel-inner > .item.active.right, .carousel-inner > .item.next { left=
: 0px; transform: translate3d(100%, 0px, 0px); }
  .carousel-inner > .item.active.left, .carousel-inner > .item.prev { left:=
 0px; transform: translate3d(-100%, 0px, 0px); }
  .carousel-inner > .item.active, .carousel-inner > .item.next.left, .carou=
sel-inner > .item.prev.right { left: 0px; transform: translate3d(0px, 0px, =
0px); }
}

.carousel-inner > .active, .carousel-inner > .next, .carousel-inner > .prev=
 { display: block; }

.carousel-inner > .active { left: 0px; }

.carousel-inner > .next, .carousel-inner > .prev { position: absolute; top:=
 0px; width: 100%; }

.carousel-inner > .next { left: 100%; }

.carousel-inner > .prev { left: -100%; }

.carousel-inner > .next.left, .carousel-inner > .prev.right { left: 0px; }

.carousel-inner > .active.left { left: -100%; }

.carousel-inner > .active.right { left: 100%; }

.carousel-control { position: absolute; top: 0px; bottom: 0px; left: 0px; w=
idth: 15%; font-size: 20px; color: rgb(255, 255, 255); text-align: center; =
text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; background-color: rgba(0, 0, 0=
, 0); opacity: 0.5; }

.carousel-control.left { background-image: linear-gradient(to right, rgba(0=
, 0, 0, 0.5) 0px, rgba(0, 0, 0, 0) 100%); background-repeat: repeat-x; }

.carousel-control.right { right: 0px; left: auto; background-image: linear-=
gradient(to right, rgba(0, 0, 0, 0) 0px, rgba(0, 0, 0, 0.5) 100%); backgrou=
nd-repeat: repeat-x; }

.carousel-control:focus, .carousel-control:hover { color: rgb(255, 255, 255=
); text-decoration: none; outline: 0px; opacity: 0.9; }

.carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-che=
vron-right, .carousel-control .icon-next, .carousel-control .icon-prev { po=
sition: absolute; top: 50%; z-index: 5; display: inline-block; margin-top: =
-10px; }

.carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev { l=
eft: 50%; margin-left: -10px; }

.carousel-control .glyphicon-chevron-right, .carousel-control .icon-next { =
right: 50%; margin-right: -10px; }

.carousel-control .icon-next, .carousel-control .icon-prev { width: 20px; h=
eight: 20px; font-family: serif; line-height: 1; }

.carousel-control .icon-prev::before { content: "=E2=80=B9"; }

.carousel-control .icon-next::before { content: "=E2=80=BA"; }

.carousel-indicators { position: absolute; bottom: 10px; left: 50%; z-index=
: 15; width: 60%; padding-left: 0px; margin-left: -30%; text-align: center;=
 list-style: none; }

.carousel-indicators li { display: inline-block; width: 10px; height: 10px;=
 margin: 1px; text-indent: -999px; cursor: pointer; background-color: rgba(=
0, 0, 0, 0); border: 1px solid rgb(255, 255, 255); border-radius: 10px; }

.carousel-indicators .active { width: 12px; height: 12px; margin: 0px; back=
ground-color: rgb(255, 255, 255); }

.carousel-caption { position: absolute; right: 15%; bottom: 20px; left: 15%=
; z-index: 10; padding-top: 20px; padding-bottom: 20px; color: rgb(255, 255=
, 255); text-align: center; text-shadow: rgba(0, 0, 0, 0.6) 0px 1px 2px; }

.carousel-caption .btn { text-shadow: none; }

@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left, .carousel-control .glyphicon-c=
hevron-right, .carousel-control .icon-next, .carousel-control .icon-prev { =
width: 30px; height: 30px; margin-top: -10px; font-size: 30px; }
  .carousel-control .glyphicon-chevron-left, .carousel-control .icon-prev {=
 margin-left: -10px; }
  .carousel-control .glyphicon-chevron-right, .carousel-control .icon-next =
{ margin-right: -10px; }
  .carousel-caption { right: 20%; left: 20%; padding-bottom: 30px; }
  .carousel-indicators { bottom: 20px; }
}

.btn-group-vertical > .btn-group::after, .btn-group-vertical > .btn-group::=
before, .btn-toolbar::after, .btn-toolbar::before, .clearfix::after, .clear=
fix::before, .container-fluid::after, .container-fluid::before, .container:=
:after, .container::before, .dl-horizontal dd::after, .dl-horizontal dd::be=
fore, .form-horizontal .form-group::after, .form-horizontal .form-group::be=
fore, .modal-footer::after, .modal-footer::before, .modal-header::after, .m=
odal-header::before, .nav::after, .nav::before, .navbar-collapse::after, .n=
avbar-collapse::before, .navbar-header::after, .navbar-header::before, .nav=
bar::after, .navbar::before, .pager::after, .pager::before, .panel-body::af=
ter, .panel-body::before, .row::after, .row::before { display: table; conte=
nt: " "; }

.btn-group-vertical > .btn-group::after, .btn-toolbar::after, .clearfix::af=
ter, .container-fluid::after, .container::after, .dl-horizontal dd::after, =
.form-horizontal .form-group::after, .modal-footer::after, .modal-header::a=
fter, .nav::after, .navbar-collapse::after, .navbar-header::after, .navbar:=
:after, .pager::after, .panel-body::after, .row::after { clear: both; }

.center-block { display: block; margin-right: auto; margin-left: auto; }

.pull-right { float: right !important; }

.pull-left { float: left !important; }

.hide { display: none !important; }

.show { display: block !important; }

.invisible { visibility: hidden; }

.text-hide { font: 0px/0 a; color: transparent; text-shadow: none; backgrou=
nd-color: transparent; border: 0px; }

.hidden { display: none !important; }

.affix { position: fixed; }

.visible-lg, .visible-md, .visible-sm, .visible-xs { display: none !importa=
nt; }

.visible-lg-block, .visible-lg-inline, .visible-lg-inline-block, .visible-m=
d-block, .visible-md-inline, .visible-md-inline-block, .visible-sm-block, .=
visible-sm-inline, .visible-sm-inline-block, .visible-xs-block, .visible-xs=
-inline, .visible-xs-inline-block { display: none !important; }

@media (max-width: 767px) {
  .visible-xs { display: block !important; }
  table.visible-xs { display: table !important; }
  tr.visible-xs { display: table-row !important; }
  td.visible-xs, th.visible-xs { display: table-cell !important; }
}

@media (max-width: 767px) {
  .visible-xs-block { display: block !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline { display: inline !important; }
}

@media (max-width: 767px) {
  .visible-xs-inline-block { display: inline-block !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm { display: block !important; }
  table.visible-sm { display: table !important; }
  tr.visible-sm { display: table-row !important; }
  td.visible-sm, th.visible-sm { display: table-cell !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-block { display: block !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-inline { display: inline !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .visible-sm-inline-block { display: inline-block !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md { display: block !important; }
  table.visible-md { display: table !important; }
  tr.visible-md { display: table-row !important; }
  td.visible-md, th.visible-md { display: table-cell !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-block { display: block !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-inline { display: inline !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .visible-md-inline-block { display: inline-block !important; }
}

@media (min-width: 1200px) {
  .visible-lg { display: block !important; }
  table.visible-lg { display: table !important; }
  tr.visible-lg { display: table-row !important; }
  td.visible-lg, th.visible-lg { display: table-cell !important; }
}

@media (min-width: 1200px) {
  .visible-lg-block { display: block !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline { display: inline !important; }
}

@media (min-width: 1200px) {
  .visible-lg-inline-block { display: inline-block !important; }
}

@media (max-width: 767px) {
  .hidden-xs { display: none !important; }
}

@media (max-width: 991px) and (min-width: 768px) {
  .hidden-sm { display: none !important; }
}

@media (max-width: 1199px) and (min-width: 992px) {
  .hidden-md { display: none !important; }
}

@media (min-width: 1200px) {
  .hidden-lg { display: none !important; }
}

.visible-print { display: none !important; }

@media print {
  .visible-print { display: block !important; }
  table.visible-print { display: table !important; }
  tr.visible-print { display: table-row !important; }
  td.visible-print, th.visible-print { display: table-cell !important; }
}

.visible-print-block { display: none !important; }

@media print {
  .visible-print-block { display: block !important; }
}

.visible-print-inline { display: none !important; }

@media print {
  .visible-print-inline { display: inline !important; }
}

.visible-print-inline-block { display: none !important; }

@media print {
  .visible-print-inline-block { display: inline-block !important; }
}

@media print {
  .hidden-print { display: none !important; }
}
------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css?family=Inconsolata|Roboto:300,400,500|Work+Sans:400,700

@charset "utf-8";

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; src: local("Inconsolata Regular"), local("Inconsolata-Regular"), url("htt=
ps://fonts.gstatic.com/s/inconsolata/v16/QldKNThLqRwH-OJ1UHjlKGlW5qhWxg.wof=
f2") format("woff2"); unicode-range: U+102-103, U+110-111, U+1EA0-1EF9, U+2=
0AB; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; src: local("Inconsolata Regular"), local("Inconsolata-Regular"), url("htt=
ps://fonts.gstatic.com/s/inconsolata/v16/QldKNThLqRwH-OJ1UHjlKGlX5qhWxg.wof=
f2") format("woff2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020,=
 U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inconsolata; font-style: normal; font-weight: 400=
; src: local("Inconsolata Regular"), local("Inconsolata-Regular"), url("htt=
ps://fonts.gstatic.com/s/inconsolata/v16/QldKNThLqRwH-OJ1UHjlKGlZ5qg.woff2"=
) format("woff2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C=
6, U+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+221=
2, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2") format("woff2"); unico=
de-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-=
FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2") format("woff2"); unico=
de-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2") format("woff2"); unico=
de-range: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2") format("woff2"); unico=
de-range: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2") format("woff2"); unico=
de-range: U+102-103, U+110-111, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2") format("woff2"); unico=
de-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, =
U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 300; src=
: local("Roboto Light"), local("Roboto-Light"), url("https://fonts.gstatic.=
com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fBBc4.woff2") format("woff2"); unicode-=
range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206=
F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; =
}

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu72xKOzY.woff2") format("woff2"); unicode-range=
: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu5mxKOzY.woff2") format("woff2"); unicode-range=
: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu7mxKOzY.woff2") format("woff2"); unicode-range=
: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu4WxKOzY.woff2") format("woff2"); unicode-range=
: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu7WxKOzY.woff2") format("woff2"); unicode-range=
: U+102-103, U+110-111, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu7GxKOzY.woff2") format("woff2"); unicode-range=
: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, =
U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 400; src=
: local("Roboto"), local("Roboto-Regular"), url("https://fonts.gstatic.com/=
s/roboto/v18/KFOmCnqEu92Fr1Mu4mxK.woff2") format("woff2"); unicode-range: U=
+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-206F, U+207=
4, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fCRc4EsA.woff2") format("woff2"); uni=
code-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2=
E-FE2F; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fABc4EsA.woff2") format("woff2"); uni=
code-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fCBc4EsA.woff2") format("woff2"); uni=
code-range: U+1F00-1FFF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fBxc4EsA.woff2") format("woff2"); uni=
code-range: U+370-3FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fCxc4EsA.woff2") format("woff2"); uni=
code-range: U+102-103, U+110-111, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fChc4EsA.woff2") format("woff2"); uni=
code-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF=
, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Roboto; font-style: normal; font-weight: 500; src=
: local("Roboto Medium"), local("Roboto-Medium"), url("https://fonts.gstati=
c.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fBBc4.woff2") format("woff2"); unicod=
e-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2000-2=
06F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD=
; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 400=
; src: local("Work Sans"), local("WorkSans-Regular"), url("https://fonts.gs=
tatic.com/s/worksans/v3/QGYsz_wNahGAdqQ43Rh_cqDpp_k.woff2") format("woff2")=
; unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD=
-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 400=
; src: local("Work Sans"), local("WorkSans-Regular"), url("https://fonts.gs=
tatic.com/s/worksans/v3/QGYsz_wNahGAdqQ43Rh_fKDp.woff2") format("woff2"); u=
nicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+2=
000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U=
+FFFD; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: local("Work Sans Bold"), local("WorkSans-Bold"), url("https://fonts.=
gstatic.com/s/worksans/v3/QGYpz_wNahGAdqQ43Rh3x4X8lthN2fk.woff2") format("w=
off2"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0-20AB, =
U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: "Work Sans"; font-style: normal; font-weight: 700=
; src: local("Work Sans Bold"), local("WorkSans-Bold"), url("https://fonts.=
gstatic.com/s/worksans/v3/QGYpz_wNahGAdqQ43Rh3x4X8mNhN.woff2") format("woff=
2"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2D=
C, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+F=
EFF, U+FFFD; }
------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/inconsolata/v16/QldKNThLqRwH-OJ1UHjlKGlZ5qg.woff2

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

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmSU5fBBc4.woff2

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

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/roboto/v18/KFOmCnqEu92Fr1Mu4mxK.woff2

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
FN4qi4Oirs04KAo=

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/roboto/v18/KFOlCnqEu92Fr1MmEU9fBBc4.woff2

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

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/worksans/v3/QGYsz_wNahGAdqQ43Rh_fKDp.woff2

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

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: font/woff2
Content-Transfer-Encoding: base64
Content-Location: https://fonts.gstatic.com/s/worksans/v3/QGYpz_wNahGAdqQ43Rh3x4X8mNhN.woff2

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
j/kFyyd/47O+FVT5hm33zgsA

------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://inst.eecs.berkeley.edu/~cs61a/sp18/assets/css/style.css

@charset "utf-8";

body { font-family: "Work Sans", sans-serif; font-size: 1.5em; }

code, kbd, pre, samp { font-family: Inconsolata, monospace; font-size: 100%=
; }

h1, h2, h3, h4, .navbar { font-family: Roboto, sans-serif; margin-top: 1em;=
 font-weight: 500; }

h1::before, h2::before, h3::before, h4::before { content: " "; display: blo=
ck; height: 60px; margin-top: -60px; visibility: hidden; }

.navbar { margin-top: 0px; }

h1 { font-weight: lighter; color: rgb(0, 114, 193); padding-top: 1.2em; pad=
ding-bottom: 0.2em; border-bottom: 1px solid rgb(238, 238, 238); }

h2, .navbar { font-weight: 400; }

section, footer { margin: 2em 0px; }

header { padding-bottom: 0.5em; margin: 3.75em 0px 1em; }

header h1 { color: rgb(0, 114, 193); }

footer { margin-bottom: 6em; }

li p { margin: 0px; }

a, button, .btn { outline: 0px; }

a:hover { text-decoration: none; }

blockquote { background-color: rgb(230, 243, 255); border-left: solid rgb(0=
, 114, 193); font-size: inherit; }

abbr { font-variant: small-caps; letter-spacing: 0.1em; text-transform: low=
ercase; }

::selection { background: rgb(255, 242, 0); }

.noselect { user-select: none; }

.disabled { display: none; }

.badge { background-color: rgb(0, 114, 193); color: rgb(255, 255, 255); }

.inline-block { display: inline-block; }

.list-inline { display: inline; margin-bottom: 0px; }

.list-inline li { padding-left: 3px; padding-right: 0px; }

.assignment-text { padding-right: 5px; display: inline; }

pre code { word-wrap: normal; white-space: pre; }

code { color: rgb(0, 114, 193); }

.assignments { text-align: center; }

#announcements-pager { min-height: 10em; }

.announcement { display: none; position: relative; }

.announcement .header { font-family: Roboto, sans-serif; margin-top: 20px; =
font-weight: 500; font-size: 24px; margin-bottom: 10px; line-height: 1.1; c=
olor: inherit; }

.announcement .prev, .announcement .next { color: rgb(204, 204, 204); curso=
r: pointer; font-size: 1.5em; position: absolute; top: 2.5em; }

.announcement .prev { left: -2em; padding: 0.75em 0.75em 0.75em 1em; }

.announcement .next { padding: 0.75em 1em 0.75em 0.75em; right: -2em; }

.announcement .prev:hover, .announcement .next:hover { color: rgb(85, 85, 8=
5); }

@media (max-width: 991px) {
  .announcement { padding: 0px 2em; overflow-x: hidden; }
  .announcement ul, .announcement ol { padding-left: 1.5em; }
  .announcement .prev { left: -1em; }
  .announcement .next { right: -1em; }
}

.highlight-resources { display: flex; }

.highlight-resource { flex: 1 0 50%; }

.topic { margin: 2em 0px; position: relative; }

.resource-topic { margin: 0px; }

.topic header, .topic section { margin: 0px; }

.topic header .title { margin-left: 40px; }

.topic header .examq-header { margin-left: 0px; }

.topic header .title .header { margin-left: 0px; margin-top: 1em; padding-t=
op: 0px; font-weight: normal; font-family: Roboto, sans-serif; font-size: 3=
0px; margin-bottom: 10px; line-height: 1.1; color: inherit; }

.topic header .exam-header { margin-left: 0px; margin-top: 1em; padding-top=
: 0px; font-weight: normal; font-family: Roboto, sans-serif; font-size: 30p=
x; margin-bottom: 10px; line-height: 1.1; color: inherit; }

.topic header .exam-header a { color: rgb(51, 51, 51); }

.topic header a:focus { text-decoration: none; }

.topic header .glyphicon { transition: transform 0.2s; font-size: 65%; font=
-weight: 400; line-height: 1; color: rgb(119, 119, 119); }

.topic header .glyphicon.up { transform: rotate(-180deg); }

.topic header .glyphicon.down { transform: none; }

.topic header .list-inline { margin: 0px; line-height: 1.5; }

.topic header .list-inline li { padding: 0px; }

.topic header .list-inline li a, .topic header .list-inline li span { botto=
m: 0.15em; font-weight: normal; position: relative; }

.topic main { padding: 0px 1em; border: 1px solid rgb(238, 238, 238); backg=
round-color: rgb(250, 250, 250); }

.topic .resource { padding: 0px; border: none; background-color: inherit; }

.topic .timeline { padding: 1em 0px; }

.timeline table { width: 100%; }

.timeline .week { padding: 1em; width: 100%; }

.timeline .week ~ .week { border-top: 1px solid rgb(221, 221, 221); }

.timeline .week td { vertical-align: top; }

.topic .list-inline li { padding-right: 0px; }

.start-date { position: absolute; line-height: 0.5em; left: 0px; }

.day { list-style: none; padding: 10px; margin-bottom: 0px; position: relat=
ive; min-height: 32px; min-width: 290px; flex: 0 0 33.333%; }

.date { background-color: rgb(204, 204, 204); padding: 0px 0.75em; height: =
24px; line-height: 24px; border-radius: 12px; color: white; display: inline=
-block; }

.date.active { background-color: rgb(0, 114, 193); }

.line { position: absolute; border: 5.5px solid rgb(204, 204, 204); border-=
radius: 5.5px; left: 21px; bottom: 20px; top: 43px; }

.event { color: rgb(170, 170, 170); margin-left: 28px; padding: 5px 0px; po=
sition: relative; }

.event::before { color: rgb(255, 255, 255); content: "=E2=80=A2"; font-size=
: 2em; left: -18px; line-height: 1em; position: absolute; top: 0px; }

.due { background-color: rgb(204, 204, 204); vertical-align: top; }

.past .date, .past .due { background-color: rgb(164, 204, 235); }

.active .date, .active .due { background-color: rgb(0, 114, 193); }

.past .line { border-color: rgb(164, 204, 235); }

.active .line { border-color: rgb(0, 114, 193); }

.past .event, .active .event { color: rgb(51, 51, 51); }

#flowchart-wrapper { width: 820px; height: 300px; position: relative; margi=
n-top: -30px; }

#flowchart { width: 100%; height: 100%; position: absolute; left: 0px; top:=
 0px; z-index: 999; }

.resources { display: flex; flex-flow: wrap; }

.resource { flex: 1 0 33.333%; min-width: 290px; }

.resource h3, .readings h3 { text-transform: uppercase; letter-spacing: 3px=
; }

.readings h3, .readings ul { display: inline-block; }

.resource .list-unstyled { line-height: 1.8; }

.resource .list-inline { display: inline-block; margin-left: 0px; }

@media (max-width: 991px) {
  .topic .day { min-width: 0px; }
}

@media (max-width: 600px) {
  .timeline table, .timeline table tr.week, .timeline table td { display: i=
nline-block; }
}

@media (max-width: 370px) {
  .topic main { padding: 0px; }
}

.label-outline { background-color: transparent; border: 1px solid rgb(204, =
204, 204); color: rgb(204, 204, 204); padding: 0.2em 0.4em 0.1em; }

a.label-outline:hover, a.label-outline:focus { background-color: rgb(0, 114=
, 193); color: rgb(255, 255, 255); }

a.label-outline { color: rgb(0, 114, 193); border: 1px solid rgb(0, 114, 19=
3); }

.staffer { margin: 1em 0px; }

.staffer ul { color: rgb(85, 85, 85); list-style: none; padding-left: 0px; =
}

.staffer-img { padding-top: 24px; }

@media (max-width: 767px) {
  .staffer .section { font-size: smaller; }
}

.bio { font-size: 13px; }

.table-responsive { overflow-x: visible; margin-top: -5px; }

table#calendar { border-collapse: collapse; margin-left: auto; margin-right=
: auto; }

table#calendar th { color: rgb(0, 114, 193); text-align: center; border-top=
: none; vertical-align: middle; }

table#calendar td { border: 1px solid rgb(255, 255, 255); padding: 6px; ver=
tical-align: middle; }

table#calendar tr:not(:first-child) { background-color: rgb(193, 214, 227);=
 }

table#calendar td.weeknum { text-align: center; }

table#calendar td.reading ul { list-style-type: none; margin: 0px; padding:=
 0px; }

table#calendar td.even { background-color: rgb(176, 196, 222); }

table#calendar tr:hover td:not(.weeknum) { background-color: rgb(176, 196, =
222); }

.navbar-default { background-color: rgb(0, 114, 193); border: none; top: 0p=
x; position: fixed; right: 0px; left: 0px; }

.navbar-default .navbar-brand { color: rgb(236, 240, 241); font-weight: bol=
d; }

.navbar-default .navbar-brand:hover, .navbar-default .navbar-brand:focus { =
color: rgb(255, 255, 255); }

.navbar-default .navbar-text { color: rgb(236, 240, 241); }

.navbar-default .navbar-nav > li > a { color: rgb(236, 240, 241); }

.navbar-default .navbar-nav > li > a:hover, .navbar-default .navbar-nav > l=
i > a:focus { color: rgb(255, 255, 255); }

.navbar-default .navbar-nav > .active > a, .navbar-default .navbar-nav > .a=
ctive > a:hover, .navbar-default .navbar-nav > .active > a:focus { color: r=
gb(255, 255, 255); background-color: rgb(0, 133, 225); }

.navbar-default .navbar-nav > .open > a, .navbar-default .navbar-nav > .ope=
n > a:hover, .navbar-default .navbar-nav > .open > a:focus { color: rgb(255=
, 255, 255); background-color: rgb(0, 133, 225); }

.navbar-default .navbar-toggle { border: none; }

.navbar-default .navbar-toggle:hover, .navbar-default .navbar-toggle:focus =
{ background-color: rgb(0, 133, 225); }

.navbar-default .navbar-toggle .icon-bar { background-color: rgb(236, 240, =
241); }

.navbar-default .navbar-collapse, .navbar-default .navbar-form { border: no=
ne; }

.navbar-default .navbar-link { color: rgb(236, 240, 241); }

.navbar-default .navbar-link:hover { color: rgb(255, 255, 255); }

@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a { color: rgb(23=
6, 240, 241); }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover, .navbar-=
default .navbar-nav .open .dropdown-menu > li > a:focus { color: rgb(255, 2=
55, 255); }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a, .navbar-d=
efault .navbar-nav .open .dropdown-menu > .active > a:hover, .navbar-defaul=
t .navbar-nav .open .dropdown-menu > .active > a:focus { color: rgb(255, 25=
5, 255); background-color: rgb(0, 133, 225); }
}

.sticky { position: sticky; top: 5em; height: 85vh; overflow-y: auto; }

.sidebar { font-size: 0.9em; }

.sidebar > ul > li > a { padding: 1px 10px; }

.sidebar > ul > ul > li > a { margin-left: 20px; padding: 1px 10px; }

.sidebar > ul > ul > ul > li > a { margin-left: 40px; padding: 1px 10px; }

.sidebar > ul > ul > ul > ul > li > a { margin-left: 60px; padding: 1px 10p=
x; }

.sidebar li > a:hover { background-color: transparent; }

.sidebar a:visited { color: rgb(0, 114, 193); }

.sidebar li.active { background-color: rgb(0, 114, 193); border-radius: 2px=
; }

.sidebar li.active a { color: rgb(255, 255, 255); }

.btn-outline { background-color: rgb(255, 255, 255); border: 1px solid rgb(=
0, 114, 193); color: rgb(0, 114, 193); cursor: pointer; margin: 5px; }

.btn-outline:focus { color: rgb(0, 114, 193); }

.btn-outline:hover { background-color: rgb(0, 114, 193); border: 1px solid =
rgb(0, 114, 193); color: rgb(255, 255, 255); }

.btn-outline:active { box-shadow: none; }

.toggle { margin-bottom: 1em; }

.toggle, .solution { display: none; }

.resource .list-inline { margin-bottom: 0px; }
------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://inst.eecs.berkeley.edu/~cs61a/sp18/assets/css/mono-blue.css

@charset "utf-8";

.hljs { display: block; overflow-x: auto; background: inherit; text-size-ad=
just: none; }

.hljs, .hljs-list .hljs-built_in { color: rgb(0, 25, 58); }

.hljs-keyword, .hljs-title, .hljs-important, .hljs-request, .hljs-header, .=
hljs-javadoctag { font-weight: bold; }

.hljs-comment, .hljs-chunk { color: rgb(115, 129, 145); }

.hljs-string, .hljs-title, .hljs-parent, .hljs-built_in, .hljs-literal, .hl=
js-filename, .hljs-value, .hljs-addition, .hljs-tag, .hljs-argument, .hljs-=
link_label, .hljs-blockquote, .hljs-header, .hljs-name { color: rgb(0, 72, =
171); }

.hljs-decorator, .hljs-prompt, .hljs-yardoctag, .hljs-subst, .hljs-symbol, =
.hljs-doctype, .hljs-regexp, .hljs-preprocessor, .hljs-pragma, .hljs-pi, .h=
ljs-attribute, .hljs-attr_selector, .hljs-javadoc, .hljs-xmlDocTag, .hljs-d=
eletion, .hljs-shebang, .hljs-string .hljs-variable, .hljs-link_url, .hljs-=
bullet, .hljs-sqbracket, .hljs-phony { color: rgb(76, 129, 201); }
------MultipartBoundary--a7HLXD0BoVoDo0M6y8mfw7q9kYMSSjbtaSIjHVP8RT------
